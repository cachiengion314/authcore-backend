# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

enum ActiveStatus {
  Active
  Locked
}

type Auth {
  """JWT access token"""
  accessToken: JWT!

  """JWT refresh token"""
  refreshToken: JWT!
  user: User!
}

type Award {
  _count: AwardCount!
  code: String
  createdAt: DateTime!
  createdBy: User
  createdById: String
  createdUserAward: [UserAward!]
  deletedAt: DateTime
  description: String
  id: ID!
  name: String!
  sortOrder: Int!
  status: ActiveStatus!
  thumbnailUrl: String
  updatedAt: DateTime!
  updatedBy: User
  updatedById: String
}

type AwardCount {
  createdUserAward: Int!
}

input AwardCreateManyCreatedByInput {
  code: String
  description: String
  name: String!
  sortOrder: Int
  status: ActiveStatus
  thumbnailUrl: String
}

input AwardCreateManyCreatedByInputEnvelope {
  data: [AwardCreateManyCreatedByInput!]!
  skipDuplicates: Boolean
}

input AwardCreateManyUpdatedByInput {
  code: String
  description: String
  name: String!
  sortOrder: Int
  status: ActiveStatus
  thumbnailUrl: String
}

input AwardCreateManyUpdatedByInputEnvelope {
  data: [AwardCreateManyUpdatedByInput!]!
  skipDuplicates: Boolean
}

input AwardCreateNestedManyWithoutCreatedByInput {
  connect: [AwardWhereUniqueInput!]
}

input AwardCreateNestedManyWithoutUpdatedByInput {
  connect: [AwardWhereUniqueInput!]
}

input AwardCreateNestedOneWithoutCreatedUserAwardInput {
  connect: AwardWhereUniqueInput
}

input AwardCreateOrConnectWithoutCreatedByInput {
  create: AwardCreateWithoutCreatedByInput!
  where: AwardWhereUniqueInput!
}

input AwardCreateOrConnectWithoutCreatedUserAwardInput {
  create: AwardCreateWithoutCreatedUserAwardInput!
  where: AwardWhereUniqueInput!
}

input AwardCreateOrConnectWithoutUpdatedByInput {
  create: AwardCreateWithoutUpdatedByInput!
  where: AwardWhereUniqueInput!
}

input AwardCreateWithoutCreatedByInput {
  code: String
  createdUserAward: UserAwardCreateNestedManyWithoutAwardInput
  description: String
  name: String!
  sortOrder: Int
  status: ActiveStatus
  thumbnailUrl: String
}

input AwardCreateWithoutCreatedUserAwardInput {
  code: String
  description: String
  name: String!
  sortOrder: Int
  status: ActiveStatus
  thumbnailUrl: String
}

input AwardCreateWithoutUpdatedByInput {
  code: String
  createdUserAward: UserAwardCreateNestedManyWithoutAwardInput
  description: String
  name: String!
  sortOrder: Int
  status: ActiveStatus
  thumbnailUrl: String
}

input AwardListRelationFilter {
  every: AwardWhereInput
  none: AwardWhereInput
  some: AwardWhereInput
}

input AwardOrderByRelationAggregateInput {
  _count: SortOrder
}

input AwardScalarWhereInput {
  AND: [AwardScalarWhereInput!]
  NOT: [AwardScalarWhereInput!]
  OR: [AwardScalarWhereInput!]
  code: StringNullableFilter
  createdAt: DateTimeFilter
  createdById: StringNullableFilter
  deletedAt: [DateTimeNullableFilter!] = null
  description: StringNullableFilter
  id: StringFilter
  name: StringFilter
  sortOrder: IntFilter
  status: EnumActiveStatusFilter
  thumbnailUrl: StringNullableFilter
  updatedAt: DateTimeFilter
  updatedById: StringNullableFilter
}

input AwardUpdateManyMutationInput {
  code: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  sortOrder: IntFieldUpdateOperationsInput
  status: EnumActiveStatusFieldUpdateOperationsInput
  thumbnailUrl: NullableStringFieldUpdateOperationsInput
}

input AwardUpdateManyWithWhereWithoutCreatedByInput {
  data: AwardUpdateManyMutationInput!
  where: AwardScalarWhereInput!
}

input AwardUpdateManyWithWhereWithoutUpdatedByInput {
  data: AwardUpdateManyMutationInput!
  where: AwardScalarWhereInput!
}

input AwardUpdateManyWithoutCreatedByNestedInput {
  connect: [AwardWhereUniqueInput!]
  connectOrCreate: [AwardCreateOrConnectWithoutCreatedByInput!]
  create: [AwardCreateWithoutCreatedByInput!]
  createMany: AwardCreateManyCreatedByInputEnvelope
  delete: [AwardWhereUniqueInput!]
  deleteMany: [AwardScalarWhereInput!]
  disconnect: [AwardWhereUniqueInput!]
  set: [AwardWhereUniqueInput!]
  update: [AwardUpdateWithWhereUniqueWithoutCreatedByInput!]
  updateMany: [AwardUpdateManyWithWhereWithoutCreatedByInput!]
  upsert: [AwardUpsertWithWhereUniqueWithoutCreatedByInput!]
}

input AwardUpdateManyWithoutUpdatedByNestedInput {
  connect: [AwardWhereUniqueInput!]
  connectOrCreate: [AwardCreateOrConnectWithoutUpdatedByInput!]
  create: [AwardCreateWithoutUpdatedByInput!]
  createMany: AwardCreateManyUpdatedByInputEnvelope
  delete: [AwardWhereUniqueInput!]
  deleteMany: [AwardScalarWhereInput!]
  disconnect: [AwardWhereUniqueInput!]
  set: [AwardWhereUniqueInput!]
  update: [AwardUpdateWithWhereUniqueWithoutUpdatedByInput!]
  updateMany: [AwardUpdateManyWithWhereWithoutUpdatedByInput!]
  upsert: [AwardUpsertWithWhereUniqueWithoutUpdatedByInput!]
}

input AwardUpdateOneRequiredWithoutCreatedUserAwardNestedInput {
  connect: AwardWhereUniqueInput
  connectOrCreate: AwardCreateOrConnectWithoutCreatedUserAwardInput
  create: AwardCreateWithoutCreatedUserAwardInput
  update: AwardUpdateWithoutCreatedUserAwardInput
  upsert: AwardUpsertWithoutCreatedUserAwardInput
}

input AwardUpdateWithWhereUniqueWithoutCreatedByInput {
  data: AwardUpdateWithoutCreatedByInput!
  where: AwardWhereUniqueInput!
}

input AwardUpdateWithWhereUniqueWithoutUpdatedByInput {
  data: AwardUpdateWithoutUpdatedByInput!
  where: AwardWhereUniqueInput!
}

input AwardUpdateWithoutCreatedByInput {
  code: NullableStringFieldUpdateOperationsInput
  createdUserAward: UserAwardUpdateManyWithoutAwardNestedInput
  description: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  sortOrder: IntFieldUpdateOperationsInput
  status: EnumActiveStatusFieldUpdateOperationsInput
  thumbnailUrl: NullableStringFieldUpdateOperationsInput
}

input AwardUpdateWithoutCreatedUserAwardInput {
  code: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  sortOrder: IntFieldUpdateOperationsInput
  status: EnumActiveStatusFieldUpdateOperationsInput
  thumbnailUrl: NullableStringFieldUpdateOperationsInput
}

input AwardUpdateWithoutUpdatedByInput {
  code: NullableStringFieldUpdateOperationsInput
  createdUserAward: UserAwardUpdateManyWithoutAwardNestedInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  sortOrder: IntFieldUpdateOperationsInput
  status: EnumActiveStatusFieldUpdateOperationsInput
  thumbnailUrl: NullableStringFieldUpdateOperationsInput
}

input AwardUpsertWithWhereUniqueWithoutCreatedByInput {
  create: AwardCreateWithoutCreatedByInput!
  update: AwardUpdateWithoutCreatedByInput!
  where: AwardWhereUniqueInput!
}

input AwardUpsertWithWhereUniqueWithoutUpdatedByInput {
  create: AwardCreateWithoutUpdatedByInput!
  update: AwardUpdateWithoutUpdatedByInput!
  where: AwardWhereUniqueInput!
}

input AwardUpsertWithoutCreatedUserAwardInput {
  create: AwardCreateWithoutCreatedUserAwardInput!
  update: AwardUpdateWithoutCreatedUserAwardInput!
}

input AwardWhereInput {
  AND: [AwardWhereInput!]
  NOT: [AwardWhereInput!]
  OR: [AwardWhereInput!]
  code: StringNullableFilter
  createdAt: DateTimeFilter
  createdBy: UserWhereInput
  createdById: StringNullableFilter
  createdUserAward: UserAwardListRelationFilter
  deletedAt: [DateTimeNullableFilter!] = null
  description: StringNullableFilter
  id: StringFilter
  name: StringFilter
  sortOrder: IntFilter
  status: EnumActiveStatusFilter
  thumbnailUrl: StringNullableFilter
  updatedAt: DateTimeFilter
  updatedBy: UserWhereInput
  updatedById: StringNullableFilter
}

input AwardWhereUniqueInput {
  id: String
}

input BoolFieldUpdateOperationsInput {
  set: Boolean
}

input BoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input DateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input DateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input DateTimeNullableFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableFilter
  notIn: [DateTime!]
}

type Department {
  _count: DepartmentCount!
  childs: [Department!]
  code: String
  createdAt: DateTime!
  createdBy: User
  createdById: String
  createdFeedbacks: [Feedback!]
  deletedAt: DateTime
  description: String
  id: ID!
  name: String!
  parent: Department
  parentId: String
  sortOrder: Int!
  status: ActiveStatus!
  updatedAt: DateTime!
  updatedBy: User
  updatedById: String
  users: [User!]
}

type DepartmentConnection {
  nodes: [Department!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type DepartmentCount {
  childs: Int!
  createdFeedbacks: Int!
  users: Int!
}

input DepartmentCreateInput {
  childs: DepartmentCreateNestedManyWithoutParentInput
  code: String
  createdFeedbacks: FeedbackCreateNestedManyWithoutDepartmentInput
  description: String
  name: String!
  parent: DepartmentCreateNestedOneWithoutChildsInput
  sortOrder: Int
  status: ActiveStatus
  users: UserCreateNestedManyWithoutDepartmentInput
}

input DepartmentCreateManyCreatedByInput {
  code: String
  description: String
  name: String!
  parentId: String
  sortOrder: Int
  status: ActiveStatus
}

input DepartmentCreateManyCreatedByInputEnvelope {
  data: [DepartmentCreateManyCreatedByInput!]!
  skipDuplicates: Boolean
}

input DepartmentCreateManyInput {
  code: String
  description: String
  name: String!
  parentId: String
  sortOrder: Int
  status: ActiveStatus
}

input DepartmentCreateManyParentInput {
  code: String
  description: String
  name: String!
  sortOrder: Int
  status: ActiveStatus
}

input DepartmentCreateManyParentInputEnvelope {
  data: [DepartmentCreateManyParentInput!]!
  skipDuplicates: Boolean
}

input DepartmentCreateManyUpdatedByInput {
  code: String
  description: String
  name: String!
  parentId: String
  sortOrder: Int
  status: ActiveStatus
}

input DepartmentCreateManyUpdatedByInputEnvelope {
  data: [DepartmentCreateManyUpdatedByInput!]!
  skipDuplicates: Boolean
}

input DepartmentCreateNestedManyWithoutCreatedByInput {
  connect: [DepartmentWhereUniqueInput!]
}

input DepartmentCreateNestedManyWithoutParentInput {
  connect: [DepartmentWhereUniqueInput!]
}

input DepartmentCreateNestedManyWithoutUpdatedByInput {
  connect: [DepartmentWhereUniqueInput!]
}

input DepartmentCreateNestedOneWithoutChildsInput {
  connect: DepartmentWhereUniqueInput
}

input DepartmentCreateNestedOneWithoutCreatedFeedbacksInput {
  connect: DepartmentWhereUniqueInput
}

input DepartmentCreateNestedOneWithoutUsersInput {
  connect: DepartmentWhereUniqueInput
}

input DepartmentCreateOrConnectWithoutChildsInput {
  create: DepartmentCreateWithoutChildsInput!
  where: DepartmentWhereUniqueInput!
}

input DepartmentCreateOrConnectWithoutCreatedByInput {
  create: DepartmentCreateWithoutCreatedByInput!
  where: DepartmentWhereUniqueInput!
}

input DepartmentCreateOrConnectWithoutCreatedFeedbacksInput {
  create: DepartmentCreateWithoutCreatedFeedbacksInput!
  where: DepartmentWhereUniqueInput!
}

input DepartmentCreateOrConnectWithoutParentInput {
  create: DepartmentCreateWithoutParentInput!
  where: DepartmentWhereUniqueInput!
}

input DepartmentCreateOrConnectWithoutUpdatedByInput {
  create: DepartmentCreateWithoutUpdatedByInput!
  where: DepartmentWhereUniqueInput!
}

input DepartmentCreateOrConnectWithoutUsersInput {
  create: DepartmentCreateWithoutUsersInput!
  where: DepartmentWhereUniqueInput!
}

input DepartmentCreateWithoutChildsInput {
  code: String
  createdFeedbacks: FeedbackCreateNestedManyWithoutDepartmentInput
  description: String
  name: String!
  parent: DepartmentCreateNestedOneWithoutChildsInput
  sortOrder: Int
  status: ActiveStatus
  users: UserCreateNestedManyWithoutDepartmentInput
}

input DepartmentCreateWithoutCreatedByInput {
  childs: DepartmentCreateNestedManyWithoutParentInput
  code: String
  createdFeedbacks: FeedbackCreateNestedManyWithoutDepartmentInput
  description: String
  name: String!
  parent: DepartmentCreateNestedOneWithoutChildsInput
  sortOrder: Int
  status: ActiveStatus
  users: UserCreateNestedManyWithoutDepartmentInput
}

input DepartmentCreateWithoutCreatedFeedbacksInput {
  childs: DepartmentCreateNestedManyWithoutParentInput
  code: String
  description: String
  name: String!
  parent: DepartmentCreateNestedOneWithoutChildsInput
  sortOrder: Int
  status: ActiveStatus
  users: UserCreateNestedManyWithoutDepartmentInput
}

input DepartmentCreateWithoutParentInput {
  childs: DepartmentCreateNestedManyWithoutParentInput
  code: String
  createdFeedbacks: FeedbackCreateNestedManyWithoutDepartmentInput
  description: String
  name: String!
  sortOrder: Int
  status: ActiveStatus
  users: UserCreateNestedManyWithoutDepartmentInput
}

input DepartmentCreateWithoutUpdatedByInput {
  childs: DepartmentCreateNestedManyWithoutParentInput
  code: String
  createdFeedbacks: FeedbackCreateNestedManyWithoutDepartmentInput
  description: String
  name: String!
  parent: DepartmentCreateNestedOneWithoutChildsInput
  sortOrder: Int
  status: ActiveStatus
  users: UserCreateNestedManyWithoutDepartmentInput
}

input DepartmentCreateWithoutUsersInput {
  childs: DepartmentCreateNestedManyWithoutParentInput
  code: String
  createdFeedbacks: FeedbackCreateNestedManyWithoutDepartmentInput
  description: String
  name: String!
  parent: DepartmentCreateNestedOneWithoutChildsInput
  sortOrder: Int
  status: ActiveStatus
}

input DepartmentListRelationFilter {
  every: DepartmentWhereInput
  none: DepartmentWhereInput
  some: DepartmentWhereInput
}

input DepartmentOrderByRelationAggregateInput {
  _count: SortOrder
}

input DepartmentOrderByWithRelationInput {
  childs: DepartmentOrderByRelationAggregateInput
  code: SortOrder
  createdAt: SortOrder
  createdBy: UserOrderByWithRelationInput
  createdById: SortOrder
  createdFeedbacks: FeedbackOrderByRelationAggregateInput
  deletedAt: SortOrder
  description: SortOrder
  id: SortOrder
  name: SortOrder
  parent: DepartmentOrderByWithRelationInput
  parentId: SortOrder
  sortOrder: SortOrder
  status: SortOrder
  updatedAt: SortOrder
  updatedBy: UserOrderByWithRelationInput
  updatedById: SortOrder
  users: UserOrderByRelationAggregateInput
}

enum DepartmentScalarFieldEnum {
  code
  createdAt
  createdById
  deletedAt
  description
  id
  name
  parentId
  sortOrder
  status
  updatedAt
  updatedById
}

input DepartmentScalarWhereInput {
  AND: [DepartmentScalarWhereInput!]
  NOT: [DepartmentScalarWhereInput!]
  OR: [DepartmentScalarWhereInput!]
  code: StringNullableFilter
  createdAt: DateTimeFilter
  createdById: StringNullableFilter
  deletedAt: [DateTimeNullableFilter!] = null
  description: StringNullableFilter
  id: StringFilter
  name: StringFilter
  parentId: StringNullableFilter
  sortOrder: IntFilter
  status: EnumActiveStatusFilter
  updatedAt: DateTimeFilter
  updatedById: StringNullableFilter
}

input DepartmentUpdateInput {
  childs: DepartmentUpdateManyWithoutParentNestedInput
  code: NullableStringFieldUpdateOperationsInput
  createdFeedbacks: FeedbackUpdateManyWithoutDepartmentNestedInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  parent: DepartmentUpdateOneWithoutChildsNestedInput
  sortOrder: IntFieldUpdateOperationsInput
  status: EnumActiveStatusFieldUpdateOperationsInput
  users: UserUpdateManyWithoutDepartmentNestedInput
}

input DepartmentUpdateManyMutationInput {
  code: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  sortOrder: IntFieldUpdateOperationsInput
  status: EnumActiveStatusFieldUpdateOperationsInput
}

input DepartmentUpdateManyWithWhereWithoutCreatedByInput {
  data: DepartmentUpdateManyMutationInput!
  where: DepartmentScalarWhereInput!
}

input DepartmentUpdateManyWithWhereWithoutParentInput {
  data: DepartmentUpdateManyMutationInput!
  where: DepartmentScalarWhereInput!
}

input DepartmentUpdateManyWithWhereWithoutUpdatedByInput {
  data: DepartmentUpdateManyMutationInput!
  where: DepartmentScalarWhereInput!
}

input DepartmentUpdateManyWithoutCreatedByNestedInput {
  connect: [DepartmentWhereUniqueInput!]
  connectOrCreate: [DepartmentCreateOrConnectWithoutCreatedByInput!]
  create: [DepartmentCreateWithoutCreatedByInput!]
  createMany: DepartmentCreateManyCreatedByInputEnvelope
  delete: [DepartmentWhereUniqueInput!]
  deleteMany: [DepartmentScalarWhereInput!]
  disconnect: [DepartmentWhereUniqueInput!]
  set: [DepartmentWhereUniqueInput!]
  update: [DepartmentUpdateWithWhereUniqueWithoutCreatedByInput!]
  updateMany: [DepartmentUpdateManyWithWhereWithoutCreatedByInput!]
  upsert: [DepartmentUpsertWithWhereUniqueWithoutCreatedByInput!]
}

input DepartmentUpdateManyWithoutParentNestedInput {
  connect: [DepartmentWhereUniqueInput!]
  connectOrCreate: [DepartmentCreateOrConnectWithoutParentInput!]
  create: [DepartmentCreateWithoutParentInput!]
  createMany: DepartmentCreateManyParentInputEnvelope
  delete: [DepartmentWhereUniqueInput!]
  deleteMany: [DepartmentScalarWhereInput!]
  disconnect: [DepartmentWhereUniqueInput!]
  set: [DepartmentWhereUniqueInput!]
  update: [DepartmentUpdateWithWhereUniqueWithoutParentInput!]
  updateMany: [DepartmentUpdateManyWithWhereWithoutParentInput!]
  upsert: [DepartmentUpsertWithWhereUniqueWithoutParentInput!]
}

input DepartmentUpdateManyWithoutUpdatedByNestedInput {
  connect: [DepartmentWhereUniqueInput!]
  connectOrCreate: [DepartmentCreateOrConnectWithoutUpdatedByInput!]
  create: [DepartmentCreateWithoutUpdatedByInput!]
  createMany: DepartmentCreateManyUpdatedByInputEnvelope
  delete: [DepartmentWhereUniqueInput!]
  deleteMany: [DepartmentScalarWhereInput!]
  disconnect: [DepartmentWhereUniqueInput!]
  set: [DepartmentWhereUniqueInput!]
  update: [DepartmentUpdateWithWhereUniqueWithoutUpdatedByInput!]
  updateMany: [DepartmentUpdateManyWithWhereWithoutUpdatedByInput!]
  upsert: [DepartmentUpsertWithWhereUniqueWithoutUpdatedByInput!]
}

input DepartmentUpdateOneRequiredWithoutCreatedFeedbacksNestedInput {
  connect: DepartmentWhereUniqueInput
  connectOrCreate: DepartmentCreateOrConnectWithoutCreatedFeedbacksInput
  create: DepartmentCreateWithoutCreatedFeedbacksInput
  update: DepartmentUpdateWithoutCreatedFeedbacksInput
  upsert: DepartmentUpsertWithoutCreatedFeedbacksInput
}

input DepartmentUpdateOneWithoutChildsNestedInput {
  connect: DepartmentWhereUniqueInput
  connectOrCreate: DepartmentCreateOrConnectWithoutChildsInput
  create: DepartmentCreateWithoutChildsInput
  delete: Boolean
  disconnect: Boolean
  update: DepartmentUpdateWithoutChildsInput
  upsert: DepartmentUpsertWithoutChildsInput
}

input DepartmentUpdateOneWithoutUsersNestedInput {
  connect: DepartmentWhereUniqueInput
  connectOrCreate: DepartmentCreateOrConnectWithoutUsersInput
  create: DepartmentCreateWithoutUsersInput
  delete: Boolean
  disconnect: Boolean
  update: DepartmentUpdateWithoutUsersInput
  upsert: DepartmentUpsertWithoutUsersInput
}

input DepartmentUpdateWithWhereUniqueWithoutCreatedByInput {
  data: DepartmentUpdateWithoutCreatedByInput!
  where: DepartmentWhereUniqueInput!
}

input DepartmentUpdateWithWhereUniqueWithoutParentInput {
  data: DepartmentUpdateWithoutParentInput!
  where: DepartmentWhereUniqueInput!
}

input DepartmentUpdateWithWhereUniqueWithoutUpdatedByInput {
  data: DepartmentUpdateWithoutUpdatedByInput!
  where: DepartmentWhereUniqueInput!
}

input DepartmentUpdateWithoutChildsInput {
  code: NullableStringFieldUpdateOperationsInput
  createdFeedbacks: FeedbackUpdateManyWithoutDepartmentNestedInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  parent: DepartmentUpdateOneWithoutChildsNestedInput
  sortOrder: IntFieldUpdateOperationsInput
  status: EnumActiveStatusFieldUpdateOperationsInput
  users: UserUpdateManyWithoutDepartmentNestedInput
}

input DepartmentUpdateWithoutCreatedByInput {
  childs: DepartmentUpdateManyWithoutParentNestedInput
  code: NullableStringFieldUpdateOperationsInput
  createdFeedbacks: FeedbackUpdateManyWithoutDepartmentNestedInput
  description: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  parent: DepartmentUpdateOneWithoutChildsNestedInput
  sortOrder: IntFieldUpdateOperationsInput
  status: EnumActiveStatusFieldUpdateOperationsInput
  users: UserUpdateManyWithoutDepartmentNestedInput
}

input DepartmentUpdateWithoutCreatedFeedbacksInput {
  childs: DepartmentUpdateManyWithoutParentNestedInput
  code: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  parent: DepartmentUpdateOneWithoutChildsNestedInput
  sortOrder: IntFieldUpdateOperationsInput
  status: EnumActiveStatusFieldUpdateOperationsInput
  users: UserUpdateManyWithoutDepartmentNestedInput
}

input DepartmentUpdateWithoutParentInput {
  childs: DepartmentUpdateManyWithoutParentNestedInput
  code: NullableStringFieldUpdateOperationsInput
  createdFeedbacks: FeedbackUpdateManyWithoutDepartmentNestedInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  sortOrder: IntFieldUpdateOperationsInput
  status: EnumActiveStatusFieldUpdateOperationsInput
  users: UserUpdateManyWithoutDepartmentNestedInput
}

input DepartmentUpdateWithoutUpdatedByInput {
  childs: DepartmentUpdateManyWithoutParentNestedInput
  code: NullableStringFieldUpdateOperationsInput
  createdFeedbacks: FeedbackUpdateManyWithoutDepartmentNestedInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  parent: DepartmentUpdateOneWithoutChildsNestedInput
  sortOrder: IntFieldUpdateOperationsInput
  status: EnumActiveStatusFieldUpdateOperationsInput
  users: UserUpdateManyWithoutDepartmentNestedInput
}

input DepartmentUpdateWithoutUsersInput {
  childs: DepartmentUpdateManyWithoutParentNestedInput
  code: NullableStringFieldUpdateOperationsInput
  createdFeedbacks: FeedbackUpdateManyWithoutDepartmentNestedInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  parent: DepartmentUpdateOneWithoutChildsNestedInput
  sortOrder: IntFieldUpdateOperationsInput
  status: EnumActiveStatusFieldUpdateOperationsInput
}

input DepartmentUpsertWithWhereUniqueWithoutCreatedByInput {
  create: DepartmentCreateWithoutCreatedByInput!
  update: DepartmentUpdateWithoutCreatedByInput!
  where: DepartmentWhereUniqueInput!
}

input DepartmentUpsertWithWhereUniqueWithoutParentInput {
  create: DepartmentCreateWithoutParentInput!
  update: DepartmentUpdateWithoutParentInput!
  where: DepartmentWhereUniqueInput!
}

input DepartmentUpsertWithWhereUniqueWithoutUpdatedByInput {
  create: DepartmentCreateWithoutUpdatedByInput!
  update: DepartmentUpdateWithoutUpdatedByInput!
  where: DepartmentWhereUniqueInput!
}

input DepartmentUpsertWithoutChildsInput {
  create: DepartmentCreateWithoutChildsInput!
  update: DepartmentUpdateWithoutChildsInput!
}

input DepartmentUpsertWithoutCreatedFeedbacksInput {
  create: DepartmentCreateWithoutCreatedFeedbacksInput!
  update: DepartmentUpdateWithoutCreatedFeedbacksInput!
}

input DepartmentUpsertWithoutUsersInput {
  create: DepartmentCreateWithoutUsersInput!
  update: DepartmentUpdateWithoutUsersInput!
}

input DepartmentWhereInput {
  AND: [DepartmentWhereInput!]
  NOT: [DepartmentWhereInput!]
  OR: [DepartmentWhereInput!]
  childs: DepartmentListRelationFilter
  code: StringNullableFilter
  createdAt: DateTimeFilter
  createdBy: UserWhereInput
  createdById: StringNullableFilter
  createdFeedbacks: FeedbackListRelationFilter
  deletedAt: [DateTimeNullableFilter!] = null
  description: StringNullableFilter
  id: StringFilter
  name: StringFilter
  parent: DepartmentWhereInput
  parentId: StringNullableFilter
  sortOrder: IntFilter
  status: EnumActiveStatusFilter
  updatedAt: DateTimeFilter
  updatedBy: UserWhereInput
  updatedById: StringNullableFilter
  users: UserListRelationFilter
}

input DepartmentWhereUniqueInput {
  code: String
  id: String
}

input EnumActiveStatusFieldUpdateOperationsInput {
  set: ActiveStatus
}

input EnumActiveStatusFilter {
  equals: ActiveStatus
  in: [ActiveStatus!]
  not: NestedEnumActiveStatusFilter
  notIn: [ActiveStatus!]
}

input EnumFeedbackStatusFieldUpdateOperationsInput {
  set: FeedbackStatus
}

input EnumFeedbackStatusFilter {
  equals: FeedbackStatus
  in: [FeedbackStatus!]
  not: NestedEnumFeedbackStatusFilter
  notIn: [FeedbackStatus!]
}

input EnumFeedbackTypeFieldUpdateOperationsInput {
  set: FeedbackType
}

input EnumFeedbackTypeFilter {
  equals: FeedbackType
  in: [FeedbackType!]
  not: NestedEnumFeedbackTypeFilter
  notIn: [FeedbackType!]
}

input EnumGenderNullableFilter {
  equals: Gender
  in: [Gender!]
  not: NestedEnumGenderNullableFilter
  notIn: [Gender!]
}

input EnumIdeaStatusFieldUpdateOperationsInput {
  set: IdeaStatus
}

input EnumIdeaStatusFilter {
  equals: IdeaStatus
  in: [IdeaStatus!]
  not: NestedEnumIdeaStatusFilter
  notIn: [IdeaStatus!]
}

input EnumPostStatusFieldUpdateOperationsInput {
  set: PostStatus
}

input EnumPostStatusFilter {
  equals: PostStatus
  in: [PostStatus!]
  not: NestedEnumPostStatusFilter
  notIn: [PostStatus!]
}

input EnumPostTypeFieldUpdateOperationsInput {
  set: PostType
}

input EnumPostTypeFilter {
  equals: PostType
  in: [PostType!]
  not: NestedEnumPostTypeFilter
  notIn: [PostType!]
}

input EnumRoleTypeFieldUpdateOperationsInput {
  set: RoleType
}

input EnumRoleTypeFilter {
  equals: RoleType
  in: [RoleType!]
  not: NestedEnumRoleTypeFilter
  notIn: [RoleType!]
}

type Feedback {
  attachmentUrl: String
  content: String
  createdAt: DateTime!
  createdBy: User
  createdById: String
  deletedAt: DateTime
  department: Department!
  departmentId: String!
  editingBy: User!
  editingById: String!
  id: ID!
  industry: Industry!
  industryId: String!
  reply: String
  resolvedBy: User!
  resolvedById: String!
  status: FeedbackStatus!
  title: String!
  type: FeedbackType!
  updatedAt: DateTime!
  updatedBy: User
  updatedById: String
}

input FeedbackCreateManyCreatedByInput {
  attachmentUrl: String
  content: String
  departmentId: String!
  editingById: String!
  industryId: String!
  reply: String
  resolvedById: String!
  status: FeedbackStatus
  title: String!
  type: FeedbackType
}

input FeedbackCreateManyCreatedByInputEnvelope {
  data: [FeedbackCreateManyCreatedByInput!]!
  skipDuplicates: Boolean
}

input FeedbackCreateManyDepartmentInput {
  attachmentUrl: String
  content: String
  editingById: String!
  industryId: String!
  reply: String
  resolvedById: String!
  status: FeedbackStatus
  title: String!
  type: FeedbackType
}

input FeedbackCreateManyDepartmentInputEnvelope {
  data: [FeedbackCreateManyDepartmentInput!]!
  skipDuplicates: Boolean
}

input FeedbackCreateManyEditingByInput {
  attachmentUrl: String
  content: String
  departmentId: String!
  industryId: String!
  reply: String
  resolvedById: String!
  status: FeedbackStatus
  title: String!
  type: FeedbackType
}

input FeedbackCreateManyEditingByInputEnvelope {
  data: [FeedbackCreateManyEditingByInput!]!
  skipDuplicates: Boolean
}

input FeedbackCreateManyIndustryInput {
  attachmentUrl: String
  content: String
  departmentId: String!
  editingById: String!
  reply: String
  resolvedById: String!
  status: FeedbackStatus
  title: String!
  type: FeedbackType
}

input FeedbackCreateManyIndustryInputEnvelope {
  data: [FeedbackCreateManyIndustryInput!]!
  skipDuplicates: Boolean
}

input FeedbackCreateManyResolvedByInput {
  attachmentUrl: String
  content: String
  departmentId: String!
  editingById: String!
  industryId: String!
  reply: String
  status: FeedbackStatus
  title: String!
  type: FeedbackType
}

input FeedbackCreateManyResolvedByInputEnvelope {
  data: [FeedbackCreateManyResolvedByInput!]!
  skipDuplicates: Boolean
}

input FeedbackCreateManyUpdatedByInput {
  attachmentUrl: String
  content: String
  departmentId: String!
  editingById: String!
  industryId: String!
  reply: String
  resolvedById: String!
  status: FeedbackStatus
  title: String!
  type: FeedbackType
}

input FeedbackCreateManyUpdatedByInputEnvelope {
  data: [FeedbackCreateManyUpdatedByInput!]!
  skipDuplicates: Boolean
}

input FeedbackCreateNestedManyWithoutCreatedByInput {
  connect: [FeedbackWhereUniqueInput!]
}

input FeedbackCreateNestedManyWithoutDepartmentInput {
  connect: [FeedbackWhereUniqueInput!]
}

input FeedbackCreateNestedManyWithoutEditingByInput {
  connect: [FeedbackWhereUniqueInput!]
}

input FeedbackCreateNestedManyWithoutIndustryInput {
  connect: [FeedbackWhereUniqueInput!]
}

input FeedbackCreateNestedManyWithoutResolvedByInput {
  connect: [FeedbackWhereUniqueInput!]
}

input FeedbackCreateNestedManyWithoutUpdatedByInput {
  connect: [FeedbackWhereUniqueInput!]
}

input FeedbackCreateOrConnectWithoutCreatedByInput {
  create: FeedbackCreateWithoutCreatedByInput!
  where: FeedbackWhereUniqueInput!
}

input FeedbackCreateOrConnectWithoutDepartmentInput {
  create: FeedbackCreateWithoutDepartmentInput!
  where: FeedbackWhereUniqueInput!
}

input FeedbackCreateOrConnectWithoutEditingByInput {
  create: FeedbackCreateWithoutEditingByInput!
  where: FeedbackWhereUniqueInput!
}

input FeedbackCreateOrConnectWithoutIndustryInput {
  create: FeedbackCreateWithoutIndustryInput!
  where: FeedbackWhereUniqueInput!
}

input FeedbackCreateOrConnectWithoutResolvedByInput {
  create: FeedbackCreateWithoutResolvedByInput!
  where: FeedbackWhereUniqueInput!
}

input FeedbackCreateOrConnectWithoutUpdatedByInput {
  create: FeedbackCreateWithoutUpdatedByInput!
  where: FeedbackWhereUniqueInput!
}

input FeedbackCreateWithoutCreatedByInput {
  attachmentUrl: String
  content: String
  department: DepartmentCreateNestedOneWithoutCreatedFeedbacksInput!
  editingBy: UserCreateNestedOneWithoutEditedFeedbacksInput!
  industry: IndustryCreateNestedOneWithoutCreatedFeedbacksInput!
  reply: String
  resolvedBy: UserCreateNestedOneWithoutResolvedFeedbacksInput!
  status: FeedbackStatus
  title: String!
  type: FeedbackType
}

input FeedbackCreateWithoutDepartmentInput {
  attachmentUrl: String
  content: String
  editingBy: UserCreateNestedOneWithoutEditedFeedbacksInput!
  industry: IndustryCreateNestedOneWithoutCreatedFeedbacksInput!
  reply: String
  resolvedBy: UserCreateNestedOneWithoutResolvedFeedbacksInput!
  status: FeedbackStatus
  title: String!
  type: FeedbackType
}

input FeedbackCreateWithoutEditingByInput {
  attachmentUrl: String
  content: String
  department: DepartmentCreateNestedOneWithoutCreatedFeedbacksInput!
  industry: IndustryCreateNestedOneWithoutCreatedFeedbacksInput!
  reply: String
  resolvedBy: UserCreateNestedOneWithoutResolvedFeedbacksInput!
  status: FeedbackStatus
  title: String!
  type: FeedbackType
}

input FeedbackCreateWithoutIndustryInput {
  attachmentUrl: String
  content: String
  department: DepartmentCreateNestedOneWithoutCreatedFeedbacksInput!
  editingBy: UserCreateNestedOneWithoutEditedFeedbacksInput!
  reply: String
  resolvedBy: UserCreateNestedOneWithoutResolvedFeedbacksInput!
  status: FeedbackStatus
  title: String!
  type: FeedbackType
}

input FeedbackCreateWithoutResolvedByInput {
  attachmentUrl: String
  content: String
  department: DepartmentCreateNestedOneWithoutCreatedFeedbacksInput!
  editingBy: UserCreateNestedOneWithoutEditedFeedbacksInput!
  industry: IndustryCreateNestedOneWithoutCreatedFeedbacksInput!
  reply: String
  status: FeedbackStatus
  title: String!
  type: FeedbackType
}

input FeedbackCreateWithoutUpdatedByInput {
  attachmentUrl: String
  content: String
  department: DepartmentCreateNestedOneWithoutCreatedFeedbacksInput!
  editingBy: UserCreateNestedOneWithoutEditedFeedbacksInput!
  industry: IndustryCreateNestedOneWithoutCreatedFeedbacksInput!
  reply: String
  resolvedBy: UserCreateNestedOneWithoutResolvedFeedbacksInput!
  status: FeedbackStatus
  title: String!
  type: FeedbackType
}

input FeedbackListRelationFilter {
  every: FeedbackWhereInput
  none: FeedbackWhereInput
  some: FeedbackWhereInput
}

input FeedbackOrderByRelationAggregateInput {
  _count: SortOrder
}

input FeedbackScalarWhereInput {
  AND: [FeedbackScalarWhereInput!]
  NOT: [FeedbackScalarWhereInput!]
  OR: [FeedbackScalarWhereInput!]
  attachmentUrl: StringNullableFilter
  content: StringNullableFilter
  createdAt: DateTimeFilter
  createdById: StringNullableFilter
  deletedAt: [DateTimeNullableFilter!] = null
  departmentId: StringFilter
  editingById: StringFilter
  id: StringFilter
  industryId: StringFilter
  reply: StringNullableFilter
  resolvedById: StringFilter
  status: EnumFeedbackStatusFilter
  title: StringFilter
  type: EnumFeedbackTypeFilter
  updatedAt: DateTimeFilter
  updatedById: StringNullableFilter
}

enum FeedbackStatus {
  Completed
  Editing
  Rejected
  Waiting
}

enum FeedbackType {
  Feedback
  Question
}

input FeedbackUpdateManyMutationInput {
  attachmentUrl: NullableStringFieldUpdateOperationsInput
  content: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  reply: NullableStringFieldUpdateOperationsInput
  status: EnumFeedbackStatusFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  type: EnumFeedbackTypeFieldUpdateOperationsInput
}

input FeedbackUpdateManyWithWhereWithoutCreatedByInput {
  data: FeedbackUpdateManyMutationInput!
  where: FeedbackScalarWhereInput!
}

input FeedbackUpdateManyWithWhereWithoutDepartmentInput {
  data: FeedbackUpdateManyMutationInput!
  where: FeedbackScalarWhereInput!
}

input FeedbackUpdateManyWithWhereWithoutEditingByInput {
  data: FeedbackUpdateManyMutationInput!
  where: FeedbackScalarWhereInput!
}

input FeedbackUpdateManyWithWhereWithoutIndustryInput {
  data: FeedbackUpdateManyMutationInput!
  where: FeedbackScalarWhereInput!
}

input FeedbackUpdateManyWithWhereWithoutResolvedByInput {
  data: FeedbackUpdateManyMutationInput!
  where: FeedbackScalarWhereInput!
}

input FeedbackUpdateManyWithWhereWithoutUpdatedByInput {
  data: FeedbackUpdateManyMutationInput!
  where: FeedbackScalarWhereInput!
}

input FeedbackUpdateManyWithoutCreatedByNestedInput {
  connect: [FeedbackWhereUniqueInput!]
  connectOrCreate: [FeedbackCreateOrConnectWithoutCreatedByInput!]
  create: [FeedbackCreateWithoutCreatedByInput!]
  createMany: FeedbackCreateManyCreatedByInputEnvelope
  delete: [FeedbackWhereUniqueInput!]
  deleteMany: [FeedbackScalarWhereInput!]
  disconnect: [FeedbackWhereUniqueInput!]
  set: [FeedbackWhereUniqueInput!]
  update: [FeedbackUpdateWithWhereUniqueWithoutCreatedByInput!]
  updateMany: [FeedbackUpdateManyWithWhereWithoutCreatedByInput!]
  upsert: [FeedbackUpsertWithWhereUniqueWithoutCreatedByInput!]
}

input FeedbackUpdateManyWithoutDepartmentNestedInput {
  connect: [FeedbackWhereUniqueInput!]
  connectOrCreate: [FeedbackCreateOrConnectWithoutDepartmentInput!]
  create: [FeedbackCreateWithoutDepartmentInput!]
  createMany: FeedbackCreateManyDepartmentInputEnvelope
  delete: [FeedbackWhereUniqueInput!]
  deleteMany: [FeedbackScalarWhereInput!]
  disconnect: [FeedbackWhereUniqueInput!]
  set: [FeedbackWhereUniqueInput!]
  update: [FeedbackUpdateWithWhereUniqueWithoutDepartmentInput!]
  updateMany: [FeedbackUpdateManyWithWhereWithoutDepartmentInput!]
  upsert: [FeedbackUpsertWithWhereUniqueWithoutDepartmentInput!]
}

input FeedbackUpdateManyWithoutEditingByNestedInput {
  connect: [FeedbackWhereUniqueInput!]
  connectOrCreate: [FeedbackCreateOrConnectWithoutEditingByInput!]
  create: [FeedbackCreateWithoutEditingByInput!]
  createMany: FeedbackCreateManyEditingByInputEnvelope
  delete: [FeedbackWhereUniqueInput!]
  deleteMany: [FeedbackScalarWhereInput!]
  disconnect: [FeedbackWhereUniqueInput!]
  set: [FeedbackWhereUniqueInput!]
  update: [FeedbackUpdateWithWhereUniqueWithoutEditingByInput!]
  updateMany: [FeedbackUpdateManyWithWhereWithoutEditingByInput!]
  upsert: [FeedbackUpsertWithWhereUniqueWithoutEditingByInput!]
}

input FeedbackUpdateManyWithoutIndustryNestedInput {
  connect: [FeedbackWhereUniqueInput!]
  connectOrCreate: [FeedbackCreateOrConnectWithoutIndustryInput!]
  create: [FeedbackCreateWithoutIndustryInput!]
  createMany: FeedbackCreateManyIndustryInputEnvelope
  delete: [FeedbackWhereUniqueInput!]
  deleteMany: [FeedbackScalarWhereInput!]
  disconnect: [FeedbackWhereUniqueInput!]
  set: [FeedbackWhereUniqueInput!]
  update: [FeedbackUpdateWithWhereUniqueWithoutIndustryInput!]
  updateMany: [FeedbackUpdateManyWithWhereWithoutIndustryInput!]
  upsert: [FeedbackUpsertWithWhereUniqueWithoutIndustryInput!]
}

input FeedbackUpdateManyWithoutResolvedByNestedInput {
  connect: [FeedbackWhereUniqueInput!]
  connectOrCreate: [FeedbackCreateOrConnectWithoutResolvedByInput!]
  create: [FeedbackCreateWithoutResolvedByInput!]
  createMany: FeedbackCreateManyResolvedByInputEnvelope
  delete: [FeedbackWhereUniqueInput!]
  deleteMany: [FeedbackScalarWhereInput!]
  disconnect: [FeedbackWhereUniqueInput!]
  set: [FeedbackWhereUniqueInput!]
  update: [FeedbackUpdateWithWhereUniqueWithoutResolvedByInput!]
  updateMany: [FeedbackUpdateManyWithWhereWithoutResolvedByInput!]
  upsert: [FeedbackUpsertWithWhereUniqueWithoutResolvedByInput!]
}

input FeedbackUpdateManyWithoutUpdatedByNestedInput {
  connect: [FeedbackWhereUniqueInput!]
  connectOrCreate: [FeedbackCreateOrConnectWithoutUpdatedByInput!]
  create: [FeedbackCreateWithoutUpdatedByInput!]
  createMany: FeedbackCreateManyUpdatedByInputEnvelope
  delete: [FeedbackWhereUniqueInput!]
  deleteMany: [FeedbackScalarWhereInput!]
  disconnect: [FeedbackWhereUniqueInput!]
  set: [FeedbackWhereUniqueInput!]
  update: [FeedbackUpdateWithWhereUniqueWithoutUpdatedByInput!]
  updateMany: [FeedbackUpdateManyWithWhereWithoutUpdatedByInput!]
  upsert: [FeedbackUpsertWithWhereUniqueWithoutUpdatedByInput!]
}

input FeedbackUpdateWithWhereUniqueWithoutCreatedByInput {
  data: FeedbackUpdateWithoutCreatedByInput!
  where: FeedbackWhereUniqueInput!
}

input FeedbackUpdateWithWhereUniqueWithoutDepartmentInput {
  data: FeedbackUpdateWithoutDepartmentInput!
  where: FeedbackWhereUniqueInput!
}

input FeedbackUpdateWithWhereUniqueWithoutEditingByInput {
  data: FeedbackUpdateWithoutEditingByInput!
  where: FeedbackWhereUniqueInput!
}

input FeedbackUpdateWithWhereUniqueWithoutIndustryInput {
  data: FeedbackUpdateWithoutIndustryInput!
  where: FeedbackWhereUniqueInput!
}

input FeedbackUpdateWithWhereUniqueWithoutResolvedByInput {
  data: FeedbackUpdateWithoutResolvedByInput!
  where: FeedbackWhereUniqueInput!
}

input FeedbackUpdateWithWhereUniqueWithoutUpdatedByInput {
  data: FeedbackUpdateWithoutUpdatedByInput!
  where: FeedbackWhereUniqueInput!
}

input FeedbackUpdateWithoutCreatedByInput {
  attachmentUrl: NullableStringFieldUpdateOperationsInput
  content: NullableStringFieldUpdateOperationsInput
  department: DepartmentUpdateOneRequiredWithoutCreatedFeedbacksNestedInput
  editingBy: UserUpdateOneRequiredWithoutEditedFeedbacksNestedInput
  industry: IndustryUpdateOneRequiredWithoutCreatedFeedbacksNestedInput
  reply: NullableStringFieldUpdateOperationsInput
  resolvedBy: UserUpdateOneRequiredWithoutResolvedFeedbacksNestedInput
  status: EnumFeedbackStatusFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  type: EnumFeedbackTypeFieldUpdateOperationsInput
}

input FeedbackUpdateWithoutDepartmentInput {
  attachmentUrl: NullableStringFieldUpdateOperationsInput
  content: NullableStringFieldUpdateOperationsInput
  editingBy: UserUpdateOneRequiredWithoutEditedFeedbacksNestedInput
  id: StringFieldUpdateOperationsInput
  industry: IndustryUpdateOneRequiredWithoutCreatedFeedbacksNestedInput
  reply: NullableStringFieldUpdateOperationsInput
  resolvedBy: UserUpdateOneRequiredWithoutResolvedFeedbacksNestedInput
  status: EnumFeedbackStatusFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  type: EnumFeedbackTypeFieldUpdateOperationsInput
}

input FeedbackUpdateWithoutEditingByInput {
  attachmentUrl: NullableStringFieldUpdateOperationsInput
  content: NullableStringFieldUpdateOperationsInput
  department: DepartmentUpdateOneRequiredWithoutCreatedFeedbacksNestedInput
  id: StringFieldUpdateOperationsInput
  industry: IndustryUpdateOneRequiredWithoutCreatedFeedbacksNestedInput
  reply: NullableStringFieldUpdateOperationsInput
  resolvedBy: UserUpdateOneRequiredWithoutResolvedFeedbacksNestedInput
  status: EnumFeedbackStatusFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  type: EnumFeedbackTypeFieldUpdateOperationsInput
}

input FeedbackUpdateWithoutIndustryInput {
  attachmentUrl: NullableStringFieldUpdateOperationsInput
  content: NullableStringFieldUpdateOperationsInput
  department: DepartmentUpdateOneRequiredWithoutCreatedFeedbacksNestedInput
  editingBy: UserUpdateOneRequiredWithoutEditedFeedbacksNestedInput
  id: StringFieldUpdateOperationsInput
  reply: NullableStringFieldUpdateOperationsInput
  resolvedBy: UserUpdateOneRequiredWithoutResolvedFeedbacksNestedInput
  status: EnumFeedbackStatusFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  type: EnumFeedbackTypeFieldUpdateOperationsInput
}

input FeedbackUpdateWithoutResolvedByInput {
  attachmentUrl: NullableStringFieldUpdateOperationsInput
  content: NullableStringFieldUpdateOperationsInput
  department: DepartmentUpdateOneRequiredWithoutCreatedFeedbacksNestedInput
  editingBy: UserUpdateOneRequiredWithoutEditedFeedbacksNestedInput
  id: StringFieldUpdateOperationsInput
  industry: IndustryUpdateOneRequiredWithoutCreatedFeedbacksNestedInput
  reply: NullableStringFieldUpdateOperationsInput
  status: EnumFeedbackStatusFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  type: EnumFeedbackTypeFieldUpdateOperationsInput
}

input FeedbackUpdateWithoutUpdatedByInput {
  attachmentUrl: NullableStringFieldUpdateOperationsInput
  content: NullableStringFieldUpdateOperationsInput
  department: DepartmentUpdateOneRequiredWithoutCreatedFeedbacksNestedInput
  editingBy: UserUpdateOneRequiredWithoutEditedFeedbacksNestedInput
  id: StringFieldUpdateOperationsInput
  industry: IndustryUpdateOneRequiredWithoutCreatedFeedbacksNestedInput
  reply: NullableStringFieldUpdateOperationsInput
  resolvedBy: UserUpdateOneRequiredWithoutResolvedFeedbacksNestedInput
  status: EnumFeedbackStatusFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  type: EnumFeedbackTypeFieldUpdateOperationsInput
}

input FeedbackUpsertWithWhereUniqueWithoutCreatedByInput {
  create: FeedbackCreateWithoutCreatedByInput!
  update: FeedbackUpdateWithoutCreatedByInput!
  where: FeedbackWhereUniqueInput!
}

input FeedbackUpsertWithWhereUniqueWithoutDepartmentInput {
  create: FeedbackCreateWithoutDepartmentInput!
  update: FeedbackUpdateWithoutDepartmentInput!
  where: FeedbackWhereUniqueInput!
}

input FeedbackUpsertWithWhereUniqueWithoutEditingByInput {
  create: FeedbackCreateWithoutEditingByInput!
  update: FeedbackUpdateWithoutEditingByInput!
  where: FeedbackWhereUniqueInput!
}

input FeedbackUpsertWithWhereUniqueWithoutIndustryInput {
  create: FeedbackCreateWithoutIndustryInput!
  update: FeedbackUpdateWithoutIndustryInput!
  where: FeedbackWhereUniqueInput!
}

input FeedbackUpsertWithWhereUniqueWithoutResolvedByInput {
  create: FeedbackCreateWithoutResolvedByInput!
  update: FeedbackUpdateWithoutResolvedByInput!
  where: FeedbackWhereUniqueInput!
}

input FeedbackUpsertWithWhereUniqueWithoutUpdatedByInput {
  create: FeedbackCreateWithoutUpdatedByInput!
  update: FeedbackUpdateWithoutUpdatedByInput!
  where: FeedbackWhereUniqueInput!
}

input FeedbackWhereInput {
  AND: [FeedbackWhereInput!]
  NOT: [FeedbackWhereInput!]
  OR: [FeedbackWhereInput!]
  attachmentUrl: StringNullableFilter
  content: StringNullableFilter
  createdAt: DateTimeFilter
  createdBy: UserWhereInput
  createdById: StringNullableFilter
  deletedAt: [DateTimeNullableFilter!] = null
  department: DepartmentWhereInput
  departmentId: StringFilter
  editingBy: UserWhereInput
  editingById: StringFilter
  id: StringFilter
  industry: IndustryWhereInput
  industryId: StringFilter
  reply: StringNullableFilter
  resolvedBy: UserWhereInput
  resolvedById: StringFilter
  status: EnumFeedbackStatusFilter
  title: StringFilter
  type: EnumFeedbackTypeFilter
  updatedAt: DateTimeFilter
  updatedBy: UserWhereInput
  updatedById: StringNullableFilter
}

input FeedbackWhereUniqueInput {
  id: String
}

enum Gender {
  Female
  Male
}

type Group {
  _count: GroupCount!
  backgroundUrl: String
  createdUserGroups: [UserGroup!]
  id: ID!
  longDescription: String
  memberCount: Int!
  name: String!
  postCount: Int!
  shortDescription: String
  status: ActiveStatus!
  thumbnailUrl: String
}

type GroupCount {
  createdUserGroups: Int!
}

input GroupCreateNestedOneWithoutCreatedUserGroupsInput {
  connect: GroupWhereUniqueInput
}

input GroupCreateOrConnectWithoutCreatedUserGroupsInput {
  create: GroupCreateWithoutCreatedUserGroupsInput!
  where: GroupWhereUniqueInput!
}

input GroupCreateWithoutCreatedUserGroupsInput {
  backgroundUrl: String
  longDescription: String
  memberCount: Int!
  name: String!
  postCount: Int!
  shortDescription: String
  status: ActiveStatus
  thumbnailUrl: String
}

input GroupUpdateOneRequiredWithoutCreatedUserGroupsNestedInput {
  connect: GroupWhereUniqueInput
  connectOrCreate: GroupCreateOrConnectWithoutCreatedUserGroupsInput
  create: GroupCreateWithoutCreatedUserGroupsInput
  update: GroupUpdateWithoutCreatedUserGroupsInput
  upsert: GroupUpsertWithoutCreatedUserGroupsInput
}

input GroupUpdateWithoutCreatedUserGroupsInput {
  backgroundUrl: NullableStringFieldUpdateOperationsInput
  longDescription: NullableStringFieldUpdateOperationsInput
  memberCount: IntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  postCount: IntFieldUpdateOperationsInput
  shortDescription: NullableStringFieldUpdateOperationsInput
  status: EnumActiveStatusFieldUpdateOperationsInput
  thumbnailUrl: NullableStringFieldUpdateOperationsInput
}

input GroupUpsertWithoutCreatedUserGroupsInput {
  create: GroupCreateWithoutCreatedUserGroupsInput!
  update: GroupUpdateWithoutCreatedUserGroupsInput!
}

input GroupWhereInput {
  AND: [GroupWhereInput!]
  NOT: [GroupWhereInput!]
  OR: [GroupWhereInput!]
  backgroundUrl: StringNullableFilter
  createdUserGroups: UserGroupListRelationFilter
  id: StringFilter
  longDescription: StringNullableFilter
  memberCount: IntFilter
  name: StringFilter
  postCount: IntFilter
  shortDescription: StringNullableFilter
  status: EnumActiveStatusFilter
  thumbnailUrl: StringNullableFilter
}

input GroupWhereUniqueInput {
  id: String
}

type Idea {
  _count: IdeaCount!
  approvedBy: User!
  approvedById: String!
  content: String
  createdAt: DateTime!
  createdBy: User
  createdById: String
  createdPostIdeas: [PostIdea!]
  createdUserVotes: [UserVote!]
  deletedAt: DateTime
  editingBy: User!
  editingById: String!
  id: ID!
  status: IdeaStatus!
  title: String!
  updatedAt: DateTime!
  updatedBy: User
  updatedById: String
}

type IdeaCount {
  createdPostIdeas: Int!
  createdUserVotes: Int!
}

input IdeaCreateManyApprovedByInput {
  content: String
  editingById: String!
  status: IdeaStatus
  title: String!
}

input IdeaCreateManyApprovedByInputEnvelope {
  data: [IdeaCreateManyApprovedByInput!]!
  skipDuplicates: Boolean
}

input IdeaCreateManyCreatedByInput {
  approvedById: String!
  content: String
  editingById: String!
  status: IdeaStatus
  title: String!
}

input IdeaCreateManyCreatedByInputEnvelope {
  data: [IdeaCreateManyCreatedByInput!]!
  skipDuplicates: Boolean
}

input IdeaCreateManyEditingByInput {
  approvedById: String!
  content: String
  status: IdeaStatus
  title: String!
}

input IdeaCreateManyEditingByInputEnvelope {
  data: [IdeaCreateManyEditingByInput!]!
  skipDuplicates: Boolean
}

input IdeaCreateManyUpdatedByInput {
  approvedById: String!
  content: String
  editingById: String!
  status: IdeaStatus
  title: String!
}

input IdeaCreateManyUpdatedByInputEnvelope {
  data: [IdeaCreateManyUpdatedByInput!]!
  skipDuplicates: Boolean
}

input IdeaCreateNestedManyWithoutApprovedByInput {
  connect: [IdeaWhereUniqueInput!]
}

input IdeaCreateNestedManyWithoutCreatedByInput {
  connect: [IdeaWhereUniqueInput!]
}

input IdeaCreateNestedManyWithoutEditingByInput {
  connect: [IdeaWhereUniqueInput!]
}

input IdeaCreateNestedManyWithoutUpdatedByInput {
  connect: [IdeaWhereUniqueInput!]
}

input IdeaCreateNestedOneWithoutCreatedPostIdeasInput {
  connect: IdeaWhereUniqueInput
}

input IdeaCreateNestedOneWithoutCreatedUserVotesInput {
  connect: IdeaWhereUniqueInput
}

input IdeaCreateOrConnectWithoutApprovedByInput {
  create: IdeaCreateWithoutApprovedByInput!
  where: IdeaWhereUniqueInput!
}

input IdeaCreateOrConnectWithoutCreatedByInput {
  create: IdeaCreateWithoutCreatedByInput!
  where: IdeaWhereUniqueInput!
}

input IdeaCreateOrConnectWithoutCreatedPostIdeasInput {
  create: IdeaCreateWithoutCreatedPostIdeasInput!
  where: IdeaWhereUniqueInput!
}

input IdeaCreateOrConnectWithoutCreatedUserVotesInput {
  create: IdeaCreateWithoutCreatedUserVotesInput!
  where: IdeaWhereUniqueInput!
}

input IdeaCreateOrConnectWithoutEditingByInput {
  create: IdeaCreateWithoutEditingByInput!
  where: IdeaWhereUniqueInput!
}

input IdeaCreateOrConnectWithoutUpdatedByInput {
  create: IdeaCreateWithoutUpdatedByInput!
  where: IdeaWhereUniqueInput!
}

input IdeaCreateWithoutApprovedByInput {
  content: String
  createdPostIdeas: PostIdeaCreateNestedManyWithoutIdeaInput
  createdUserVotes: UserVoteCreateNestedManyWithoutIdeaInput
  editingBy: UserCreateNestedOneWithoutEditedIdeasInput!
  status: IdeaStatus
  title: String!
}

input IdeaCreateWithoutCreatedByInput {
  approvedBy: UserCreateNestedOneWithoutApprovedIdeasInput!
  content: String
  createdPostIdeas: PostIdeaCreateNestedManyWithoutIdeaInput
  createdUserVotes: UserVoteCreateNestedManyWithoutIdeaInput
  editingBy: UserCreateNestedOneWithoutEditedIdeasInput!
  status: IdeaStatus
  title: String!
}

input IdeaCreateWithoutCreatedPostIdeasInput {
  approvedBy: UserCreateNestedOneWithoutApprovedIdeasInput!
  content: String
  createdUserVotes: UserVoteCreateNestedManyWithoutIdeaInput
  editingBy: UserCreateNestedOneWithoutEditedIdeasInput!
  status: IdeaStatus
  title: String!
}

input IdeaCreateWithoutCreatedUserVotesInput {
  approvedBy: UserCreateNestedOneWithoutApprovedIdeasInput!
  content: String
  createdPostIdeas: PostIdeaCreateNestedManyWithoutIdeaInput
  editingBy: UserCreateNestedOneWithoutEditedIdeasInput!
  status: IdeaStatus
  title: String!
}

input IdeaCreateWithoutEditingByInput {
  approvedBy: UserCreateNestedOneWithoutApprovedIdeasInput!
  content: String
  createdPostIdeas: PostIdeaCreateNestedManyWithoutIdeaInput
  createdUserVotes: UserVoteCreateNestedManyWithoutIdeaInput
  status: IdeaStatus
  title: String!
}

input IdeaCreateWithoutUpdatedByInput {
  approvedBy: UserCreateNestedOneWithoutApprovedIdeasInput!
  content: String
  createdPostIdeas: PostIdeaCreateNestedManyWithoutIdeaInput
  createdUserVotes: UserVoteCreateNestedManyWithoutIdeaInput
  editingBy: UserCreateNestedOneWithoutEditedIdeasInput!
  status: IdeaStatus
  title: String!
}

input IdeaListRelationFilter {
  every: IdeaWhereInput
  none: IdeaWhereInput
  some: IdeaWhereInput
}

input IdeaOrderByRelationAggregateInput {
  _count: SortOrder
}

input IdeaScalarWhereInput {
  AND: [IdeaScalarWhereInput!]
  NOT: [IdeaScalarWhereInput!]
  OR: [IdeaScalarWhereInput!]
  approvedById: StringFilter
  content: StringNullableFilter
  createdAt: DateTimeFilter
  createdById: StringNullableFilter
  deletedAt: [DateTimeNullableFilter!] = null
  editingById: StringFilter
  id: StringFilter
  status: EnumIdeaStatusFilter
  title: StringFilter
  updatedAt: DateTimeFilter
  updatedById: StringNullableFilter
}

enum IdeaStatus {
  Approved
  Editing
  Rejected
  Waiting
}

input IdeaUpdateManyMutationInput {
  content: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  status: EnumIdeaStatusFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
}

input IdeaUpdateManyWithWhereWithoutApprovedByInput {
  data: IdeaUpdateManyMutationInput!
  where: IdeaScalarWhereInput!
}

input IdeaUpdateManyWithWhereWithoutCreatedByInput {
  data: IdeaUpdateManyMutationInput!
  where: IdeaScalarWhereInput!
}

input IdeaUpdateManyWithWhereWithoutEditingByInput {
  data: IdeaUpdateManyMutationInput!
  where: IdeaScalarWhereInput!
}

input IdeaUpdateManyWithWhereWithoutUpdatedByInput {
  data: IdeaUpdateManyMutationInput!
  where: IdeaScalarWhereInput!
}

input IdeaUpdateManyWithoutApprovedByNestedInput {
  connect: [IdeaWhereUniqueInput!]
  connectOrCreate: [IdeaCreateOrConnectWithoutApprovedByInput!]
  create: [IdeaCreateWithoutApprovedByInput!]
  createMany: IdeaCreateManyApprovedByInputEnvelope
  delete: [IdeaWhereUniqueInput!]
  deleteMany: [IdeaScalarWhereInput!]
  disconnect: [IdeaWhereUniqueInput!]
  set: [IdeaWhereUniqueInput!]
  update: [IdeaUpdateWithWhereUniqueWithoutApprovedByInput!]
  updateMany: [IdeaUpdateManyWithWhereWithoutApprovedByInput!]
  upsert: [IdeaUpsertWithWhereUniqueWithoutApprovedByInput!]
}

input IdeaUpdateManyWithoutCreatedByNestedInput {
  connect: [IdeaWhereUniqueInput!]
  connectOrCreate: [IdeaCreateOrConnectWithoutCreatedByInput!]
  create: [IdeaCreateWithoutCreatedByInput!]
  createMany: IdeaCreateManyCreatedByInputEnvelope
  delete: [IdeaWhereUniqueInput!]
  deleteMany: [IdeaScalarWhereInput!]
  disconnect: [IdeaWhereUniqueInput!]
  set: [IdeaWhereUniqueInput!]
  update: [IdeaUpdateWithWhereUniqueWithoutCreatedByInput!]
  updateMany: [IdeaUpdateManyWithWhereWithoutCreatedByInput!]
  upsert: [IdeaUpsertWithWhereUniqueWithoutCreatedByInput!]
}

input IdeaUpdateManyWithoutEditingByNestedInput {
  connect: [IdeaWhereUniqueInput!]
  connectOrCreate: [IdeaCreateOrConnectWithoutEditingByInput!]
  create: [IdeaCreateWithoutEditingByInput!]
  createMany: IdeaCreateManyEditingByInputEnvelope
  delete: [IdeaWhereUniqueInput!]
  deleteMany: [IdeaScalarWhereInput!]
  disconnect: [IdeaWhereUniqueInput!]
  set: [IdeaWhereUniqueInput!]
  update: [IdeaUpdateWithWhereUniqueWithoutEditingByInput!]
  updateMany: [IdeaUpdateManyWithWhereWithoutEditingByInput!]
  upsert: [IdeaUpsertWithWhereUniqueWithoutEditingByInput!]
}

input IdeaUpdateManyWithoutUpdatedByNestedInput {
  connect: [IdeaWhereUniqueInput!]
  connectOrCreate: [IdeaCreateOrConnectWithoutUpdatedByInput!]
  create: [IdeaCreateWithoutUpdatedByInput!]
  createMany: IdeaCreateManyUpdatedByInputEnvelope
  delete: [IdeaWhereUniqueInput!]
  deleteMany: [IdeaScalarWhereInput!]
  disconnect: [IdeaWhereUniqueInput!]
  set: [IdeaWhereUniqueInput!]
  update: [IdeaUpdateWithWhereUniqueWithoutUpdatedByInput!]
  updateMany: [IdeaUpdateManyWithWhereWithoutUpdatedByInput!]
  upsert: [IdeaUpsertWithWhereUniqueWithoutUpdatedByInput!]
}

input IdeaUpdateOneRequiredWithoutCreatedPostIdeasNestedInput {
  connect: IdeaWhereUniqueInput
  connectOrCreate: IdeaCreateOrConnectWithoutCreatedPostIdeasInput
  create: IdeaCreateWithoutCreatedPostIdeasInput
  update: IdeaUpdateWithoutCreatedPostIdeasInput
  upsert: IdeaUpsertWithoutCreatedPostIdeasInput
}

input IdeaUpdateOneRequiredWithoutCreatedUserVotesNestedInput {
  connect: IdeaWhereUniqueInput
  connectOrCreate: IdeaCreateOrConnectWithoutCreatedUserVotesInput
  create: IdeaCreateWithoutCreatedUserVotesInput
  update: IdeaUpdateWithoutCreatedUserVotesInput
  upsert: IdeaUpsertWithoutCreatedUserVotesInput
}

input IdeaUpdateWithWhereUniqueWithoutApprovedByInput {
  data: IdeaUpdateWithoutApprovedByInput!
  where: IdeaWhereUniqueInput!
}

input IdeaUpdateWithWhereUniqueWithoutCreatedByInput {
  data: IdeaUpdateWithoutCreatedByInput!
  where: IdeaWhereUniqueInput!
}

input IdeaUpdateWithWhereUniqueWithoutEditingByInput {
  data: IdeaUpdateWithoutEditingByInput!
  where: IdeaWhereUniqueInput!
}

input IdeaUpdateWithWhereUniqueWithoutUpdatedByInput {
  data: IdeaUpdateWithoutUpdatedByInput!
  where: IdeaWhereUniqueInput!
}

input IdeaUpdateWithoutApprovedByInput {
  content: NullableStringFieldUpdateOperationsInput
  createdPostIdeas: PostIdeaUpdateManyWithoutIdeaNestedInput
  createdUserVotes: UserVoteUpdateManyWithoutIdeaNestedInput
  editingBy: UserUpdateOneRequiredWithoutEditedIdeasNestedInput
  id: StringFieldUpdateOperationsInput
  status: EnumIdeaStatusFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
}

input IdeaUpdateWithoutCreatedByInput {
  approvedBy: UserUpdateOneRequiredWithoutApprovedIdeasNestedInput
  content: NullableStringFieldUpdateOperationsInput
  createdPostIdeas: PostIdeaUpdateManyWithoutIdeaNestedInput
  createdUserVotes: UserVoteUpdateManyWithoutIdeaNestedInput
  editingBy: UserUpdateOneRequiredWithoutEditedIdeasNestedInput
  status: EnumIdeaStatusFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
}

input IdeaUpdateWithoutCreatedPostIdeasInput {
  approvedBy: UserUpdateOneRequiredWithoutApprovedIdeasNestedInput
  content: NullableStringFieldUpdateOperationsInput
  createdUserVotes: UserVoteUpdateManyWithoutIdeaNestedInput
  editingBy: UserUpdateOneRequiredWithoutEditedIdeasNestedInput
  status: EnumIdeaStatusFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
}

input IdeaUpdateWithoutCreatedUserVotesInput {
  approvedBy: UserUpdateOneRequiredWithoutApprovedIdeasNestedInput
  content: NullableStringFieldUpdateOperationsInput
  createdPostIdeas: PostIdeaUpdateManyWithoutIdeaNestedInput
  editingBy: UserUpdateOneRequiredWithoutEditedIdeasNestedInput
  status: EnumIdeaStatusFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
}

input IdeaUpdateWithoutEditingByInput {
  approvedBy: UserUpdateOneRequiredWithoutApprovedIdeasNestedInput
  content: NullableStringFieldUpdateOperationsInput
  createdPostIdeas: PostIdeaUpdateManyWithoutIdeaNestedInput
  createdUserVotes: UserVoteUpdateManyWithoutIdeaNestedInput
  id: StringFieldUpdateOperationsInput
  status: EnumIdeaStatusFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
}

input IdeaUpdateWithoutUpdatedByInput {
  approvedBy: UserUpdateOneRequiredWithoutApprovedIdeasNestedInput
  content: NullableStringFieldUpdateOperationsInput
  createdPostIdeas: PostIdeaUpdateManyWithoutIdeaNestedInput
  createdUserVotes: UserVoteUpdateManyWithoutIdeaNestedInput
  editingBy: UserUpdateOneRequiredWithoutEditedIdeasNestedInput
  id: StringFieldUpdateOperationsInput
  status: EnumIdeaStatusFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
}

input IdeaUpsertWithWhereUniqueWithoutApprovedByInput {
  create: IdeaCreateWithoutApprovedByInput!
  update: IdeaUpdateWithoutApprovedByInput!
  where: IdeaWhereUniqueInput!
}

input IdeaUpsertWithWhereUniqueWithoutCreatedByInput {
  create: IdeaCreateWithoutCreatedByInput!
  update: IdeaUpdateWithoutCreatedByInput!
  where: IdeaWhereUniqueInput!
}

input IdeaUpsertWithWhereUniqueWithoutEditingByInput {
  create: IdeaCreateWithoutEditingByInput!
  update: IdeaUpdateWithoutEditingByInput!
  where: IdeaWhereUniqueInput!
}

input IdeaUpsertWithWhereUniqueWithoutUpdatedByInput {
  create: IdeaCreateWithoutUpdatedByInput!
  update: IdeaUpdateWithoutUpdatedByInput!
  where: IdeaWhereUniqueInput!
}

input IdeaUpsertWithoutCreatedPostIdeasInput {
  create: IdeaCreateWithoutCreatedPostIdeasInput!
  update: IdeaUpdateWithoutCreatedPostIdeasInput!
}

input IdeaUpsertWithoutCreatedUserVotesInput {
  create: IdeaCreateWithoutCreatedUserVotesInput!
  update: IdeaUpdateWithoutCreatedUserVotesInput!
}

input IdeaWhereInput {
  AND: [IdeaWhereInput!]
  NOT: [IdeaWhereInput!]
  OR: [IdeaWhereInput!]
  approvedBy: UserWhereInput
  approvedById: StringFilter
  content: StringNullableFilter
  createdAt: DateTimeFilter
  createdBy: UserWhereInput
  createdById: StringNullableFilter
  createdPostIdeas: PostIdeaListRelationFilter
  createdUserVotes: UserVoteListRelationFilter
  deletedAt: [DateTimeNullableFilter!] = null
  editingBy: UserWhereInput
  editingById: StringFilter
  id: StringFilter
  status: EnumIdeaStatusFilter
  title: StringFilter
  updatedAt: DateTimeFilter
  updatedBy: UserWhereInput
  updatedById: StringNullableFilter
}

input IdeaWhereUniqueInput {
  id: String
}

type Industry {
  _count: IndustryCount!
  code: String
  createdAt: DateTime!
  createdBy: User
  createdById: String
  createdFeedbacks: [Feedback!]
  deletedAt: DateTime
  description: String
  id: ID!
  name: String!
  sortOrder: Int!
  status: ActiveStatus!
  updatedAt: DateTime!
  updatedBy: User
  updatedById: String
  userIndustries: [UserIndustry!]
}

type IndustryCount {
  createdFeedbacks: Int!
  userIndustries: Int!
}

input IndustryCreateManyCreatedByInput {
  code: String
  description: String
  name: String!
  sortOrder: Int
  status: ActiveStatus
}

input IndustryCreateManyCreatedByInputEnvelope {
  data: [IndustryCreateManyCreatedByInput!]!
  skipDuplicates: Boolean
}

input IndustryCreateManyUpdatedByInput {
  code: String
  description: String
  name: String!
  sortOrder: Int
  status: ActiveStatus
}

input IndustryCreateManyUpdatedByInputEnvelope {
  data: [IndustryCreateManyUpdatedByInput!]!
  skipDuplicates: Boolean
}

input IndustryCreateNestedManyWithoutCreatedByInput {
  connect: [IndustryWhereUniqueInput!]
}

input IndustryCreateNestedManyWithoutUpdatedByInput {
  connect: [IndustryWhereUniqueInput!]
}

input IndustryCreateNestedOneWithoutCreatedFeedbacksInput {
  connect: IndustryWhereUniqueInput
}

input IndustryCreateNestedOneWithoutUserIndustriesInput {
  connect: IndustryWhereUniqueInput
}

input IndustryCreateOrConnectWithoutCreatedByInput {
  create: IndustryCreateWithoutCreatedByInput!
  where: IndustryWhereUniqueInput!
}

input IndustryCreateOrConnectWithoutCreatedFeedbacksInput {
  create: IndustryCreateWithoutCreatedFeedbacksInput!
  where: IndustryWhereUniqueInput!
}

input IndustryCreateOrConnectWithoutUpdatedByInput {
  create: IndustryCreateWithoutUpdatedByInput!
  where: IndustryWhereUniqueInput!
}

input IndustryCreateOrConnectWithoutUserIndustriesInput {
  create: IndustryCreateWithoutUserIndustriesInput!
  where: IndustryWhereUniqueInput!
}

input IndustryCreateWithoutCreatedByInput {
  code: String
  createdFeedbacks: FeedbackCreateNestedManyWithoutIndustryInput
  description: String
  name: String!
  sortOrder: Int
  status: ActiveStatus
  userIndustries: UserIndustryCreateNestedManyWithoutIndustryInput
}

input IndustryCreateWithoutCreatedFeedbacksInput {
  code: String
  description: String
  name: String!
  sortOrder: Int
  status: ActiveStatus
  userIndustries: UserIndustryCreateNestedManyWithoutIndustryInput
}

input IndustryCreateWithoutUpdatedByInput {
  code: String
  createdFeedbacks: FeedbackCreateNestedManyWithoutIndustryInput
  description: String
  name: String!
  sortOrder: Int
  status: ActiveStatus
  userIndustries: UserIndustryCreateNestedManyWithoutIndustryInput
}

input IndustryCreateWithoutUserIndustriesInput {
  code: String
  createdFeedbacks: FeedbackCreateNestedManyWithoutIndustryInput
  description: String
  name: String!
  sortOrder: Int
  status: ActiveStatus
}

input IndustryListRelationFilter {
  every: IndustryWhereInput
  none: IndustryWhereInput
  some: IndustryWhereInput
}

input IndustryOrderByRelationAggregateInput {
  _count: SortOrder
}

input IndustryScalarWhereInput {
  AND: [IndustryScalarWhereInput!]
  NOT: [IndustryScalarWhereInput!]
  OR: [IndustryScalarWhereInput!]
  code: StringNullableFilter
  createdAt: DateTimeFilter
  createdById: StringNullableFilter
  deletedAt: [DateTimeNullableFilter!] = null
  description: StringNullableFilter
  id: StringFilter
  name: StringFilter
  sortOrder: IntFilter
  status: EnumActiveStatusFilter
  updatedAt: DateTimeFilter
  updatedById: StringNullableFilter
}

input IndustryUpdateManyMutationInput {
  code: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  sortOrder: IntFieldUpdateOperationsInput
  status: EnumActiveStatusFieldUpdateOperationsInput
}

input IndustryUpdateManyWithWhereWithoutCreatedByInput {
  data: IndustryUpdateManyMutationInput!
  where: IndustryScalarWhereInput!
}

input IndustryUpdateManyWithWhereWithoutUpdatedByInput {
  data: IndustryUpdateManyMutationInput!
  where: IndustryScalarWhereInput!
}

input IndustryUpdateManyWithoutCreatedByNestedInput {
  connect: [IndustryWhereUniqueInput!]
  connectOrCreate: [IndustryCreateOrConnectWithoutCreatedByInput!]
  create: [IndustryCreateWithoutCreatedByInput!]
  createMany: IndustryCreateManyCreatedByInputEnvelope
  delete: [IndustryWhereUniqueInput!]
  deleteMany: [IndustryScalarWhereInput!]
  disconnect: [IndustryWhereUniqueInput!]
  set: [IndustryWhereUniqueInput!]
  update: [IndustryUpdateWithWhereUniqueWithoutCreatedByInput!]
  updateMany: [IndustryUpdateManyWithWhereWithoutCreatedByInput!]
  upsert: [IndustryUpsertWithWhereUniqueWithoutCreatedByInput!]
}

input IndustryUpdateManyWithoutUpdatedByNestedInput {
  connect: [IndustryWhereUniqueInput!]
  connectOrCreate: [IndustryCreateOrConnectWithoutUpdatedByInput!]
  create: [IndustryCreateWithoutUpdatedByInput!]
  createMany: IndustryCreateManyUpdatedByInputEnvelope
  delete: [IndustryWhereUniqueInput!]
  deleteMany: [IndustryScalarWhereInput!]
  disconnect: [IndustryWhereUniqueInput!]
  set: [IndustryWhereUniqueInput!]
  update: [IndustryUpdateWithWhereUniqueWithoutUpdatedByInput!]
  updateMany: [IndustryUpdateManyWithWhereWithoutUpdatedByInput!]
  upsert: [IndustryUpsertWithWhereUniqueWithoutUpdatedByInput!]
}

input IndustryUpdateOneRequiredWithoutCreatedFeedbacksNestedInput {
  connect: IndustryWhereUniqueInput
  connectOrCreate: IndustryCreateOrConnectWithoutCreatedFeedbacksInput
  create: IndustryCreateWithoutCreatedFeedbacksInput
  update: IndustryUpdateWithoutCreatedFeedbacksInput
  upsert: IndustryUpsertWithoutCreatedFeedbacksInput
}

input IndustryUpdateOneRequiredWithoutUserIndustriesNestedInput {
  connect: IndustryWhereUniqueInput
  connectOrCreate: IndustryCreateOrConnectWithoutUserIndustriesInput
  create: IndustryCreateWithoutUserIndustriesInput
  update: IndustryUpdateWithoutUserIndustriesInput
  upsert: IndustryUpsertWithoutUserIndustriesInput
}

input IndustryUpdateWithWhereUniqueWithoutCreatedByInput {
  data: IndustryUpdateWithoutCreatedByInput!
  where: IndustryWhereUniqueInput!
}

input IndustryUpdateWithWhereUniqueWithoutUpdatedByInput {
  data: IndustryUpdateWithoutUpdatedByInput!
  where: IndustryWhereUniqueInput!
}

input IndustryUpdateWithoutCreatedByInput {
  code: NullableStringFieldUpdateOperationsInput
  createdFeedbacks: FeedbackUpdateManyWithoutIndustryNestedInput
  description: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  sortOrder: IntFieldUpdateOperationsInput
  status: EnumActiveStatusFieldUpdateOperationsInput
  userIndustries: UserIndustryUpdateManyWithoutIndustryNestedInput
}

input IndustryUpdateWithoutCreatedFeedbacksInput {
  code: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  sortOrder: IntFieldUpdateOperationsInput
  status: EnumActiveStatusFieldUpdateOperationsInput
  userIndustries: UserIndustryUpdateManyWithoutIndustryNestedInput
}

input IndustryUpdateWithoutUpdatedByInput {
  code: NullableStringFieldUpdateOperationsInput
  createdFeedbacks: FeedbackUpdateManyWithoutIndustryNestedInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  sortOrder: IntFieldUpdateOperationsInput
  status: EnumActiveStatusFieldUpdateOperationsInput
  userIndustries: UserIndustryUpdateManyWithoutIndustryNestedInput
}

input IndustryUpdateWithoutUserIndustriesInput {
  code: NullableStringFieldUpdateOperationsInput
  createdFeedbacks: FeedbackUpdateManyWithoutIndustryNestedInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  sortOrder: IntFieldUpdateOperationsInput
  status: EnumActiveStatusFieldUpdateOperationsInput
}

input IndustryUpsertWithWhereUniqueWithoutCreatedByInput {
  create: IndustryCreateWithoutCreatedByInput!
  update: IndustryUpdateWithoutCreatedByInput!
  where: IndustryWhereUniqueInput!
}

input IndustryUpsertWithWhereUniqueWithoutUpdatedByInput {
  create: IndustryCreateWithoutUpdatedByInput!
  update: IndustryUpdateWithoutUpdatedByInput!
  where: IndustryWhereUniqueInput!
}

input IndustryUpsertWithoutCreatedFeedbacksInput {
  create: IndustryCreateWithoutCreatedFeedbacksInput!
  update: IndustryUpdateWithoutCreatedFeedbacksInput!
}

input IndustryUpsertWithoutUserIndustriesInput {
  create: IndustryCreateWithoutUserIndustriesInput!
  update: IndustryUpdateWithoutUserIndustriesInput!
}

input IndustryWhereInput {
  AND: [IndustryWhereInput!]
  NOT: [IndustryWhereInput!]
  OR: [IndustryWhereInput!]
  code: StringNullableFilter
  createdAt: DateTimeFilter
  createdBy: UserWhereInput
  createdById: StringNullableFilter
  createdFeedbacks: FeedbackListRelationFilter
  deletedAt: [DateTimeNullableFilter!] = null
  description: StringNullableFilter
  id: StringFilter
  name: StringFilter
  sortOrder: IntFilter
  status: EnumActiveStatusFilter
  updatedAt: DateTimeFilter
  updatedBy: UserWhereInput
  updatedById: StringNullableFilter
  userIndustries: UserIndustryListRelationFilter
}

input IndustryWhereUniqueInput {
  code: String
  id: String
}

input IntFieldUpdateOperationsInput {
  decrement: Int
  divide: Int
  increment: Int
  multiply: Int
  set: Int
}

input IntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

"""
A field whose value is a JSON Web Token (JWT): https://jwt.io/introduction.
"""
scalar JWT

input LoginInput {
  email: String
  password: String!
  tenantId: String!
  username: String!
}

type Mutation {
  deleteDepartments(where: DepartmentWhereInput): Int!
  login(data: LoginInput!): Auth!
  refreshToken(token: JWT!): Token!
  saveDepartment(data: DepartmentCreateInput!): Department!
  saveDepartments(data: [DepartmentCreateManyInput!]!, skipDuplicates: Boolean): Int!
  saveOneTenant(data: UserCreateInput!): Token!
  updateDepartment(data: DepartmentUpdateInput!, where: DepartmentWhereUniqueInput!): Department!
  updateDepartments(data: DepartmentUpdateManyMutationInput!, where: DepartmentWhereInput): Int!
}

input NestedBoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input NestedDateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input NestedDateTimeNullableFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableFilter
  notIn: [DateTime!]
}

input NestedEnumActiveStatusFilter {
  equals: ActiveStatus
  in: [ActiveStatus!]
  not: NestedEnumActiveStatusFilter
  notIn: [ActiveStatus!]
}

input NestedEnumFeedbackStatusFilter {
  equals: FeedbackStatus
  in: [FeedbackStatus!]
  not: NestedEnumFeedbackStatusFilter
  notIn: [FeedbackStatus!]
}

input NestedEnumFeedbackTypeFilter {
  equals: FeedbackType
  in: [FeedbackType!]
  not: NestedEnumFeedbackTypeFilter
  notIn: [FeedbackType!]
}

input NestedEnumGenderNullableFilter {
  equals: Gender
  in: [Gender!]
  not: NestedEnumGenderNullableFilter
  notIn: [Gender!]
}

input NestedEnumIdeaStatusFilter {
  equals: IdeaStatus
  in: [IdeaStatus!]
  not: NestedEnumIdeaStatusFilter
  notIn: [IdeaStatus!]
}

input NestedEnumPostStatusFilter {
  equals: PostStatus
  in: [PostStatus!]
  not: NestedEnumPostStatusFilter
  notIn: [PostStatus!]
}

input NestedEnumPostTypeFilter {
  equals: PostType
  in: [PostType!]
  not: NestedEnumPostTypeFilter
  notIn: [PostType!]
}

input NestedEnumRoleTypeFilter {
  equals: RoleType
  in: [RoleType!]
  not: NestedEnumRoleTypeFilter
  notIn: [RoleType!]
}

input NestedIntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

input NullableDateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input NullableEnumGenderFieldUpdateOperationsInput {
  set: Gender
}

input NullableStringFieldUpdateOperationsInput {
  set: String
}

type PageInfo {
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

type Post {
  _count: PostCount!
  approvedBy: User
  approvedById: String
  content: String!
  createdAt: DateTime!
  createdBy: User
  createdById: String
  createdPostIdeas: [PostIdea!]
  createdPostTags: [PostTag!]
  createdPostTopics: [PostTopic!]
  createdUserVotes: [UserVote!]
  deletedAt: DateTime
  editingBy: User
  editingById: String
  expiredAt: DateTime!
  head: String!
  id: ID!
  likeCount: Int!
  publishedAt: DateTime!
  slug: String!
  status: PostStatus!
  subTitle: String
  tag: String!
  title: String!
  type: PostType!
  updatedAt: DateTime!
  updatedBy: User
  updatedById: String
  viewCount: Int!
}

type PostCount {
  createdPostIdeas: Int!
  createdPostTags: Int!
  createdPostTopics: Int!
  createdUserVotes: Int!
}

input PostCreateManyApprovedByInput {
  content: String!
  editingById: String
  expiredAt: DateTime!
  head: String!
  likeCount: Int!
  publishedAt: DateTime!
  slug: String!
  status: PostStatus!
  subTitle: String
  tag: String!
  title: String!
  type: PostType
  viewCount: Int!
}

input PostCreateManyApprovedByInputEnvelope {
  data: [PostCreateManyApprovedByInput!]!
  skipDuplicates: Boolean
}

input PostCreateManyCreatedByInput {
  approvedById: String
  content: String!
  editingById: String
  expiredAt: DateTime!
  head: String!
  likeCount: Int!
  publishedAt: DateTime!
  slug: String!
  status: PostStatus!
  subTitle: String
  tag: String!
  title: String!
  type: PostType
  viewCount: Int!
}

input PostCreateManyCreatedByInputEnvelope {
  data: [PostCreateManyCreatedByInput!]!
  skipDuplicates: Boolean
}

input PostCreateManyEditingByInput {
  approvedById: String
  content: String!
  expiredAt: DateTime!
  head: String!
  likeCount: Int!
  publishedAt: DateTime!
  slug: String!
  status: PostStatus!
  subTitle: String
  tag: String!
  title: String!
  type: PostType
  viewCount: Int!
}

input PostCreateManyEditingByInputEnvelope {
  data: [PostCreateManyEditingByInput!]!
  skipDuplicates: Boolean
}

input PostCreateManyUpdatedByInput {
  approvedById: String
  content: String!
  editingById: String
  expiredAt: DateTime!
  head: String!
  likeCount: Int!
  publishedAt: DateTime!
  slug: String!
  status: PostStatus!
  subTitle: String
  tag: String!
  title: String!
  type: PostType
  viewCount: Int!
}

input PostCreateManyUpdatedByInputEnvelope {
  data: [PostCreateManyUpdatedByInput!]!
  skipDuplicates: Boolean
}

input PostCreateNestedManyWithoutApprovedByInput {
  connect: [PostWhereUniqueInput!]
}

input PostCreateNestedManyWithoutCreatedByInput {
  connect: [PostWhereUniqueInput!]
}

input PostCreateNestedManyWithoutEditingByInput {
  connect: [PostWhereUniqueInput!]
}

input PostCreateNestedManyWithoutUpdatedByInput {
  connect: [PostWhereUniqueInput!]
}

input PostCreateNestedOneWithoutCreatedPostIdeasInput {
  connect: PostWhereUniqueInput
}

input PostCreateNestedOneWithoutCreatedPostTagsInput {
  connect: PostWhereUniqueInput
}

input PostCreateNestedOneWithoutCreatedPostTopicsInput {
  connect: PostWhereUniqueInput
}

input PostCreateNestedOneWithoutCreatedUserVotesInput {
  connect: PostWhereUniqueInput
}

input PostCreateOrConnectWithoutApprovedByInput {
  create: PostCreateWithoutApprovedByInput!
  where: PostWhereUniqueInput!
}

input PostCreateOrConnectWithoutCreatedByInput {
  create: PostCreateWithoutCreatedByInput!
  where: PostWhereUniqueInput!
}

input PostCreateOrConnectWithoutCreatedPostIdeasInput {
  create: PostCreateWithoutCreatedPostIdeasInput!
  where: PostWhereUniqueInput!
}

input PostCreateOrConnectWithoutCreatedPostTagsInput {
  create: PostCreateWithoutCreatedPostTagsInput!
  where: PostWhereUniqueInput!
}

input PostCreateOrConnectWithoutCreatedPostTopicsInput {
  create: PostCreateWithoutCreatedPostTopicsInput!
  where: PostWhereUniqueInput!
}

input PostCreateOrConnectWithoutCreatedUserVotesInput {
  create: PostCreateWithoutCreatedUserVotesInput!
  where: PostWhereUniqueInput!
}

input PostCreateOrConnectWithoutEditingByInput {
  create: PostCreateWithoutEditingByInput!
  where: PostWhereUniqueInput!
}

input PostCreateOrConnectWithoutUpdatedByInput {
  create: PostCreateWithoutUpdatedByInput!
  where: PostWhereUniqueInput!
}

input PostCreateWithoutApprovedByInput {
  content: String!
  createdPostIdeas: PostIdeaCreateNestedManyWithoutPostInput
  createdPostTags: PostTagCreateNestedManyWithoutPostInput
  createdPostTopics: PostTopicCreateNestedManyWithoutPostInput
  createdUserVotes: UserVoteCreateNestedManyWithoutPostInput
  editingBy: UserCreateNestedOneWithoutEditedPostsInput
  expiredAt: DateTime!
  head: String!
  likeCount: Int!
  publishedAt: DateTime!
  slug: String!
  status: PostStatus!
  subTitle: String
  tag: String!
  title: String!
  type: PostType
  viewCount: Int!
}

input PostCreateWithoutCreatedByInput {
  approvedBy: UserCreateNestedOneWithoutApprovedPostsInput
  content: String!
  createdPostIdeas: PostIdeaCreateNestedManyWithoutPostInput
  createdPostTags: PostTagCreateNestedManyWithoutPostInput
  createdPostTopics: PostTopicCreateNestedManyWithoutPostInput
  createdUserVotes: UserVoteCreateNestedManyWithoutPostInput
  editingBy: UserCreateNestedOneWithoutEditedPostsInput
  expiredAt: DateTime!
  head: String!
  likeCount: Int!
  publishedAt: DateTime!
  slug: String!
  status: PostStatus!
  subTitle: String
  tag: String!
  title: String!
  type: PostType
  viewCount: Int!
}

input PostCreateWithoutCreatedPostIdeasInput {
  approvedBy: UserCreateNestedOneWithoutApprovedPostsInput
  content: String!
  createdPostTags: PostTagCreateNestedManyWithoutPostInput
  createdPostTopics: PostTopicCreateNestedManyWithoutPostInput
  createdUserVotes: UserVoteCreateNestedManyWithoutPostInput
  editingBy: UserCreateNestedOneWithoutEditedPostsInput
  expiredAt: DateTime!
  head: String!
  likeCount: Int!
  publishedAt: DateTime!
  slug: String!
  status: PostStatus!
  subTitle: String
  tag: String!
  title: String!
  type: PostType
  viewCount: Int!
}

input PostCreateWithoutCreatedPostTagsInput {
  approvedBy: UserCreateNestedOneWithoutApprovedPostsInput
  content: String!
  createdPostIdeas: PostIdeaCreateNestedManyWithoutPostInput
  createdPostTopics: PostTopicCreateNestedManyWithoutPostInput
  createdUserVotes: UserVoteCreateNestedManyWithoutPostInput
  editingBy: UserCreateNestedOneWithoutEditedPostsInput
  expiredAt: DateTime!
  head: String!
  likeCount: Int!
  publishedAt: DateTime!
  slug: String!
  status: PostStatus!
  subTitle: String
  tag: String!
  title: String!
  type: PostType
  viewCount: Int!
}

input PostCreateWithoutCreatedPostTopicsInput {
  approvedBy: UserCreateNestedOneWithoutApprovedPostsInput
  content: String!
  createdPostIdeas: PostIdeaCreateNestedManyWithoutPostInput
  createdPostTags: PostTagCreateNestedManyWithoutPostInput
  createdUserVotes: UserVoteCreateNestedManyWithoutPostInput
  editingBy: UserCreateNestedOneWithoutEditedPostsInput
  expiredAt: DateTime!
  head: String!
  likeCount: Int!
  publishedAt: DateTime!
  slug: String!
  status: PostStatus!
  subTitle: String
  tag: String!
  title: String!
  type: PostType
  viewCount: Int!
}

input PostCreateWithoutCreatedUserVotesInput {
  approvedBy: UserCreateNestedOneWithoutApprovedPostsInput
  content: String!
  createdPostIdeas: PostIdeaCreateNestedManyWithoutPostInput
  createdPostTags: PostTagCreateNestedManyWithoutPostInput
  createdPostTopics: PostTopicCreateNestedManyWithoutPostInput
  editingBy: UserCreateNestedOneWithoutEditedPostsInput
  expiredAt: DateTime!
  head: String!
  likeCount: Int!
  publishedAt: DateTime!
  slug: String!
  status: PostStatus!
  subTitle: String
  tag: String!
  title: String!
  type: PostType
  viewCount: Int!
}

input PostCreateWithoutEditingByInput {
  approvedBy: UserCreateNestedOneWithoutApprovedPostsInput
  content: String!
  createdPostIdeas: PostIdeaCreateNestedManyWithoutPostInput
  createdPostTags: PostTagCreateNestedManyWithoutPostInput
  createdPostTopics: PostTopicCreateNestedManyWithoutPostInput
  createdUserVotes: UserVoteCreateNestedManyWithoutPostInput
  expiredAt: DateTime!
  head: String!
  likeCount: Int!
  publishedAt: DateTime!
  slug: String!
  status: PostStatus!
  subTitle: String
  tag: String!
  title: String!
  type: PostType
  viewCount: Int!
}

input PostCreateWithoutUpdatedByInput {
  approvedBy: UserCreateNestedOneWithoutApprovedPostsInput
  content: String!
  createdPostIdeas: PostIdeaCreateNestedManyWithoutPostInput
  createdPostTags: PostTagCreateNestedManyWithoutPostInput
  createdPostTopics: PostTopicCreateNestedManyWithoutPostInput
  createdUserVotes: UserVoteCreateNestedManyWithoutPostInput
  editingBy: UserCreateNestedOneWithoutEditedPostsInput
  expiredAt: DateTime!
  head: String!
  likeCount: Int!
  publishedAt: DateTime!
  slug: String!
  status: PostStatus!
  subTitle: String
  tag: String!
  title: String!
  type: PostType
  viewCount: Int!
}

type PostIdea {
  createdAt: DateTime!
  createdBy: User
  createdById: String
  deletedAt: DateTime
  description: String
  id: ID!
  idea: Idea!
  ideaId: String!
  post: Post!
  postId: String!
  updatedAt: DateTime!
  updatedBy: User
  updatedById: String
  user: User!
  userId: String!
}

input PostIdeaCreateManyCreatedByInput {
  description: String
  ideaId: String!
  postId: String!
  userId: String!
}

input PostIdeaCreateManyCreatedByInputEnvelope {
  data: [PostIdeaCreateManyCreatedByInput!]!
  skipDuplicates: Boolean
}

input PostIdeaCreateManyIdeaInput {
  description: String
  postId: String!
  userId: String!
}

input PostIdeaCreateManyIdeaInputEnvelope {
  data: [PostIdeaCreateManyIdeaInput!]!
  skipDuplicates: Boolean
}

input PostIdeaCreateManyPostInput {
  description: String
  ideaId: String!
  userId: String!
}

input PostIdeaCreateManyPostInputEnvelope {
  data: [PostIdeaCreateManyPostInput!]!
  skipDuplicates: Boolean
}

input PostIdeaCreateManyUpdatedByInput {
  description: String
  ideaId: String!
  postId: String!
  userId: String!
}

input PostIdeaCreateManyUpdatedByInputEnvelope {
  data: [PostIdeaCreateManyUpdatedByInput!]!
  skipDuplicates: Boolean
}

input PostIdeaCreateManyUserInput {
  description: String
  ideaId: String!
  postId: String!
}

input PostIdeaCreateManyUserInputEnvelope {
  data: [PostIdeaCreateManyUserInput!]!
  skipDuplicates: Boolean
}

input PostIdeaCreateNestedManyWithoutCreatedByInput {
  connect: [PostIdeaWhereUniqueInput!]
}

input PostIdeaCreateNestedManyWithoutIdeaInput {
  connect: [PostIdeaWhereUniqueInput!]
}

input PostIdeaCreateNestedManyWithoutPostInput {
  connect: [PostIdeaWhereUniqueInput!]
}

input PostIdeaCreateNestedManyWithoutUpdatedByInput {
  connect: [PostIdeaWhereUniqueInput!]
}

input PostIdeaCreateNestedManyWithoutUserInput {
  connect: [PostIdeaWhereUniqueInput!]
}

input PostIdeaCreateOrConnectWithoutCreatedByInput {
  create: PostIdeaCreateWithoutCreatedByInput!
  where: PostIdeaWhereUniqueInput!
}

input PostIdeaCreateOrConnectWithoutIdeaInput {
  create: PostIdeaCreateWithoutIdeaInput!
  where: PostIdeaWhereUniqueInput!
}

input PostIdeaCreateOrConnectWithoutPostInput {
  create: PostIdeaCreateWithoutPostInput!
  where: PostIdeaWhereUniqueInput!
}

input PostIdeaCreateOrConnectWithoutUpdatedByInput {
  create: PostIdeaCreateWithoutUpdatedByInput!
  where: PostIdeaWhereUniqueInput!
}

input PostIdeaCreateOrConnectWithoutUserInput {
  create: PostIdeaCreateWithoutUserInput!
  where: PostIdeaWhereUniqueInput!
}

input PostIdeaCreateWithoutCreatedByInput {
  description: String
  idea: IdeaCreateNestedOneWithoutCreatedPostIdeasInput!
  post: PostCreateNestedOneWithoutCreatedPostIdeasInput!
  user: UserCreateNestedOneWithoutCreatedPostIdeasInput!
}

input PostIdeaCreateWithoutIdeaInput {
  description: String
  post: PostCreateNestedOneWithoutCreatedPostIdeasInput!
  user: UserCreateNestedOneWithoutCreatedPostIdeasInput!
}

input PostIdeaCreateWithoutPostInput {
  description: String
  idea: IdeaCreateNestedOneWithoutCreatedPostIdeasInput!
  user: UserCreateNestedOneWithoutCreatedPostIdeasInput!
}

input PostIdeaCreateWithoutUpdatedByInput {
  description: String
  idea: IdeaCreateNestedOneWithoutCreatedPostIdeasInput!
  post: PostCreateNestedOneWithoutCreatedPostIdeasInput!
  user: UserCreateNestedOneWithoutCreatedPostIdeasInput!
}

input PostIdeaCreateWithoutUserInput {
  description: String
  idea: IdeaCreateNestedOneWithoutCreatedPostIdeasInput!
  post: PostCreateNestedOneWithoutCreatedPostIdeasInput!
}

input PostIdeaListRelationFilter {
  every: PostIdeaWhereInput
  none: PostIdeaWhereInput
  some: PostIdeaWhereInput
}

input PostIdeaOrderByRelationAggregateInput {
  _count: SortOrder
}

input PostIdeaScalarWhereInput {
  AND: [PostIdeaScalarWhereInput!]
  NOT: [PostIdeaScalarWhereInput!]
  OR: [PostIdeaScalarWhereInput!]
  createdAt: DateTimeFilter
  createdById: StringNullableFilter
  deletedAt: [DateTimeNullableFilter!] = null
  description: StringNullableFilter
  id: StringFilter
  ideaId: StringFilter
  postId: StringFilter
  updatedAt: DateTimeFilter
  updatedById: StringNullableFilter
  userId: StringFilter
}

input PostIdeaUpdateManyMutationInput {
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
}

input PostIdeaUpdateManyWithWhereWithoutCreatedByInput {
  data: PostIdeaUpdateManyMutationInput!
  where: PostIdeaScalarWhereInput!
}

input PostIdeaUpdateManyWithWhereWithoutIdeaInput {
  data: PostIdeaUpdateManyMutationInput!
  where: PostIdeaScalarWhereInput!
}

input PostIdeaUpdateManyWithWhereWithoutPostInput {
  data: PostIdeaUpdateManyMutationInput!
  where: PostIdeaScalarWhereInput!
}

input PostIdeaUpdateManyWithWhereWithoutUpdatedByInput {
  data: PostIdeaUpdateManyMutationInput!
  where: PostIdeaScalarWhereInput!
}

input PostIdeaUpdateManyWithWhereWithoutUserInput {
  data: PostIdeaUpdateManyMutationInput!
  where: PostIdeaScalarWhereInput!
}

input PostIdeaUpdateManyWithoutCreatedByNestedInput {
  connect: [PostIdeaWhereUniqueInput!]
  connectOrCreate: [PostIdeaCreateOrConnectWithoutCreatedByInput!]
  create: [PostIdeaCreateWithoutCreatedByInput!]
  createMany: PostIdeaCreateManyCreatedByInputEnvelope
  delete: [PostIdeaWhereUniqueInput!]
  deleteMany: [PostIdeaScalarWhereInput!]
  disconnect: [PostIdeaWhereUniqueInput!]
  set: [PostIdeaWhereUniqueInput!]
  update: [PostIdeaUpdateWithWhereUniqueWithoutCreatedByInput!]
  updateMany: [PostIdeaUpdateManyWithWhereWithoutCreatedByInput!]
  upsert: [PostIdeaUpsertWithWhereUniqueWithoutCreatedByInput!]
}

input PostIdeaUpdateManyWithoutIdeaNestedInput {
  connect: [PostIdeaWhereUniqueInput!]
  connectOrCreate: [PostIdeaCreateOrConnectWithoutIdeaInput!]
  create: [PostIdeaCreateWithoutIdeaInput!]
  createMany: PostIdeaCreateManyIdeaInputEnvelope
  delete: [PostIdeaWhereUniqueInput!]
  deleteMany: [PostIdeaScalarWhereInput!]
  disconnect: [PostIdeaWhereUniqueInput!]
  set: [PostIdeaWhereUniqueInput!]
  update: [PostIdeaUpdateWithWhereUniqueWithoutIdeaInput!]
  updateMany: [PostIdeaUpdateManyWithWhereWithoutIdeaInput!]
  upsert: [PostIdeaUpsertWithWhereUniqueWithoutIdeaInput!]
}

input PostIdeaUpdateManyWithoutPostNestedInput {
  connect: [PostIdeaWhereUniqueInput!]
  connectOrCreate: [PostIdeaCreateOrConnectWithoutPostInput!]
  create: [PostIdeaCreateWithoutPostInput!]
  createMany: PostIdeaCreateManyPostInputEnvelope
  delete: [PostIdeaWhereUniqueInput!]
  deleteMany: [PostIdeaScalarWhereInput!]
  disconnect: [PostIdeaWhereUniqueInput!]
  set: [PostIdeaWhereUniqueInput!]
  update: [PostIdeaUpdateWithWhereUniqueWithoutPostInput!]
  updateMany: [PostIdeaUpdateManyWithWhereWithoutPostInput!]
  upsert: [PostIdeaUpsertWithWhereUniqueWithoutPostInput!]
}

input PostIdeaUpdateManyWithoutUpdatedByNestedInput {
  connect: [PostIdeaWhereUniqueInput!]
  connectOrCreate: [PostIdeaCreateOrConnectWithoutUpdatedByInput!]
  create: [PostIdeaCreateWithoutUpdatedByInput!]
  createMany: PostIdeaCreateManyUpdatedByInputEnvelope
  delete: [PostIdeaWhereUniqueInput!]
  deleteMany: [PostIdeaScalarWhereInput!]
  disconnect: [PostIdeaWhereUniqueInput!]
  set: [PostIdeaWhereUniqueInput!]
  update: [PostIdeaUpdateWithWhereUniqueWithoutUpdatedByInput!]
  updateMany: [PostIdeaUpdateManyWithWhereWithoutUpdatedByInput!]
  upsert: [PostIdeaUpsertWithWhereUniqueWithoutUpdatedByInput!]
}

input PostIdeaUpdateManyWithoutUserNestedInput {
  connect: [PostIdeaWhereUniqueInput!]
  connectOrCreate: [PostIdeaCreateOrConnectWithoutUserInput!]
  create: [PostIdeaCreateWithoutUserInput!]
  createMany: PostIdeaCreateManyUserInputEnvelope
  delete: [PostIdeaWhereUniqueInput!]
  deleteMany: [PostIdeaScalarWhereInput!]
  disconnect: [PostIdeaWhereUniqueInput!]
  set: [PostIdeaWhereUniqueInput!]
  update: [PostIdeaUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [PostIdeaUpdateManyWithWhereWithoutUserInput!]
  upsert: [PostIdeaUpsertWithWhereUniqueWithoutUserInput!]
}

input PostIdeaUpdateWithWhereUniqueWithoutCreatedByInput {
  data: PostIdeaUpdateWithoutCreatedByInput!
  where: PostIdeaWhereUniqueInput!
}

input PostIdeaUpdateWithWhereUniqueWithoutIdeaInput {
  data: PostIdeaUpdateWithoutIdeaInput!
  where: PostIdeaWhereUniqueInput!
}

input PostIdeaUpdateWithWhereUniqueWithoutPostInput {
  data: PostIdeaUpdateWithoutPostInput!
  where: PostIdeaWhereUniqueInput!
}

input PostIdeaUpdateWithWhereUniqueWithoutUpdatedByInput {
  data: PostIdeaUpdateWithoutUpdatedByInput!
  where: PostIdeaWhereUniqueInput!
}

input PostIdeaUpdateWithWhereUniqueWithoutUserInput {
  data: PostIdeaUpdateWithoutUserInput!
  where: PostIdeaWhereUniqueInput!
}

input PostIdeaUpdateWithoutCreatedByInput {
  description: NullableStringFieldUpdateOperationsInput
  idea: IdeaUpdateOneRequiredWithoutCreatedPostIdeasNestedInput
  post: PostUpdateOneRequiredWithoutCreatedPostIdeasNestedInput
  user: UserUpdateOneRequiredWithoutCreatedPostIdeasNestedInput
}

input PostIdeaUpdateWithoutIdeaInput {
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  post: PostUpdateOneRequiredWithoutCreatedPostIdeasNestedInput
  user: UserUpdateOneRequiredWithoutCreatedPostIdeasNestedInput
}

input PostIdeaUpdateWithoutPostInput {
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  idea: IdeaUpdateOneRequiredWithoutCreatedPostIdeasNestedInput
  user: UserUpdateOneRequiredWithoutCreatedPostIdeasNestedInput
}

input PostIdeaUpdateWithoutUpdatedByInput {
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  idea: IdeaUpdateOneRequiredWithoutCreatedPostIdeasNestedInput
  post: PostUpdateOneRequiredWithoutCreatedPostIdeasNestedInput
  user: UserUpdateOneRequiredWithoutCreatedPostIdeasNestedInput
}

input PostIdeaUpdateWithoutUserInput {
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  idea: IdeaUpdateOneRequiredWithoutCreatedPostIdeasNestedInput
  post: PostUpdateOneRequiredWithoutCreatedPostIdeasNestedInput
}

input PostIdeaUpsertWithWhereUniqueWithoutCreatedByInput {
  create: PostIdeaCreateWithoutCreatedByInput!
  update: PostIdeaUpdateWithoutCreatedByInput!
  where: PostIdeaWhereUniqueInput!
}

input PostIdeaUpsertWithWhereUniqueWithoutIdeaInput {
  create: PostIdeaCreateWithoutIdeaInput!
  update: PostIdeaUpdateWithoutIdeaInput!
  where: PostIdeaWhereUniqueInput!
}

input PostIdeaUpsertWithWhereUniqueWithoutPostInput {
  create: PostIdeaCreateWithoutPostInput!
  update: PostIdeaUpdateWithoutPostInput!
  where: PostIdeaWhereUniqueInput!
}

input PostIdeaUpsertWithWhereUniqueWithoutUpdatedByInput {
  create: PostIdeaCreateWithoutUpdatedByInput!
  update: PostIdeaUpdateWithoutUpdatedByInput!
  where: PostIdeaWhereUniqueInput!
}

input PostIdeaUpsertWithWhereUniqueWithoutUserInput {
  create: PostIdeaCreateWithoutUserInput!
  update: PostIdeaUpdateWithoutUserInput!
  where: PostIdeaWhereUniqueInput!
}

input PostIdeaWhereInput {
  AND: [PostIdeaWhereInput!]
  NOT: [PostIdeaWhereInput!]
  OR: [PostIdeaWhereInput!]
  createdAt: DateTimeFilter
  createdBy: UserWhereInput
  createdById: StringNullableFilter
  deletedAt: [DateTimeNullableFilter!] = null
  description: StringNullableFilter
  id: StringFilter
  idea: IdeaWhereInput
  ideaId: StringFilter
  post: PostWhereInput
  postId: StringFilter
  updatedAt: DateTimeFilter
  updatedBy: UserWhereInput
  updatedById: StringNullableFilter
  user: UserWhereInput
  userId: StringFilter
}

input PostIdeaWhereUniqueInput {
  id: String
}

input PostListRelationFilter {
  every: PostWhereInput
  none: PostWhereInput
  some: PostWhereInput
}

input PostOrderByRelationAggregateInput {
  _count: SortOrder
}

input PostScalarWhereInput {
  AND: [PostScalarWhereInput!]
  NOT: [PostScalarWhereInput!]
  OR: [PostScalarWhereInput!]
  approvedById: StringNullableFilter
  content: StringFilter
  createdAt: DateTimeFilter
  createdById: StringNullableFilter
  deletedAt: [DateTimeNullableFilter!] = null
  editingById: StringNullableFilter
  expiredAt: DateTimeFilter
  head: StringFilter
  id: StringFilter
  likeCount: IntFilter
  publishedAt: DateTimeFilter
  slug: StringFilter
  status: EnumPostStatusFilter
  subTitle: StringNullableFilter
  tag: StringFilter
  title: StringFilter
  type: EnumPostTypeFilter
  updatedAt: DateTimeFilter
  updatedById: StringNullableFilter
  viewCount: IntFilter
}

enum PostStatus {
  Editing
  Published
  Suspended
  WaitingForApproval
}

type PostTag {
  description: String
  id: ID!
  post: Post!
  postId: String!
  tag: Tag!
  tagId: String!
}

input PostTagCreateManyPostInput {
  description: String
  tagId: String!
}

input PostTagCreateManyPostInputEnvelope {
  data: [PostTagCreateManyPostInput!]!
  skipDuplicates: Boolean
}

input PostTagCreateManyTagInput {
  description: String
  postId: String!
}

input PostTagCreateManyTagInputEnvelope {
  data: [PostTagCreateManyTagInput!]!
  skipDuplicates: Boolean
}

input PostTagCreateNestedManyWithoutPostInput {
  connect: [PostTagWhereUniqueInput!]
}

input PostTagCreateNestedManyWithoutTagInput {
  connect: [PostTagWhereUniqueInput!]
}

input PostTagCreateOrConnectWithoutPostInput {
  create: PostTagCreateWithoutPostInput!
  where: PostTagWhereUniqueInput!
}

input PostTagCreateOrConnectWithoutTagInput {
  create: PostTagCreateWithoutTagInput!
  where: PostTagWhereUniqueInput!
}

input PostTagCreateWithoutPostInput {
  description: String
  tag: TagCreateNestedOneWithoutCreatedPostTagsInput!
}

input PostTagCreateWithoutTagInput {
  description: String
  post: PostCreateNestedOneWithoutCreatedPostTagsInput!
}

input PostTagListRelationFilter {
  every: PostTagWhereInput
  none: PostTagWhereInput
  some: PostTagWhereInput
}

input PostTagScalarWhereInput {
  AND: [PostTagScalarWhereInput!]
  NOT: [PostTagScalarWhereInput!]
  OR: [PostTagScalarWhereInput!]
  description: StringNullableFilter
  id: StringFilter
  postId: StringFilter
  tagId: StringFilter
}

input PostTagUpdateManyMutationInput {
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
}

input PostTagUpdateManyWithWhereWithoutPostInput {
  data: PostTagUpdateManyMutationInput!
  where: PostTagScalarWhereInput!
}

input PostTagUpdateManyWithWhereWithoutTagInput {
  data: PostTagUpdateManyMutationInput!
  where: PostTagScalarWhereInput!
}

input PostTagUpdateManyWithoutPostNestedInput {
  connect: [PostTagWhereUniqueInput!]
  connectOrCreate: [PostTagCreateOrConnectWithoutPostInput!]
  create: [PostTagCreateWithoutPostInput!]
  createMany: PostTagCreateManyPostInputEnvelope
  delete: [PostTagWhereUniqueInput!]
  deleteMany: [PostTagScalarWhereInput!]
  disconnect: [PostTagWhereUniqueInput!]
  set: [PostTagWhereUniqueInput!]
  update: [PostTagUpdateWithWhereUniqueWithoutPostInput!]
  updateMany: [PostTagUpdateManyWithWhereWithoutPostInput!]
  upsert: [PostTagUpsertWithWhereUniqueWithoutPostInput!]
}

input PostTagUpdateManyWithoutTagNestedInput {
  connect: [PostTagWhereUniqueInput!]
  connectOrCreate: [PostTagCreateOrConnectWithoutTagInput!]
  create: [PostTagCreateWithoutTagInput!]
  createMany: PostTagCreateManyTagInputEnvelope
  delete: [PostTagWhereUniqueInput!]
  deleteMany: [PostTagScalarWhereInput!]
  disconnect: [PostTagWhereUniqueInput!]
  set: [PostTagWhereUniqueInput!]
  update: [PostTagUpdateWithWhereUniqueWithoutTagInput!]
  updateMany: [PostTagUpdateManyWithWhereWithoutTagInput!]
  upsert: [PostTagUpsertWithWhereUniqueWithoutTagInput!]
}

input PostTagUpdateWithWhereUniqueWithoutPostInput {
  data: PostTagUpdateWithoutPostInput!
  where: PostTagWhereUniqueInput!
}

input PostTagUpdateWithWhereUniqueWithoutTagInput {
  data: PostTagUpdateWithoutTagInput!
  where: PostTagWhereUniqueInput!
}

input PostTagUpdateWithoutPostInput {
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  tag: TagUpdateOneRequiredWithoutCreatedPostTagsNestedInput
}

input PostTagUpdateWithoutTagInput {
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  post: PostUpdateOneRequiredWithoutCreatedPostTagsNestedInput
}

input PostTagUpsertWithWhereUniqueWithoutPostInput {
  create: PostTagCreateWithoutPostInput!
  update: PostTagUpdateWithoutPostInput!
  where: PostTagWhereUniqueInput!
}

input PostTagUpsertWithWhereUniqueWithoutTagInput {
  create: PostTagCreateWithoutTagInput!
  update: PostTagUpdateWithoutTagInput!
  where: PostTagWhereUniqueInput!
}

input PostTagWhereInput {
  AND: [PostTagWhereInput!]
  NOT: [PostTagWhereInput!]
  OR: [PostTagWhereInput!]
  description: StringNullableFilter
  id: StringFilter
  post: PostWhereInput
  postId: StringFilter
  tag: TagWhereInput
  tagId: StringFilter
}

input PostTagWhereUniqueInput {
  id: String
}

type PostTopic {
  description: String
  id: ID!
  post: Post!
  postId: String!
  topic: Topic!
  topicId: String!
}

input PostTopicCreateManyPostInput {
  description: String
  topicId: String!
}

input PostTopicCreateManyPostInputEnvelope {
  data: [PostTopicCreateManyPostInput!]!
  skipDuplicates: Boolean
}

input PostTopicCreateManyTopicInput {
  description: String
  postId: String!
}

input PostTopicCreateManyTopicInputEnvelope {
  data: [PostTopicCreateManyTopicInput!]!
  skipDuplicates: Boolean
}

input PostTopicCreateNestedManyWithoutPostInput {
  connect: [PostTopicWhereUniqueInput!]
}

input PostTopicCreateNestedManyWithoutTopicInput {
  connect: [PostTopicWhereUniqueInput!]
}

input PostTopicCreateOrConnectWithoutPostInput {
  create: PostTopicCreateWithoutPostInput!
  where: PostTopicWhereUniqueInput!
}

input PostTopicCreateOrConnectWithoutTopicInput {
  create: PostTopicCreateWithoutTopicInput!
  where: PostTopicWhereUniqueInput!
}

input PostTopicCreateWithoutPostInput {
  description: String
  topic: TopicCreateNestedOneWithoutCreatedPostTopicsInput!
}

input PostTopicCreateWithoutTopicInput {
  description: String
  post: PostCreateNestedOneWithoutCreatedPostTopicsInput!
}

input PostTopicListRelationFilter {
  every: PostTopicWhereInput
  none: PostTopicWhereInput
  some: PostTopicWhereInput
}

input PostTopicScalarWhereInput {
  AND: [PostTopicScalarWhereInput!]
  NOT: [PostTopicScalarWhereInput!]
  OR: [PostTopicScalarWhereInput!]
  description: StringNullableFilter
  id: StringFilter
  postId: StringFilter
  topicId: StringFilter
}

input PostTopicUpdateManyMutationInput {
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
}

input PostTopicUpdateManyWithWhereWithoutPostInput {
  data: PostTopicUpdateManyMutationInput!
  where: PostTopicScalarWhereInput!
}

input PostTopicUpdateManyWithWhereWithoutTopicInput {
  data: PostTopicUpdateManyMutationInput!
  where: PostTopicScalarWhereInput!
}

input PostTopicUpdateManyWithoutPostNestedInput {
  connect: [PostTopicWhereUniqueInput!]
  connectOrCreate: [PostTopicCreateOrConnectWithoutPostInput!]
  create: [PostTopicCreateWithoutPostInput!]
  createMany: PostTopicCreateManyPostInputEnvelope
  delete: [PostTopicWhereUniqueInput!]
  deleteMany: [PostTopicScalarWhereInput!]
  disconnect: [PostTopicWhereUniqueInput!]
  set: [PostTopicWhereUniqueInput!]
  update: [PostTopicUpdateWithWhereUniqueWithoutPostInput!]
  updateMany: [PostTopicUpdateManyWithWhereWithoutPostInput!]
  upsert: [PostTopicUpsertWithWhereUniqueWithoutPostInput!]
}

input PostTopicUpdateManyWithoutTopicNestedInput {
  connect: [PostTopicWhereUniqueInput!]
  connectOrCreate: [PostTopicCreateOrConnectWithoutTopicInput!]
  create: [PostTopicCreateWithoutTopicInput!]
  createMany: PostTopicCreateManyTopicInputEnvelope
  delete: [PostTopicWhereUniqueInput!]
  deleteMany: [PostTopicScalarWhereInput!]
  disconnect: [PostTopicWhereUniqueInput!]
  set: [PostTopicWhereUniqueInput!]
  update: [PostTopicUpdateWithWhereUniqueWithoutTopicInput!]
  updateMany: [PostTopicUpdateManyWithWhereWithoutTopicInput!]
  upsert: [PostTopicUpsertWithWhereUniqueWithoutTopicInput!]
}

input PostTopicUpdateWithWhereUniqueWithoutPostInput {
  data: PostTopicUpdateWithoutPostInput!
  where: PostTopicWhereUniqueInput!
}

input PostTopicUpdateWithWhereUniqueWithoutTopicInput {
  data: PostTopicUpdateWithoutTopicInput!
  where: PostTopicWhereUniqueInput!
}

input PostTopicUpdateWithoutPostInput {
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  topic: TopicUpdateOneRequiredWithoutCreatedPostTopicsNestedInput
}

input PostTopicUpdateWithoutTopicInput {
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  post: PostUpdateOneRequiredWithoutCreatedPostTopicsNestedInput
}

input PostTopicUpsertWithWhereUniqueWithoutPostInput {
  create: PostTopicCreateWithoutPostInput!
  update: PostTopicUpdateWithoutPostInput!
  where: PostTopicWhereUniqueInput!
}

input PostTopicUpsertWithWhereUniqueWithoutTopicInput {
  create: PostTopicCreateWithoutTopicInput!
  update: PostTopicUpdateWithoutTopicInput!
  where: PostTopicWhereUniqueInput!
}

input PostTopicWhereInput {
  AND: [PostTopicWhereInput!]
  NOT: [PostTopicWhereInput!]
  OR: [PostTopicWhereInput!]
  description: StringNullableFilter
  id: StringFilter
  post: PostWhereInput
  postId: StringFilter
  topic: TopicWhereInput
  topicId: StringFilter
}

input PostTopicWhereUniqueInput {
  id: String
}

enum PostType {
  Announcement
  Campaign
  Post
}

input PostUpdateManyMutationInput {
  content: StringFieldUpdateOperationsInput
  expiredAt: DateTimeFieldUpdateOperationsInput
  head: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  likeCount: IntFieldUpdateOperationsInput
  publishedAt: DateTimeFieldUpdateOperationsInput
  slug: StringFieldUpdateOperationsInput
  status: EnumPostStatusFieldUpdateOperationsInput
  subTitle: NullableStringFieldUpdateOperationsInput
  tag: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  type: EnumPostTypeFieldUpdateOperationsInput
  viewCount: IntFieldUpdateOperationsInput
}

input PostUpdateManyWithWhereWithoutApprovedByInput {
  data: PostUpdateManyMutationInput!
  where: PostScalarWhereInput!
}

input PostUpdateManyWithWhereWithoutCreatedByInput {
  data: PostUpdateManyMutationInput!
  where: PostScalarWhereInput!
}

input PostUpdateManyWithWhereWithoutEditingByInput {
  data: PostUpdateManyMutationInput!
  where: PostScalarWhereInput!
}

input PostUpdateManyWithWhereWithoutUpdatedByInput {
  data: PostUpdateManyMutationInput!
  where: PostScalarWhereInput!
}

input PostUpdateManyWithoutApprovedByNestedInput {
  connect: [PostWhereUniqueInput!]
  connectOrCreate: [PostCreateOrConnectWithoutApprovedByInput!]
  create: [PostCreateWithoutApprovedByInput!]
  createMany: PostCreateManyApprovedByInputEnvelope
  delete: [PostWhereUniqueInput!]
  deleteMany: [PostScalarWhereInput!]
  disconnect: [PostWhereUniqueInput!]
  set: [PostWhereUniqueInput!]
  update: [PostUpdateWithWhereUniqueWithoutApprovedByInput!]
  updateMany: [PostUpdateManyWithWhereWithoutApprovedByInput!]
  upsert: [PostUpsertWithWhereUniqueWithoutApprovedByInput!]
}

input PostUpdateManyWithoutCreatedByNestedInput {
  connect: [PostWhereUniqueInput!]
  connectOrCreate: [PostCreateOrConnectWithoutCreatedByInput!]
  create: [PostCreateWithoutCreatedByInput!]
  createMany: PostCreateManyCreatedByInputEnvelope
  delete: [PostWhereUniqueInput!]
  deleteMany: [PostScalarWhereInput!]
  disconnect: [PostWhereUniqueInput!]
  set: [PostWhereUniqueInput!]
  update: [PostUpdateWithWhereUniqueWithoutCreatedByInput!]
  updateMany: [PostUpdateManyWithWhereWithoutCreatedByInput!]
  upsert: [PostUpsertWithWhereUniqueWithoutCreatedByInput!]
}

input PostUpdateManyWithoutEditingByNestedInput {
  connect: [PostWhereUniqueInput!]
  connectOrCreate: [PostCreateOrConnectWithoutEditingByInput!]
  create: [PostCreateWithoutEditingByInput!]
  createMany: PostCreateManyEditingByInputEnvelope
  delete: [PostWhereUniqueInput!]
  deleteMany: [PostScalarWhereInput!]
  disconnect: [PostWhereUniqueInput!]
  set: [PostWhereUniqueInput!]
  update: [PostUpdateWithWhereUniqueWithoutEditingByInput!]
  updateMany: [PostUpdateManyWithWhereWithoutEditingByInput!]
  upsert: [PostUpsertWithWhereUniqueWithoutEditingByInput!]
}

input PostUpdateManyWithoutUpdatedByNestedInput {
  connect: [PostWhereUniqueInput!]
  connectOrCreate: [PostCreateOrConnectWithoutUpdatedByInput!]
  create: [PostCreateWithoutUpdatedByInput!]
  createMany: PostCreateManyUpdatedByInputEnvelope
  delete: [PostWhereUniqueInput!]
  deleteMany: [PostScalarWhereInput!]
  disconnect: [PostWhereUniqueInput!]
  set: [PostWhereUniqueInput!]
  update: [PostUpdateWithWhereUniqueWithoutUpdatedByInput!]
  updateMany: [PostUpdateManyWithWhereWithoutUpdatedByInput!]
  upsert: [PostUpsertWithWhereUniqueWithoutUpdatedByInput!]
}

input PostUpdateOneRequiredWithoutCreatedPostIdeasNestedInput {
  connect: PostWhereUniqueInput
  connectOrCreate: PostCreateOrConnectWithoutCreatedPostIdeasInput
  create: PostCreateWithoutCreatedPostIdeasInput
  update: PostUpdateWithoutCreatedPostIdeasInput
  upsert: PostUpsertWithoutCreatedPostIdeasInput
}

input PostUpdateOneRequiredWithoutCreatedPostTagsNestedInput {
  connect: PostWhereUniqueInput
  connectOrCreate: PostCreateOrConnectWithoutCreatedPostTagsInput
  create: PostCreateWithoutCreatedPostTagsInput
  update: PostUpdateWithoutCreatedPostTagsInput
  upsert: PostUpsertWithoutCreatedPostTagsInput
}

input PostUpdateOneRequiredWithoutCreatedPostTopicsNestedInput {
  connect: PostWhereUniqueInput
  connectOrCreate: PostCreateOrConnectWithoutCreatedPostTopicsInput
  create: PostCreateWithoutCreatedPostTopicsInput
  update: PostUpdateWithoutCreatedPostTopicsInput
  upsert: PostUpsertWithoutCreatedPostTopicsInput
}

input PostUpdateOneRequiredWithoutCreatedUserVotesNestedInput {
  connect: PostWhereUniqueInput
  connectOrCreate: PostCreateOrConnectWithoutCreatedUserVotesInput
  create: PostCreateWithoutCreatedUserVotesInput
  update: PostUpdateWithoutCreatedUserVotesInput
  upsert: PostUpsertWithoutCreatedUserVotesInput
}

input PostUpdateWithWhereUniqueWithoutApprovedByInput {
  data: PostUpdateWithoutApprovedByInput!
  where: PostWhereUniqueInput!
}

input PostUpdateWithWhereUniqueWithoutCreatedByInput {
  data: PostUpdateWithoutCreatedByInput!
  where: PostWhereUniqueInput!
}

input PostUpdateWithWhereUniqueWithoutEditingByInput {
  data: PostUpdateWithoutEditingByInput!
  where: PostWhereUniqueInput!
}

input PostUpdateWithWhereUniqueWithoutUpdatedByInput {
  data: PostUpdateWithoutUpdatedByInput!
  where: PostWhereUniqueInput!
}

input PostUpdateWithoutApprovedByInput {
  content: StringFieldUpdateOperationsInput
  createdPostIdeas: PostIdeaUpdateManyWithoutPostNestedInput
  createdPostTags: PostTagUpdateManyWithoutPostNestedInput
  createdPostTopics: PostTopicUpdateManyWithoutPostNestedInput
  createdUserVotes: UserVoteUpdateManyWithoutPostNestedInput
  editingBy: UserUpdateOneWithoutEditedPostsNestedInput
  expiredAt: DateTimeFieldUpdateOperationsInput
  head: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  likeCount: IntFieldUpdateOperationsInput
  publishedAt: DateTimeFieldUpdateOperationsInput
  slug: StringFieldUpdateOperationsInput
  status: EnumPostStatusFieldUpdateOperationsInput
  subTitle: NullableStringFieldUpdateOperationsInput
  tag: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  type: EnumPostTypeFieldUpdateOperationsInput
  viewCount: IntFieldUpdateOperationsInput
}

input PostUpdateWithoutCreatedByInput {
  approvedBy: UserUpdateOneWithoutApprovedPostsNestedInput
  content: StringFieldUpdateOperationsInput
  createdPostIdeas: PostIdeaUpdateManyWithoutPostNestedInput
  createdPostTags: PostTagUpdateManyWithoutPostNestedInput
  createdPostTopics: PostTopicUpdateManyWithoutPostNestedInput
  createdUserVotes: UserVoteUpdateManyWithoutPostNestedInput
  editingBy: UserUpdateOneWithoutEditedPostsNestedInput
  expiredAt: DateTimeFieldUpdateOperationsInput
  head: StringFieldUpdateOperationsInput
  likeCount: IntFieldUpdateOperationsInput
  publishedAt: DateTimeFieldUpdateOperationsInput
  slug: StringFieldUpdateOperationsInput
  status: EnumPostStatusFieldUpdateOperationsInput
  subTitle: NullableStringFieldUpdateOperationsInput
  tag: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  type: EnumPostTypeFieldUpdateOperationsInput
  viewCount: IntFieldUpdateOperationsInput
}

input PostUpdateWithoutCreatedPostIdeasInput {
  approvedBy: UserUpdateOneWithoutApprovedPostsNestedInput
  content: StringFieldUpdateOperationsInput
  createdPostTags: PostTagUpdateManyWithoutPostNestedInput
  createdPostTopics: PostTopicUpdateManyWithoutPostNestedInput
  createdUserVotes: UserVoteUpdateManyWithoutPostNestedInput
  editingBy: UserUpdateOneWithoutEditedPostsNestedInput
  expiredAt: DateTimeFieldUpdateOperationsInput
  head: StringFieldUpdateOperationsInput
  likeCount: IntFieldUpdateOperationsInput
  publishedAt: DateTimeFieldUpdateOperationsInput
  slug: StringFieldUpdateOperationsInput
  status: EnumPostStatusFieldUpdateOperationsInput
  subTitle: NullableStringFieldUpdateOperationsInput
  tag: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  type: EnumPostTypeFieldUpdateOperationsInput
  viewCount: IntFieldUpdateOperationsInput
}

input PostUpdateWithoutCreatedPostTagsInput {
  approvedBy: UserUpdateOneWithoutApprovedPostsNestedInput
  content: StringFieldUpdateOperationsInput
  createdPostIdeas: PostIdeaUpdateManyWithoutPostNestedInput
  createdPostTopics: PostTopicUpdateManyWithoutPostNestedInput
  createdUserVotes: UserVoteUpdateManyWithoutPostNestedInput
  editingBy: UserUpdateOneWithoutEditedPostsNestedInput
  expiredAt: DateTimeFieldUpdateOperationsInput
  head: StringFieldUpdateOperationsInput
  likeCount: IntFieldUpdateOperationsInput
  publishedAt: DateTimeFieldUpdateOperationsInput
  slug: StringFieldUpdateOperationsInput
  status: EnumPostStatusFieldUpdateOperationsInput
  subTitle: NullableStringFieldUpdateOperationsInput
  tag: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  type: EnumPostTypeFieldUpdateOperationsInput
  viewCount: IntFieldUpdateOperationsInput
}

input PostUpdateWithoutCreatedPostTopicsInput {
  approvedBy: UserUpdateOneWithoutApprovedPostsNestedInput
  content: StringFieldUpdateOperationsInput
  createdPostIdeas: PostIdeaUpdateManyWithoutPostNestedInput
  createdPostTags: PostTagUpdateManyWithoutPostNestedInput
  createdUserVotes: UserVoteUpdateManyWithoutPostNestedInput
  editingBy: UserUpdateOneWithoutEditedPostsNestedInput
  expiredAt: DateTimeFieldUpdateOperationsInput
  head: StringFieldUpdateOperationsInput
  likeCount: IntFieldUpdateOperationsInput
  publishedAt: DateTimeFieldUpdateOperationsInput
  slug: StringFieldUpdateOperationsInput
  status: EnumPostStatusFieldUpdateOperationsInput
  subTitle: NullableStringFieldUpdateOperationsInput
  tag: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  type: EnumPostTypeFieldUpdateOperationsInput
  viewCount: IntFieldUpdateOperationsInput
}

input PostUpdateWithoutCreatedUserVotesInput {
  approvedBy: UserUpdateOneWithoutApprovedPostsNestedInput
  content: StringFieldUpdateOperationsInput
  createdPostIdeas: PostIdeaUpdateManyWithoutPostNestedInput
  createdPostTags: PostTagUpdateManyWithoutPostNestedInput
  createdPostTopics: PostTopicUpdateManyWithoutPostNestedInput
  editingBy: UserUpdateOneWithoutEditedPostsNestedInput
  expiredAt: DateTimeFieldUpdateOperationsInput
  head: StringFieldUpdateOperationsInput
  likeCount: IntFieldUpdateOperationsInput
  publishedAt: DateTimeFieldUpdateOperationsInput
  slug: StringFieldUpdateOperationsInput
  status: EnumPostStatusFieldUpdateOperationsInput
  subTitle: NullableStringFieldUpdateOperationsInput
  tag: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  type: EnumPostTypeFieldUpdateOperationsInput
  viewCount: IntFieldUpdateOperationsInput
}

input PostUpdateWithoutEditingByInput {
  approvedBy: UserUpdateOneWithoutApprovedPostsNestedInput
  content: StringFieldUpdateOperationsInput
  createdPostIdeas: PostIdeaUpdateManyWithoutPostNestedInput
  createdPostTags: PostTagUpdateManyWithoutPostNestedInput
  createdPostTopics: PostTopicUpdateManyWithoutPostNestedInput
  createdUserVotes: UserVoteUpdateManyWithoutPostNestedInput
  expiredAt: DateTimeFieldUpdateOperationsInput
  head: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  likeCount: IntFieldUpdateOperationsInput
  publishedAt: DateTimeFieldUpdateOperationsInput
  slug: StringFieldUpdateOperationsInput
  status: EnumPostStatusFieldUpdateOperationsInput
  subTitle: NullableStringFieldUpdateOperationsInput
  tag: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  type: EnumPostTypeFieldUpdateOperationsInput
  viewCount: IntFieldUpdateOperationsInput
}

input PostUpdateWithoutUpdatedByInput {
  approvedBy: UserUpdateOneWithoutApprovedPostsNestedInput
  content: StringFieldUpdateOperationsInput
  createdPostIdeas: PostIdeaUpdateManyWithoutPostNestedInput
  createdPostTags: PostTagUpdateManyWithoutPostNestedInput
  createdPostTopics: PostTopicUpdateManyWithoutPostNestedInput
  createdUserVotes: UserVoteUpdateManyWithoutPostNestedInput
  editingBy: UserUpdateOneWithoutEditedPostsNestedInput
  expiredAt: DateTimeFieldUpdateOperationsInput
  head: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  likeCount: IntFieldUpdateOperationsInput
  publishedAt: DateTimeFieldUpdateOperationsInput
  slug: StringFieldUpdateOperationsInput
  status: EnumPostStatusFieldUpdateOperationsInput
  subTitle: NullableStringFieldUpdateOperationsInput
  tag: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  type: EnumPostTypeFieldUpdateOperationsInput
  viewCount: IntFieldUpdateOperationsInput
}

input PostUpsertWithWhereUniqueWithoutApprovedByInput {
  create: PostCreateWithoutApprovedByInput!
  update: PostUpdateWithoutApprovedByInput!
  where: PostWhereUniqueInput!
}

input PostUpsertWithWhereUniqueWithoutCreatedByInput {
  create: PostCreateWithoutCreatedByInput!
  update: PostUpdateWithoutCreatedByInput!
  where: PostWhereUniqueInput!
}

input PostUpsertWithWhereUniqueWithoutEditingByInput {
  create: PostCreateWithoutEditingByInput!
  update: PostUpdateWithoutEditingByInput!
  where: PostWhereUniqueInput!
}

input PostUpsertWithWhereUniqueWithoutUpdatedByInput {
  create: PostCreateWithoutUpdatedByInput!
  update: PostUpdateWithoutUpdatedByInput!
  where: PostWhereUniqueInput!
}

input PostUpsertWithoutCreatedPostIdeasInput {
  create: PostCreateWithoutCreatedPostIdeasInput!
  update: PostUpdateWithoutCreatedPostIdeasInput!
}

input PostUpsertWithoutCreatedPostTagsInput {
  create: PostCreateWithoutCreatedPostTagsInput!
  update: PostUpdateWithoutCreatedPostTagsInput!
}

input PostUpsertWithoutCreatedPostTopicsInput {
  create: PostCreateWithoutCreatedPostTopicsInput!
  update: PostUpdateWithoutCreatedPostTopicsInput!
}

input PostUpsertWithoutCreatedUserVotesInput {
  create: PostCreateWithoutCreatedUserVotesInput!
  update: PostUpdateWithoutCreatedUserVotesInput!
}

input PostWhereInput {
  AND: [PostWhereInput!]
  NOT: [PostWhereInput!]
  OR: [PostWhereInput!]
  approvedBy: UserWhereInput
  approvedById: StringNullableFilter
  content: StringFilter
  createdAt: DateTimeFilter
  createdBy: UserWhereInput
  createdById: StringNullableFilter
  createdPostIdeas: PostIdeaListRelationFilter
  createdPostTags: PostTagListRelationFilter
  createdPostTopics: PostTopicListRelationFilter
  createdUserVotes: UserVoteListRelationFilter
  deletedAt: [DateTimeNullableFilter!] = null
  editingBy: UserWhereInput
  editingById: StringNullableFilter
  expiredAt: DateTimeFilter
  head: StringFilter
  id: StringFilter
  likeCount: IntFilter
  publishedAt: DateTimeFilter
  slug: StringFilter
  status: EnumPostStatusFilter
  subTitle: StringNullableFilter
  tag: StringFilter
  title: StringFilter
  type: EnumPostTypeFilter
  updatedAt: DateTimeFilter
  updatedBy: UserWhereInput
  updatedById: StringNullableFilter
  viewCount: IntFilter
}

input PostWhereUniqueInput {
  id: String
  slug: String
}

type Query {
  department(where: DepartmentWhereUniqueInput!): Department!
  departments(cursor: DepartmentWhereUniqueInput, distinct: [DepartmentScalarFieldEnum!], orderBy: [DepartmentOrderByWithRelationInput!] = [{createdAt: desc}], skip: Int, take: Int, where: DepartmentWhereInput): DepartmentConnection!
  users(cursor: UserWhereUniqueInput, distinct: [UserScalarFieldEnum!], orderBy: [UserOrderByWithRelationInput!] = [{createdAt: desc}], skip: Int, take: Int, where: UserWhereInput): [User!]!
}

type Role {
  createdAt: DateTime!
  createdBy: User
  createdById: String
  deletedAt: DateTime
  description: String!
  id: ID!
  name: String!
  type: RoleType!
  updatedAt: DateTime!
  updatedBy: User
  updatedById: String
}

input RoleCreateManyCreatedByInput {
  description: String!
  name: String!
  type: RoleType
}

input RoleCreateManyCreatedByInputEnvelope {
  data: [RoleCreateManyCreatedByInput!]!
  skipDuplicates: Boolean
}

input RoleCreateManyUpdatedByInput {
  description: String!
  name: String!
  type: RoleType
}

input RoleCreateManyUpdatedByInputEnvelope {
  data: [RoleCreateManyUpdatedByInput!]!
  skipDuplicates: Boolean
}

input RoleCreateNestedManyWithoutCreatedByInput {
  connect: [RoleWhereUniqueInput!]
}

input RoleCreateNestedManyWithoutUpdatedByInput {
  connect: [RoleWhereUniqueInput!]
}

input RoleCreateOrConnectWithoutCreatedByInput {
  create: RoleCreateWithoutCreatedByInput!
  where: RoleWhereUniqueInput!
}

input RoleCreateOrConnectWithoutUpdatedByInput {
  create: RoleCreateWithoutUpdatedByInput!
  where: RoleWhereUniqueInput!
}

input RoleCreateWithoutCreatedByInput {
  description: String!
  name: String!
  type: RoleType
}

input RoleCreateWithoutUpdatedByInput {
  description: String!
  name: String!
  type: RoleType
}

input RoleListRelationFilter {
  every: RoleWhereInput
  none: RoleWhereInput
  some: RoleWhereInput
}

input RoleOrderByRelationAggregateInput {
  _count: SortOrder
}

input RoleScalarWhereInput {
  AND: [RoleScalarWhereInput!]
  NOT: [RoleScalarWhereInput!]
  OR: [RoleScalarWhereInput!]
  createdAt: DateTimeFilter
  createdById: StringNullableFilter
  deletedAt: [DateTimeNullableFilter!] = null
  description: StringFilter
  id: StringFilter
  name: StringFilter
  type: EnumRoleTypeFilter
  updatedAt: DateTimeFilter
  updatedById: StringNullableFilter
}

enum RoleType {
  Admin
  Customer
  Developer
  Root
}

input RoleUpdateManyMutationInput {
  description: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  type: EnumRoleTypeFieldUpdateOperationsInput
}

input RoleUpdateManyWithWhereWithoutCreatedByInput {
  data: RoleUpdateManyMutationInput!
  where: RoleScalarWhereInput!
}

input RoleUpdateManyWithWhereWithoutUpdatedByInput {
  data: RoleUpdateManyMutationInput!
  where: RoleScalarWhereInput!
}

input RoleUpdateManyWithoutCreatedByNestedInput {
  connect: [RoleWhereUniqueInput!]
  connectOrCreate: [RoleCreateOrConnectWithoutCreatedByInput!]
  create: [RoleCreateWithoutCreatedByInput!]
  createMany: RoleCreateManyCreatedByInputEnvelope
  delete: [RoleWhereUniqueInput!]
  deleteMany: [RoleScalarWhereInput!]
  disconnect: [RoleWhereUniqueInput!]
  set: [RoleWhereUniqueInput!]
  update: [RoleUpdateWithWhereUniqueWithoutCreatedByInput!]
  updateMany: [RoleUpdateManyWithWhereWithoutCreatedByInput!]
  upsert: [RoleUpsertWithWhereUniqueWithoutCreatedByInput!]
}

input RoleUpdateManyWithoutUpdatedByNestedInput {
  connect: [RoleWhereUniqueInput!]
  connectOrCreate: [RoleCreateOrConnectWithoutUpdatedByInput!]
  create: [RoleCreateWithoutUpdatedByInput!]
  createMany: RoleCreateManyUpdatedByInputEnvelope
  delete: [RoleWhereUniqueInput!]
  deleteMany: [RoleScalarWhereInput!]
  disconnect: [RoleWhereUniqueInput!]
  set: [RoleWhereUniqueInput!]
  update: [RoleUpdateWithWhereUniqueWithoutUpdatedByInput!]
  updateMany: [RoleUpdateManyWithWhereWithoutUpdatedByInput!]
  upsert: [RoleUpsertWithWhereUniqueWithoutUpdatedByInput!]
}

input RoleUpdateWithWhereUniqueWithoutCreatedByInput {
  data: RoleUpdateWithoutCreatedByInput!
  where: RoleWhereUniqueInput!
}

input RoleUpdateWithWhereUniqueWithoutUpdatedByInput {
  data: RoleUpdateWithoutUpdatedByInput!
  where: RoleWhereUniqueInput!
}

input RoleUpdateWithoutCreatedByInput {
  description: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  type: EnumRoleTypeFieldUpdateOperationsInput
}

input RoleUpdateWithoutUpdatedByInput {
  description: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  type: EnumRoleTypeFieldUpdateOperationsInput
}

input RoleUpsertWithWhereUniqueWithoutCreatedByInput {
  create: RoleCreateWithoutCreatedByInput!
  update: RoleUpdateWithoutCreatedByInput!
  where: RoleWhereUniqueInput!
}

input RoleUpsertWithWhereUniqueWithoutUpdatedByInput {
  create: RoleCreateWithoutUpdatedByInput!
  update: RoleUpdateWithoutUpdatedByInput!
  where: RoleWhereUniqueInput!
}

input RoleWhereInput {
  AND: [RoleWhereInput!]
  NOT: [RoleWhereInput!]
  OR: [RoleWhereInput!]
  createdAt: DateTimeFilter
  createdBy: UserWhereInput
  createdById: StringNullableFilter
  deletedAt: [DateTimeNullableFilter!] = null
  description: StringFilter
  id: StringFilter
  name: StringFilter
  type: EnumRoleTypeFilter
  updatedAt: DateTimeFilter
  updatedBy: UserWhereInput
  updatedById: StringNullableFilter
}

input RoleWhereUniqueInput {
  id: String
  name: String
}

enum SortOrder {
  asc
  desc
}

input StringFieldUpdateOperationsInput {
  set: String
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input StringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

type Tag {
  _count: TagCount!
  code: String
  createdAt: DateTime!
  createdBy: User
  createdById: String
  createdPostTags: [PostTag!]
  deletedAt: DateTime
  description: String
  id: ID!
  name: String!
  sortOrder: Int!
  status: ActiveStatus!
  updatedAt: DateTime!
  updatedBy: User
  updatedById: String
}

type TagCount {
  createdPostTags: Int!
}

input TagCreateManyCreatedByInput {
  code: String
  description: String
  name: String!
  sortOrder: Int
  status: ActiveStatus
}

input TagCreateManyCreatedByInputEnvelope {
  data: [TagCreateManyCreatedByInput!]!
  skipDuplicates: Boolean
}

input TagCreateManyUpdatedByInput {
  code: String
  description: String
  name: String!
  sortOrder: Int
  status: ActiveStatus
}

input TagCreateManyUpdatedByInputEnvelope {
  data: [TagCreateManyUpdatedByInput!]!
  skipDuplicates: Boolean
}

input TagCreateNestedManyWithoutCreatedByInput {
  connect: [TagWhereUniqueInput!]
}

input TagCreateNestedManyWithoutUpdatedByInput {
  connect: [TagWhereUniqueInput!]
}

input TagCreateNestedOneWithoutCreatedPostTagsInput {
  connect: TagWhereUniqueInput
}

input TagCreateOrConnectWithoutCreatedByInput {
  create: TagCreateWithoutCreatedByInput!
  where: TagWhereUniqueInput!
}

input TagCreateOrConnectWithoutCreatedPostTagsInput {
  create: TagCreateWithoutCreatedPostTagsInput!
  where: TagWhereUniqueInput!
}

input TagCreateOrConnectWithoutUpdatedByInput {
  create: TagCreateWithoutUpdatedByInput!
  where: TagWhereUniqueInput!
}

input TagCreateWithoutCreatedByInput {
  code: String
  createdPostTags: PostTagCreateNestedManyWithoutTagInput
  description: String
  name: String!
  sortOrder: Int
  status: ActiveStatus
}

input TagCreateWithoutCreatedPostTagsInput {
  code: String
  description: String
  name: String!
  sortOrder: Int
  status: ActiveStatus
}

input TagCreateWithoutUpdatedByInput {
  code: String
  createdPostTags: PostTagCreateNestedManyWithoutTagInput
  description: String
  name: String!
  sortOrder: Int
  status: ActiveStatus
}

input TagListRelationFilter {
  every: TagWhereInput
  none: TagWhereInput
  some: TagWhereInput
}

input TagOrderByRelationAggregateInput {
  _count: SortOrder
}

input TagScalarWhereInput {
  AND: [TagScalarWhereInput!]
  NOT: [TagScalarWhereInput!]
  OR: [TagScalarWhereInput!]
  code: StringNullableFilter
  createdAt: DateTimeFilter
  createdById: StringNullableFilter
  deletedAt: [DateTimeNullableFilter!] = null
  description: StringNullableFilter
  id: StringFilter
  name: StringFilter
  sortOrder: IntFilter
  status: EnumActiveStatusFilter
  updatedAt: DateTimeFilter
  updatedById: StringNullableFilter
}

input TagUpdateManyMutationInput {
  code: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  sortOrder: IntFieldUpdateOperationsInput
  status: EnumActiveStatusFieldUpdateOperationsInput
}

input TagUpdateManyWithWhereWithoutCreatedByInput {
  data: TagUpdateManyMutationInput!
  where: TagScalarWhereInput!
}

input TagUpdateManyWithWhereWithoutUpdatedByInput {
  data: TagUpdateManyMutationInput!
  where: TagScalarWhereInput!
}

input TagUpdateManyWithoutCreatedByNestedInput {
  connect: [TagWhereUniqueInput!]
  connectOrCreate: [TagCreateOrConnectWithoutCreatedByInput!]
  create: [TagCreateWithoutCreatedByInput!]
  createMany: TagCreateManyCreatedByInputEnvelope
  delete: [TagWhereUniqueInput!]
  deleteMany: [TagScalarWhereInput!]
  disconnect: [TagWhereUniqueInput!]
  set: [TagWhereUniqueInput!]
  update: [TagUpdateWithWhereUniqueWithoutCreatedByInput!]
  updateMany: [TagUpdateManyWithWhereWithoutCreatedByInput!]
  upsert: [TagUpsertWithWhereUniqueWithoutCreatedByInput!]
}

input TagUpdateManyWithoutUpdatedByNestedInput {
  connect: [TagWhereUniqueInput!]
  connectOrCreate: [TagCreateOrConnectWithoutUpdatedByInput!]
  create: [TagCreateWithoutUpdatedByInput!]
  createMany: TagCreateManyUpdatedByInputEnvelope
  delete: [TagWhereUniqueInput!]
  deleteMany: [TagScalarWhereInput!]
  disconnect: [TagWhereUniqueInput!]
  set: [TagWhereUniqueInput!]
  update: [TagUpdateWithWhereUniqueWithoutUpdatedByInput!]
  updateMany: [TagUpdateManyWithWhereWithoutUpdatedByInput!]
  upsert: [TagUpsertWithWhereUniqueWithoutUpdatedByInput!]
}

input TagUpdateOneRequiredWithoutCreatedPostTagsNestedInput {
  connect: TagWhereUniqueInput
  connectOrCreate: TagCreateOrConnectWithoutCreatedPostTagsInput
  create: TagCreateWithoutCreatedPostTagsInput
  update: TagUpdateWithoutCreatedPostTagsInput
  upsert: TagUpsertWithoutCreatedPostTagsInput
}

input TagUpdateWithWhereUniqueWithoutCreatedByInput {
  data: TagUpdateWithoutCreatedByInput!
  where: TagWhereUniqueInput!
}

input TagUpdateWithWhereUniqueWithoutUpdatedByInput {
  data: TagUpdateWithoutUpdatedByInput!
  where: TagWhereUniqueInput!
}

input TagUpdateWithoutCreatedByInput {
  code: NullableStringFieldUpdateOperationsInput
  createdPostTags: PostTagUpdateManyWithoutTagNestedInput
  description: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  sortOrder: IntFieldUpdateOperationsInput
  status: EnumActiveStatusFieldUpdateOperationsInput
}

input TagUpdateWithoutCreatedPostTagsInput {
  code: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  sortOrder: IntFieldUpdateOperationsInput
  status: EnumActiveStatusFieldUpdateOperationsInput
}

input TagUpdateWithoutUpdatedByInput {
  code: NullableStringFieldUpdateOperationsInput
  createdPostTags: PostTagUpdateManyWithoutTagNestedInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  sortOrder: IntFieldUpdateOperationsInput
  status: EnumActiveStatusFieldUpdateOperationsInput
}

input TagUpsertWithWhereUniqueWithoutCreatedByInput {
  create: TagCreateWithoutCreatedByInput!
  update: TagUpdateWithoutCreatedByInput!
  where: TagWhereUniqueInput!
}

input TagUpsertWithWhereUniqueWithoutUpdatedByInput {
  create: TagCreateWithoutUpdatedByInput!
  update: TagUpdateWithoutUpdatedByInput!
  where: TagWhereUniqueInput!
}

input TagUpsertWithoutCreatedPostTagsInput {
  create: TagCreateWithoutCreatedPostTagsInput!
  update: TagUpdateWithoutCreatedPostTagsInput!
}

input TagWhereInput {
  AND: [TagWhereInput!]
  NOT: [TagWhereInput!]
  OR: [TagWhereInput!]
  code: StringNullableFilter
  createdAt: DateTimeFilter
  createdBy: UserWhereInput
  createdById: StringNullableFilter
  createdPostTags: PostTagListRelationFilter
  deletedAt: [DateTimeNullableFilter!] = null
  description: StringNullableFilter
  id: StringFilter
  name: StringFilter
  sortOrder: IntFilter
  status: EnumActiveStatusFilter
  updatedAt: DateTimeFilter
  updatedBy: UserWhereInput
  updatedById: StringNullableFilter
}

input TagWhereUniqueInput {
  id: String
}

type Token {
  """JWT access token"""
  accessToken: JWT!

  """JWT refresh token"""
  refreshToken: JWT!
}

type Topic {
  _count: TopicCount!
  childs: [Topic!]
  createdAt: DateTime!
  createdBy: User
  createdById: String
  createdPostTopics: [PostTopic!]
  deletedAt: DateTime
  description: String
  id: ID!
  name: String!
  parent: Topic
  parentId: String
  slug: String!
  sortOrder: Int!
  status: ActiveStatus!
  updatedAt: DateTime!
  updatedBy: User
  updatedById: String
}

type TopicCount {
  childs: Int!
  createdPostTopics: Int!
}

input TopicCreateManyCreatedByInput {
  description: String
  name: String!
  parentId: String
  slug: String!
  sortOrder: Int
  status: ActiveStatus
}

input TopicCreateManyCreatedByInputEnvelope {
  data: [TopicCreateManyCreatedByInput!]!
  skipDuplicates: Boolean
}

input TopicCreateManyParentInput {
  description: String
  name: String!
  slug: String!
  sortOrder: Int
  status: ActiveStatus
}

input TopicCreateManyParentInputEnvelope {
  data: [TopicCreateManyParentInput!]!
  skipDuplicates: Boolean
}

input TopicCreateManyUpdatedByInput {
  description: String
  name: String!
  parentId: String
  slug: String!
  sortOrder: Int
  status: ActiveStatus
}

input TopicCreateManyUpdatedByInputEnvelope {
  data: [TopicCreateManyUpdatedByInput!]!
  skipDuplicates: Boolean
}

input TopicCreateNestedManyWithoutCreatedByInput {
  connect: [TopicWhereUniqueInput!]
}

input TopicCreateNestedManyWithoutParentInput {
  connect: [TopicWhereUniqueInput!]
}

input TopicCreateNestedManyWithoutUpdatedByInput {
  connect: [TopicWhereUniqueInput!]
}

input TopicCreateNestedOneWithoutChildsInput {
  connect: TopicWhereUniqueInput
}

input TopicCreateNestedOneWithoutCreatedPostTopicsInput {
  connect: TopicWhereUniqueInput
}

input TopicCreateOrConnectWithoutChildsInput {
  create: TopicCreateWithoutChildsInput!
  where: TopicWhereUniqueInput!
}

input TopicCreateOrConnectWithoutCreatedByInput {
  create: TopicCreateWithoutCreatedByInput!
  where: TopicWhereUniqueInput!
}

input TopicCreateOrConnectWithoutCreatedPostTopicsInput {
  create: TopicCreateWithoutCreatedPostTopicsInput!
  where: TopicWhereUniqueInput!
}

input TopicCreateOrConnectWithoutParentInput {
  create: TopicCreateWithoutParentInput!
  where: TopicWhereUniqueInput!
}

input TopicCreateOrConnectWithoutUpdatedByInput {
  create: TopicCreateWithoutUpdatedByInput!
  where: TopicWhereUniqueInput!
}

input TopicCreateWithoutChildsInput {
  createdPostTopics: PostTopicCreateNestedManyWithoutTopicInput
  description: String
  name: String!
  parent: TopicCreateNestedOneWithoutChildsInput
  slug: String!
  sortOrder: Int
  status: ActiveStatus
}

input TopicCreateWithoutCreatedByInput {
  childs: TopicCreateNestedManyWithoutParentInput
  createdPostTopics: PostTopicCreateNestedManyWithoutTopicInput
  description: String
  name: String!
  parent: TopicCreateNestedOneWithoutChildsInput
  slug: String!
  sortOrder: Int
  status: ActiveStatus
}

input TopicCreateWithoutCreatedPostTopicsInput {
  childs: TopicCreateNestedManyWithoutParentInput
  description: String
  name: String!
  parent: TopicCreateNestedOneWithoutChildsInput
  slug: String!
  sortOrder: Int
  status: ActiveStatus
}

input TopicCreateWithoutParentInput {
  childs: TopicCreateNestedManyWithoutParentInput
  createdPostTopics: PostTopicCreateNestedManyWithoutTopicInput
  description: String
  name: String!
  slug: String!
  sortOrder: Int
  status: ActiveStatus
}

input TopicCreateWithoutUpdatedByInput {
  childs: TopicCreateNestedManyWithoutParentInput
  createdPostTopics: PostTopicCreateNestedManyWithoutTopicInput
  description: String
  name: String!
  parent: TopicCreateNestedOneWithoutChildsInput
  slug: String!
  sortOrder: Int
  status: ActiveStatus
}

input TopicListRelationFilter {
  every: TopicWhereInput
  none: TopicWhereInput
  some: TopicWhereInput
}

input TopicOrderByRelationAggregateInput {
  _count: SortOrder
}

input TopicScalarWhereInput {
  AND: [TopicScalarWhereInput!]
  NOT: [TopicScalarWhereInput!]
  OR: [TopicScalarWhereInput!]
  createdAt: DateTimeFilter
  createdById: StringNullableFilter
  deletedAt: [DateTimeNullableFilter!] = null
  description: StringNullableFilter
  id: StringFilter
  name: StringFilter
  parentId: StringNullableFilter
  slug: StringFilter
  sortOrder: IntFilter
  status: EnumActiveStatusFilter
  updatedAt: DateTimeFilter
  updatedById: StringNullableFilter
}

input TopicUpdateManyMutationInput {
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  slug: StringFieldUpdateOperationsInput
  sortOrder: IntFieldUpdateOperationsInput
  status: EnumActiveStatusFieldUpdateOperationsInput
}

input TopicUpdateManyWithWhereWithoutCreatedByInput {
  data: TopicUpdateManyMutationInput!
  where: TopicScalarWhereInput!
}

input TopicUpdateManyWithWhereWithoutParentInput {
  data: TopicUpdateManyMutationInput!
  where: TopicScalarWhereInput!
}

input TopicUpdateManyWithWhereWithoutUpdatedByInput {
  data: TopicUpdateManyMutationInput!
  where: TopicScalarWhereInput!
}

input TopicUpdateManyWithoutCreatedByNestedInput {
  connect: [TopicWhereUniqueInput!]
  connectOrCreate: [TopicCreateOrConnectWithoutCreatedByInput!]
  create: [TopicCreateWithoutCreatedByInput!]
  createMany: TopicCreateManyCreatedByInputEnvelope
  delete: [TopicWhereUniqueInput!]
  deleteMany: [TopicScalarWhereInput!]
  disconnect: [TopicWhereUniqueInput!]
  set: [TopicWhereUniqueInput!]
  update: [TopicUpdateWithWhereUniqueWithoutCreatedByInput!]
  updateMany: [TopicUpdateManyWithWhereWithoutCreatedByInput!]
  upsert: [TopicUpsertWithWhereUniqueWithoutCreatedByInput!]
}

input TopicUpdateManyWithoutParentNestedInput {
  connect: [TopicWhereUniqueInput!]
  connectOrCreate: [TopicCreateOrConnectWithoutParentInput!]
  create: [TopicCreateWithoutParentInput!]
  createMany: TopicCreateManyParentInputEnvelope
  delete: [TopicWhereUniqueInput!]
  deleteMany: [TopicScalarWhereInput!]
  disconnect: [TopicWhereUniqueInput!]
  set: [TopicWhereUniqueInput!]
  update: [TopicUpdateWithWhereUniqueWithoutParentInput!]
  updateMany: [TopicUpdateManyWithWhereWithoutParentInput!]
  upsert: [TopicUpsertWithWhereUniqueWithoutParentInput!]
}

input TopicUpdateManyWithoutUpdatedByNestedInput {
  connect: [TopicWhereUniqueInput!]
  connectOrCreate: [TopicCreateOrConnectWithoutUpdatedByInput!]
  create: [TopicCreateWithoutUpdatedByInput!]
  createMany: TopicCreateManyUpdatedByInputEnvelope
  delete: [TopicWhereUniqueInput!]
  deleteMany: [TopicScalarWhereInput!]
  disconnect: [TopicWhereUniqueInput!]
  set: [TopicWhereUniqueInput!]
  update: [TopicUpdateWithWhereUniqueWithoutUpdatedByInput!]
  updateMany: [TopicUpdateManyWithWhereWithoutUpdatedByInput!]
  upsert: [TopicUpsertWithWhereUniqueWithoutUpdatedByInput!]
}

input TopicUpdateOneRequiredWithoutCreatedPostTopicsNestedInput {
  connect: TopicWhereUniqueInput
  connectOrCreate: TopicCreateOrConnectWithoutCreatedPostTopicsInput
  create: TopicCreateWithoutCreatedPostTopicsInput
  update: TopicUpdateWithoutCreatedPostTopicsInput
  upsert: TopicUpsertWithoutCreatedPostTopicsInput
}

input TopicUpdateOneWithoutChildsNestedInput {
  connect: TopicWhereUniqueInput
  connectOrCreate: TopicCreateOrConnectWithoutChildsInput
  create: TopicCreateWithoutChildsInput
  delete: Boolean
  disconnect: Boolean
  update: TopicUpdateWithoutChildsInput
  upsert: TopicUpsertWithoutChildsInput
}

input TopicUpdateWithWhereUniqueWithoutCreatedByInput {
  data: TopicUpdateWithoutCreatedByInput!
  where: TopicWhereUniqueInput!
}

input TopicUpdateWithWhereUniqueWithoutParentInput {
  data: TopicUpdateWithoutParentInput!
  where: TopicWhereUniqueInput!
}

input TopicUpdateWithWhereUniqueWithoutUpdatedByInput {
  data: TopicUpdateWithoutUpdatedByInput!
  where: TopicWhereUniqueInput!
}

input TopicUpdateWithoutChildsInput {
  createdPostTopics: PostTopicUpdateManyWithoutTopicNestedInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  parent: TopicUpdateOneWithoutChildsNestedInput
  slug: StringFieldUpdateOperationsInput
  sortOrder: IntFieldUpdateOperationsInput
  status: EnumActiveStatusFieldUpdateOperationsInput
}

input TopicUpdateWithoutCreatedByInput {
  childs: TopicUpdateManyWithoutParentNestedInput
  createdPostTopics: PostTopicUpdateManyWithoutTopicNestedInput
  description: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  parent: TopicUpdateOneWithoutChildsNestedInput
  slug: StringFieldUpdateOperationsInput
  sortOrder: IntFieldUpdateOperationsInput
  status: EnumActiveStatusFieldUpdateOperationsInput
}

input TopicUpdateWithoutCreatedPostTopicsInput {
  childs: TopicUpdateManyWithoutParentNestedInput
  description: NullableStringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  parent: TopicUpdateOneWithoutChildsNestedInput
  slug: StringFieldUpdateOperationsInput
  sortOrder: IntFieldUpdateOperationsInput
  status: EnumActiveStatusFieldUpdateOperationsInput
}

input TopicUpdateWithoutParentInput {
  childs: TopicUpdateManyWithoutParentNestedInput
  createdPostTopics: PostTopicUpdateManyWithoutTopicNestedInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  slug: StringFieldUpdateOperationsInput
  sortOrder: IntFieldUpdateOperationsInput
  status: EnumActiveStatusFieldUpdateOperationsInput
}

input TopicUpdateWithoutUpdatedByInput {
  childs: TopicUpdateManyWithoutParentNestedInput
  createdPostTopics: PostTopicUpdateManyWithoutTopicNestedInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  parent: TopicUpdateOneWithoutChildsNestedInput
  slug: StringFieldUpdateOperationsInput
  sortOrder: IntFieldUpdateOperationsInput
  status: EnumActiveStatusFieldUpdateOperationsInput
}

input TopicUpsertWithWhereUniqueWithoutCreatedByInput {
  create: TopicCreateWithoutCreatedByInput!
  update: TopicUpdateWithoutCreatedByInput!
  where: TopicWhereUniqueInput!
}

input TopicUpsertWithWhereUniqueWithoutParentInput {
  create: TopicCreateWithoutParentInput!
  update: TopicUpdateWithoutParentInput!
  where: TopicWhereUniqueInput!
}

input TopicUpsertWithWhereUniqueWithoutUpdatedByInput {
  create: TopicCreateWithoutUpdatedByInput!
  update: TopicUpdateWithoutUpdatedByInput!
  where: TopicWhereUniqueInput!
}

input TopicUpsertWithoutChildsInput {
  create: TopicCreateWithoutChildsInput!
  update: TopicUpdateWithoutChildsInput!
}

input TopicUpsertWithoutCreatedPostTopicsInput {
  create: TopicCreateWithoutCreatedPostTopicsInput!
  update: TopicUpdateWithoutCreatedPostTopicsInput!
}

input TopicWhereInput {
  AND: [TopicWhereInput!]
  NOT: [TopicWhereInput!]
  OR: [TopicWhereInput!]
  childs: TopicListRelationFilter
  createdAt: DateTimeFilter
  createdBy: UserWhereInput
  createdById: StringNullableFilter
  createdPostTopics: PostTopicListRelationFilter
  deletedAt: [DateTimeNullableFilter!] = null
  description: StringNullableFilter
  id: StringFilter
  name: StringFilter
  parent: TopicWhereInput
  parentId: StringNullableFilter
  slug: StringFilter
  sortOrder: IntFilter
  status: EnumActiveStatusFilter
  updatedAt: DateTimeFilter
  updatedBy: UserWhereInput
  updatedById: StringNullableFilter
}

input TopicWhereUniqueInput {
  id: String
  slug: String
}

type User {
  _count: UserCount!
  approvedIdeas: [Idea!]
  approvedPosts: [Post!]
  avartarUrl: String
  backgroundUrl: String
  code: String
  createAwards: [Award!]
  createDepartments: [Department!]
  createFeedbacks: [Feedback!]
  createIdeas: [Idea!]
  createIndustries: [Industry!]
  createPostIdeas: [PostIdea!]
  createPosts: [Post!]
  createRoles: [Role!]
  createTags: [Tag!]
  createTopics: [Topic!]
  createUserVotes: [UserVote!]
  createdAt: DateTime!
  createdBy: User
  createdById: String
  createdPostIdeas: [PostIdea!]
  createdUserAwards: [UserAward!]
  createdUserGroups: [UserGroup!]
  createdUserIndustries: [UserIndustry!]
  createdUserVotes: [UserVote!]
  createdUsers: [User!]
  dateOfBirth: DateTime
  deletedAt: DateTime
  department: Department
  departmentId: String
  editedFeedbacks: [Feedback!]
  editedIdeas: [Idea!]
  editedPosts: [Post!]
  email: String!
  fullName: String
  gender: Gender
  id: ID!
  isAdmin: Boolean!
  jobTitle: String
  originalId: String!
  password: String
  phoneNumber: String
  position: String
  resolvedFeedbacks: [Feedback!]
  status: ActiveStatus!
  updateAwards: [Award!]
  updateDepartments: [Department!]
  updateFeedbacks: [Feedback!]
  updateIdeas: [Idea!]
  updateIndustries: [Industry!]
  updatePostIdeas: [PostIdea!]
  updatePosts: [Post!]
  updateRoles: [Role!]
  updateTags: [Tag!]
  updateTopics: [Topic!]
  updateUserVotes: [UserVote!]
  updatedAt: DateTime!
  updatedBy: User
  updatedById: String
  updatedUsers: [User!]
}

type UserAward {
  award: Award!
  awardId: String!
  id: ID!
  receivedAt: DateTime!
  user: User!
  userId: String!
}

input UserAwardCreateManyAwardInput {
  receivedAt: DateTime!
  userId: String!
}

input UserAwardCreateManyAwardInputEnvelope {
  data: [UserAwardCreateManyAwardInput!]!
  skipDuplicates: Boolean
}

input UserAwardCreateManyUserInput {
  awardId: String!
  receivedAt: DateTime!
}

input UserAwardCreateManyUserInputEnvelope {
  data: [UserAwardCreateManyUserInput!]!
  skipDuplicates: Boolean
}

input UserAwardCreateNestedManyWithoutAwardInput {
  connect: [UserAwardWhereUniqueInput!]
}

input UserAwardCreateNestedManyWithoutUserInput {
  connect: [UserAwardWhereUniqueInput!]
}

input UserAwardCreateOrConnectWithoutAwardInput {
  create: UserAwardCreateWithoutAwardInput!
  where: UserAwardWhereUniqueInput!
}

input UserAwardCreateOrConnectWithoutUserInput {
  create: UserAwardCreateWithoutUserInput!
  where: UserAwardWhereUniqueInput!
}

input UserAwardCreateWithoutAwardInput {
  receivedAt: DateTime!
  user: UserCreateNestedOneWithoutCreatedUserAwardsInput!
}

input UserAwardCreateWithoutUserInput {
  award: AwardCreateNestedOneWithoutCreatedUserAwardInput!
  receivedAt: DateTime!
}

input UserAwardListRelationFilter {
  every: UserAwardWhereInput
  none: UserAwardWhereInput
  some: UserAwardWhereInput
}

input UserAwardOrderByRelationAggregateInput {
  _count: SortOrder
}

input UserAwardScalarWhereInput {
  AND: [UserAwardScalarWhereInput!]
  NOT: [UserAwardScalarWhereInput!]
  OR: [UserAwardScalarWhereInput!]
  awardId: StringFilter
  id: StringFilter
  receivedAt: DateTimeFilter
  userId: StringFilter
}

input UserAwardUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  receivedAt: DateTimeFieldUpdateOperationsInput
}

input UserAwardUpdateManyWithWhereWithoutAwardInput {
  data: UserAwardUpdateManyMutationInput!
  where: UserAwardScalarWhereInput!
}

input UserAwardUpdateManyWithWhereWithoutUserInput {
  data: UserAwardUpdateManyMutationInput!
  where: UserAwardScalarWhereInput!
}

input UserAwardUpdateManyWithoutAwardNestedInput {
  connect: [UserAwardWhereUniqueInput!]
  connectOrCreate: [UserAwardCreateOrConnectWithoutAwardInput!]
  create: [UserAwardCreateWithoutAwardInput!]
  createMany: UserAwardCreateManyAwardInputEnvelope
  delete: [UserAwardWhereUniqueInput!]
  deleteMany: [UserAwardScalarWhereInput!]
  disconnect: [UserAwardWhereUniqueInput!]
  set: [UserAwardWhereUniqueInput!]
  update: [UserAwardUpdateWithWhereUniqueWithoutAwardInput!]
  updateMany: [UserAwardUpdateManyWithWhereWithoutAwardInput!]
  upsert: [UserAwardUpsertWithWhereUniqueWithoutAwardInput!]
}

input UserAwardUpdateManyWithoutUserNestedInput {
  connect: [UserAwardWhereUniqueInput!]
  connectOrCreate: [UserAwardCreateOrConnectWithoutUserInput!]
  create: [UserAwardCreateWithoutUserInput!]
  createMany: UserAwardCreateManyUserInputEnvelope
  delete: [UserAwardWhereUniqueInput!]
  deleteMany: [UserAwardScalarWhereInput!]
  disconnect: [UserAwardWhereUniqueInput!]
  set: [UserAwardWhereUniqueInput!]
  update: [UserAwardUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [UserAwardUpdateManyWithWhereWithoutUserInput!]
  upsert: [UserAwardUpsertWithWhereUniqueWithoutUserInput!]
}

input UserAwardUpdateWithWhereUniqueWithoutAwardInput {
  data: UserAwardUpdateWithoutAwardInput!
  where: UserAwardWhereUniqueInput!
}

input UserAwardUpdateWithWhereUniqueWithoutUserInput {
  data: UserAwardUpdateWithoutUserInput!
  where: UserAwardWhereUniqueInput!
}

input UserAwardUpdateWithoutAwardInput {
  id: StringFieldUpdateOperationsInput
  receivedAt: DateTimeFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutCreatedUserAwardsNestedInput
}

input UserAwardUpdateWithoutUserInput {
  award: AwardUpdateOneRequiredWithoutCreatedUserAwardNestedInput
  id: StringFieldUpdateOperationsInput
  receivedAt: DateTimeFieldUpdateOperationsInput
}

input UserAwardUpsertWithWhereUniqueWithoutAwardInput {
  create: UserAwardCreateWithoutAwardInput!
  update: UserAwardUpdateWithoutAwardInput!
  where: UserAwardWhereUniqueInput!
}

input UserAwardUpsertWithWhereUniqueWithoutUserInput {
  create: UserAwardCreateWithoutUserInput!
  update: UserAwardUpdateWithoutUserInput!
  where: UserAwardWhereUniqueInput!
}

input UserAwardWhereInput {
  AND: [UserAwardWhereInput!]
  NOT: [UserAwardWhereInput!]
  OR: [UserAwardWhereInput!]
  award: AwardWhereInput
  awardId: StringFilter
  id: StringFilter
  receivedAt: DateTimeFilter
  user: UserWhereInput
  userId: StringFilter
}

input UserAwardWhereUniqueInput {
  id: String
}

type UserCount {
  approvedIdeas: Int!
  approvedPosts: Int!
  createAwards: Int!
  createDepartments: Int!
  createFeedbacks: Int!
  createIdeas: Int!
  createIndustries: Int!
  createPostIdeas: Int!
  createPosts: Int!
  createRoles: Int!
  createTags: Int!
  createTopics: Int!
  createUserVotes: Int!
  createdPostIdeas: Int!
  createdUserAwards: Int!
  createdUserGroups: Int!
  createdUserIndustries: Int!
  createdUserVotes: Int!
  createdUsers: Int!
  editedFeedbacks: Int!
  editedIdeas: Int!
  editedPosts: Int!
  resolvedFeedbacks: Int!
  updateAwards: Int!
  updateDepartments: Int!
  updateFeedbacks: Int!
  updateIdeas: Int!
  updateIndustries: Int!
  updatePostIdeas: Int!
  updatePosts: Int!
  updateRoles: Int!
  updateTags: Int!
  updateTopics: Int!
  updateUserVotes: Int!
  updatedUsers: Int!
}

input UserCreateInput {
  approvedIdeas: IdeaCreateNestedManyWithoutApprovedByInput
  approvedPosts: PostCreateNestedManyWithoutApprovedByInput
  avartarUrl: String
  backgroundUrl: String
  code: String
  createAwards: AwardCreateNestedManyWithoutCreatedByInput
  createDepartments: DepartmentCreateNestedManyWithoutCreatedByInput
  createFeedbacks: FeedbackCreateNestedManyWithoutCreatedByInput
  createIdeas: IdeaCreateNestedManyWithoutCreatedByInput
  createIndustries: IndustryCreateNestedManyWithoutCreatedByInput
  createPostIdeas: PostIdeaCreateNestedManyWithoutCreatedByInput
  createPosts: PostCreateNestedManyWithoutCreatedByInput
  createRoles: RoleCreateNestedManyWithoutCreatedByInput
  createTags: TagCreateNestedManyWithoutCreatedByInput
  createTopics: TopicCreateNestedManyWithoutCreatedByInput
  createUserVotes: UserVoteCreateNestedManyWithoutCreatedByInput
  createdPostIdeas: PostIdeaCreateNestedManyWithoutUserInput
  createdUserAwards: UserAwardCreateNestedManyWithoutUserInput
  createdUserGroups: UserGroupCreateNestedManyWithoutUserInput
  createdUserIndustries: UserIndustryCreateNestedManyWithoutUserInput
  createdUserVotes: UserVoteCreateNestedManyWithoutUserInput
  createdUsers: UserCreateNestedManyWithoutCreatedByInput
  dateOfBirth: DateTime
  department: DepartmentCreateNestedOneWithoutUsersInput
  editedFeedbacks: FeedbackCreateNestedManyWithoutEditingByInput
  editedIdeas: IdeaCreateNestedManyWithoutEditingByInput
  editedPosts: PostCreateNestedManyWithoutEditingByInput
  email: String!
  fullName: String
  gender: Gender
  isAdmin: Boolean!
  jobTitle: String
  originalId: String!
  password: String
  phoneNumber: String
  position: String
  resolvedFeedbacks: FeedbackCreateNestedManyWithoutResolvedByInput
  status: ActiveStatus
  updateAwards: AwardCreateNestedManyWithoutUpdatedByInput
  updateDepartments: DepartmentCreateNestedManyWithoutUpdatedByInput
  updateFeedbacks: FeedbackCreateNestedManyWithoutUpdatedByInput
  updateIdeas: IdeaCreateNestedManyWithoutUpdatedByInput
  updateIndustries: IndustryCreateNestedManyWithoutUpdatedByInput
  updatePostIdeas: PostIdeaCreateNestedManyWithoutUpdatedByInput
  updatePosts: PostCreateNestedManyWithoutUpdatedByInput
  updateRoles: RoleCreateNestedManyWithoutUpdatedByInput
  updateTags: TagCreateNestedManyWithoutUpdatedByInput
  updateTopics: TopicCreateNestedManyWithoutUpdatedByInput
  updateUserVotes: UserVoteCreateNestedManyWithoutUpdatedByInput
  updatedUsers: UserCreateNestedManyWithoutUpdatedByInput
}

input UserCreateManyCreatedByInput {
  avartarUrl: String
  backgroundUrl: String
  code: String
  dateOfBirth: DateTime
  departmentId: String
  email: String!
  fullName: String
  gender: Gender
  isAdmin: Boolean!
  jobTitle: String
  originalId: String!
  password: String
  phoneNumber: String
  position: String
  status: ActiveStatus
}

input UserCreateManyCreatedByInputEnvelope {
  data: [UserCreateManyCreatedByInput!]!
  skipDuplicates: Boolean
}

input UserCreateManyDepartmentInput {
  avartarUrl: String
  backgroundUrl: String
  code: String
  dateOfBirth: DateTime
  email: String!
  fullName: String
  gender: Gender
  isAdmin: Boolean!
  jobTitle: String
  originalId: String!
  password: String
  phoneNumber: String
  position: String
  status: ActiveStatus
}

input UserCreateManyDepartmentInputEnvelope {
  data: [UserCreateManyDepartmentInput!]!
  skipDuplicates: Boolean
}

input UserCreateManyUpdatedByInput {
  avartarUrl: String
  backgroundUrl: String
  code: String
  dateOfBirth: DateTime
  departmentId: String
  email: String!
  fullName: String
  gender: Gender
  isAdmin: Boolean!
  jobTitle: String
  originalId: String!
  phoneNumber: String
  position: String
  status: ActiveStatus
}

input UserCreateManyUpdatedByInputEnvelope {
  data: [UserCreateManyUpdatedByInput!]!
  skipDuplicates: Boolean
}

input UserCreateNestedManyWithoutCreatedByInput {
  connect: [UserWhereUniqueInput!]
}

input UserCreateNestedManyWithoutDepartmentInput {
  connect: [UserWhereUniqueInput!]
}

input UserCreateNestedManyWithoutUpdatedByInput {
  connect: [UserWhereUniqueInput!]
}

input UserCreateNestedOneWithoutApprovedIdeasInput {
  connect: UserWhereUniqueInput
}

input UserCreateNestedOneWithoutApprovedPostsInput {
  connect: UserWhereUniqueInput
}

input UserCreateNestedOneWithoutCreatedPostIdeasInput {
  connect: UserWhereUniqueInput
}

input UserCreateNestedOneWithoutCreatedUserAwardsInput {
  connect: UserWhereUniqueInput
}

input UserCreateNestedOneWithoutCreatedUserIndustriesInput {
  connect: UserWhereUniqueInput
}

input UserCreateNestedOneWithoutCreatedUserVotesInput {
  connect: UserWhereUniqueInput
}

input UserCreateNestedOneWithoutEditedFeedbacksInput {
  connect: UserWhereUniqueInput
}

input UserCreateNestedOneWithoutEditedIdeasInput {
  connect: UserWhereUniqueInput
}

input UserCreateNestedOneWithoutEditedPostsInput {
  connect: UserWhereUniqueInput
}

input UserCreateNestedOneWithoutResolvedFeedbacksInput {
  connect: UserWhereUniqueInput
}

input UserCreateOrConnectWithoutApprovedIdeasInput {
  create: UserCreateWithoutApprovedIdeasInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutApprovedPostsInput {
  create: UserCreateWithoutApprovedPostsInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutCreatedByInput {
  create: UserCreateWithoutCreatedByInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutCreatedPostIdeasInput {
  create: UserCreateWithoutCreatedPostIdeasInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutCreatedUserAwardsInput {
  create: UserCreateWithoutCreatedUserAwardsInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutCreatedUserIndustriesInput {
  create: UserCreateWithoutCreatedUserIndustriesInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutCreatedUserVotesInput {
  create: UserCreateWithoutCreatedUserVotesInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutDepartmentInput {
  create: UserCreateWithoutDepartmentInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutEditedFeedbacksInput {
  create: UserCreateWithoutEditedFeedbacksInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutEditedIdeasInput {
  create: UserCreateWithoutEditedIdeasInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutEditedPostsInput {
  create: UserCreateWithoutEditedPostsInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutResolvedFeedbacksInput {
  create: UserCreateWithoutResolvedFeedbacksInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutUpdatedByInput {
  create: UserCreateWithoutUpdatedByInput!
  where: UserWhereUniqueInput!
}

input UserCreateWithoutApprovedIdeasInput {
  approvedPosts: PostCreateNestedManyWithoutApprovedByInput
  avartarUrl: String
  backgroundUrl: String
  code: String
  createAwards: AwardCreateNestedManyWithoutCreatedByInput
  createDepartments: DepartmentCreateNestedManyWithoutCreatedByInput
  createFeedbacks: FeedbackCreateNestedManyWithoutCreatedByInput
  createIdeas: IdeaCreateNestedManyWithoutCreatedByInput
  createIndustries: IndustryCreateNestedManyWithoutCreatedByInput
  createPostIdeas: PostIdeaCreateNestedManyWithoutCreatedByInput
  createPosts: PostCreateNestedManyWithoutCreatedByInput
  createRoles: RoleCreateNestedManyWithoutCreatedByInput
  createTags: TagCreateNestedManyWithoutCreatedByInput
  createTopics: TopicCreateNestedManyWithoutCreatedByInput
  createUserVotes: UserVoteCreateNestedManyWithoutCreatedByInput
  createdPostIdeas: PostIdeaCreateNestedManyWithoutUserInput
  createdUserAwards: UserAwardCreateNestedManyWithoutUserInput
  createdUserGroups: UserGroupCreateNestedManyWithoutUserInput
  createdUserIndustries: UserIndustryCreateNestedManyWithoutUserInput
  createdUserVotes: UserVoteCreateNestedManyWithoutUserInput
  createdUsers: UserCreateNestedManyWithoutCreatedByInput
  dateOfBirth: DateTime
  department: DepartmentCreateNestedOneWithoutUsersInput
  editedFeedbacks: FeedbackCreateNestedManyWithoutEditingByInput
  editedIdeas: IdeaCreateNestedManyWithoutEditingByInput
  editedPosts: PostCreateNestedManyWithoutEditingByInput
  email: String!
  fullName: String
  gender: Gender
  isAdmin: Boolean!
  jobTitle: String
  originalId: String!
  password: String
  phoneNumber: String
  position: String
  resolvedFeedbacks: FeedbackCreateNestedManyWithoutResolvedByInput
  status: ActiveStatus
  updateAwards: AwardCreateNestedManyWithoutUpdatedByInput
  updateDepartments: DepartmentCreateNestedManyWithoutUpdatedByInput
  updateFeedbacks: FeedbackCreateNestedManyWithoutUpdatedByInput
  updateIdeas: IdeaCreateNestedManyWithoutUpdatedByInput
  updateIndustries: IndustryCreateNestedManyWithoutUpdatedByInput
  updatePostIdeas: PostIdeaCreateNestedManyWithoutUpdatedByInput
  updatePosts: PostCreateNestedManyWithoutUpdatedByInput
  updateRoles: RoleCreateNestedManyWithoutUpdatedByInput
  updateTags: TagCreateNestedManyWithoutUpdatedByInput
  updateTopics: TopicCreateNestedManyWithoutUpdatedByInput
  updateUserVotes: UserVoteCreateNestedManyWithoutUpdatedByInput
  updatedUsers: UserCreateNestedManyWithoutUpdatedByInput
}

input UserCreateWithoutApprovedPostsInput {
  approvedIdeas: IdeaCreateNestedManyWithoutApprovedByInput
  avartarUrl: String
  backgroundUrl: String
  code: String
  createAwards: AwardCreateNestedManyWithoutCreatedByInput
  createDepartments: DepartmentCreateNestedManyWithoutCreatedByInput
  createFeedbacks: FeedbackCreateNestedManyWithoutCreatedByInput
  createIdeas: IdeaCreateNestedManyWithoutCreatedByInput
  createIndustries: IndustryCreateNestedManyWithoutCreatedByInput
  createPostIdeas: PostIdeaCreateNestedManyWithoutCreatedByInput
  createPosts: PostCreateNestedManyWithoutCreatedByInput
  createRoles: RoleCreateNestedManyWithoutCreatedByInput
  createTags: TagCreateNestedManyWithoutCreatedByInput
  createTopics: TopicCreateNestedManyWithoutCreatedByInput
  createUserVotes: UserVoteCreateNestedManyWithoutCreatedByInput
  createdPostIdeas: PostIdeaCreateNestedManyWithoutUserInput
  createdUserAwards: UserAwardCreateNestedManyWithoutUserInput
  createdUserGroups: UserGroupCreateNestedManyWithoutUserInput
  createdUserIndustries: UserIndustryCreateNestedManyWithoutUserInput
  createdUserVotes: UserVoteCreateNestedManyWithoutUserInput
  createdUsers: UserCreateNestedManyWithoutCreatedByInput
  dateOfBirth: DateTime
  department: DepartmentCreateNestedOneWithoutUsersInput
  editedFeedbacks: FeedbackCreateNestedManyWithoutEditingByInput
  editedIdeas: IdeaCreateNestedManyWithoutEditingByInput
  editedPosts: PostCreateNestedManyWithoutEditingByInput
  email: String!
  fullName: String
  gender: Gender
  isAdmin: Boolean!
  jobTitle: String
  originalId: String!
  password: String
  phoneNumber: String
  position: String
  resolvedFeedbacks: FeedbackCreateNestedManyWithoutResolvedByInput
  status: ActiveStatus
  updateAwards: AwardCreateNestedManyWithoutUpdatedByInput
  updateDepartments: DepartmentCreateNestedManyWithoutUpdatedByInput
  updateFeedbacks: FeedbackCreateNestedManyWithoutUpdatedByInput
  updateIdeas: IdeaCreateNestedManyWithoutUpdatedByInput
  updateIndustries: IndustryCreateNestedManyWithoutUpdatedByInput
  updatePostIdeas: PostIdeaCreateNestedManyWithoutUpdatedByInput
  updatePosts: PostCreateNestedManyWithoutUpdatedByInput
  updateRoles: RoleCreateNestedManyWithoutUpdatedByInput
  updateTags: TagCreateNestedManyWithoutUpdatedByInput
  updateTopics: TopicCreateNestedManyWithoutUpdatedByInput
  updateUserVotes: UserVoteCreateNestedManyWithoutUpdatedByInput
  updatedUsers: UserCreateNestedManyWithoutUpdatedByInput
}

input UserCreateWithoutCreatedByInput {
  approvedIdeas: IdeaCreateNestedManyWithoutApprovedByInput
  approvedPosts: PostCreateNestedManyWithoutApprovedByInput
  avartarUrl: String
  backgroundUrl: String
  code: String
  createAwards: AwardCreateNestedManyWithoutCreatedByInput
  createDepartments: DepartmentCreateNestedManyWithoutCreatedByInput
  createFeedbacks: FeedbackCreateNestedManyWithoutCreatedByInput
  createIdeas: IdeaCreateNestedManyWithoutCreatedByInput
  createIndustries: IndustryCreateNestedManyWithoutCreatedByInput
  createPostIdeas: PostIdeaCreateNestedManyWithoutCreatedByInput
  createPosts: PostCreateNestedManyWithoutCreatedByInput
  createRoles: RoleCreateNestedManyWithoutCreatedByInput
  createTags: TagCreateNestedManyWithoutCreatedByInput
  createTopics: TopicCreateNestedManyWithoutCreatedByInput
  createUserVotes: UserVoteCreateNestedManyWithoutCreatedByInput
  createdPostIdeas: PostIdeaCreateNestedManyWithoutUserInput
  createdUserAwards: UserAwardCreateNestedManyWithoutUserInput
  createdUserGroups: UserGroupCreateNestedManyWithoutUserInput
  createdUserIndustries: UserIndustryCreateNestedManyWithoutUserInput
  createdUserVotes: UserVoteCreateNestedManyWithoutUserInput
  createdUsers: UserCreateNestedManyWithoutCreatedByInput
  dateOfBirth: DateTime
  department: DepartmentCreateNestedOneWithoutUsersInput
  editedFeedbacks: FeedbackCreateNestedManyWithoutEditingByInput
  editedIdeas: IdeaCreateNestedManyWithoutEditingByInput
  editedPosts: PostCreateNestedManyWithoutEditingByInput
  email: String!
  fullName: String
  gender: Gender
  isAdmin: Boolean!
  jobTitle: String
  originalId: String!
  password: String
  phoneNumber: String
  position: String
  resolvedFeedbacks: FeedbackCreateNestedManyWithoutResolvedByInput
  status: ActiveStatus
  updateAwards: AwardCreateNestedManyWithoutUpdatedByInput
  updateDepartments: DepartmentCreateNestedManyWithoutUpdatedByInput
  updateFeedbacks: FeedbackCreateNestedManyWithoutUpdatedByInput
  updateIdeas: IdeaCreateNestedManyWithoutUpdatedByInput
  updateIndustries: IndustryCreateNestedManyWithoutUpdatedByInput
  updatePostIdeas: PostIdeaCreateNestedManyWithoutUpdatedByInput
  updatePosts: PostCreateNestedManyWithoutUpdatedByInput
  updateRoles: RoleCreateNestedManyWithoutUpdatedByInput
  updateTags: TagCreateNestedManyWithoutUpdatedByInput
  updateTopics: TopicCreateNestedManyWithoutUpdatedByInput
  updateUserVotes: UserVoteCreateNestedManyWithoutUpdatedByInput
  updatedUsers: UserCreateNestedManyWithoutUpdatedByInput
}

input UserCreateWithoutCreatedPostIdeasInput {
  approvedIdeas: IdeaCreateNestedManyWithoutApprovedByInput
  approvedPosts: PostCreateNestedManyWithoutApprovedByInput
  avartarUrl: String
  backgroundUrl: String
  code: String
  createAwards: AwardCreateNestedManyWithoutCreatedByInput
  createDepartments: DepartmentCreateNestedManyWithoutCreatedByInput
  createFeedbacks: FeedbackCreateNestedManyWithoutCreatedByInput
  createIdeas: IdeaCreateNestedManyWithoutCreatedByInput
  createIndustries: IndustryCreateNestedManyWithoutCreatedByInput
  createPostIdeas: PostIdeaCreateNestedManyWithoutCreatedByInput
  createPosts: PostCreateNestedManyWithoutCreatedByInput
  createRoles: RoleCreateNestedManyWithoutCreatedByInput
  createTags: TagCreateNestedManyWithoutCreatedByInput
  createTopics: TopicCreateNestedManyWithoutCreatedByInput
  createUserVotes: UserVoteCreateNestedManyWithoutCreatedByInput
  createdUserAwards: UserAwardCreateNestedManyWithoutUserInput
  createdUserGroups: UserGroupCreateNestedManyWithoutUserInput
  createdUserIndustries: UserIndustryCreateNestedManyWithoutUserInput
  createdUserVotes: UserVoteCreateNestedManyWithoutUserInput
  createdUsers: UserCreateNestedManyWithoutCreatedByInput
  dateOfBirth: DateTime
  department: DepartmentCreateNestedOneWithoutUsersInput
  editedFeedbacks: FeedbackCreateNestedManyWithoutEditingByInput
  editedIdeas: IdeaCreateNestedManyWithoutEditingByInput
  editedPosts: PostCreateNestedManyWithoutEditingByInput
  email: String!
  fullName: String
  gender: Gender
  isAdmin: Boolean!
  jobTitle: String
  originalId: String!
  password: String
  phoneNumber: String
  position: String
  resolvedFeedbacks: FeedbackCreateNestedManyWithoutResolvedByInput
  status: ActiveStatus
  updateAwards: AwardCreateNestedManyWithoutUpdatedByInput
  updateDepartments: DepartmentCreateNestedManyWithoutUpdatedByInput
  updateFeedbacks: FeedbackCreateNestedManyWithoutUpdatedByInput
  updateIdeas: IdeaCreateNestedManyWithoutUpdatedByInput
  updateIndustries: IndustryCreateNestedManyWithoutUpdatedByInput
  updatePostIdeas: PostIdeaCreateNestedManyWithoutUpdatedByInput
  updatePosts: PostCreateNestedManyWithoutUpdatedByInput
  updateRoles: RoleCreateNestedManyWithoutUpdatedByInput
  updateTags: TagCreateNestedManyWithoutUpdatedByInput
  updateTopics: TopicCreateNestedManyWithoutUpdatedByInput
  updateUserVotes: UserVoteCreateNestedManyWithoutUpdatedByInput
  updatedUsers: UserCreateNestedManyWithoutUpdatedByInput
}

input UserCreateWithoutCreatedUserAwardsInput {
  approvedIdeas: IdeaCreateNestedManyWithoutApprovedByInput
  approvedPosts: PostCreateNestedManyWithoutApprovedByInput
  avartarUrl: String
  backgroundUrl: String
  code: String
  createAwards: AwardCreateNestedManyWithoutCreatedByInput
  createDepartments: DepartmentCreateNestedManyWithoutCreatedByInput
  createFeedbacks: FeedbackCreateNestedManyWithoutCreatedByInput
  createIdeas: IdeaCreateNestedManyWithoutCreatedByInput
  createIndustries: IndustryCreateNestedManyWithoutCreatedByInput
  createPostIdeas: PostIdeaCreateNestedManyWithoutCreatedByInput
  createPosts: PostCreateNestedManyWithoutCreatedByInput
  createRoles: RoleCreateNestedManyWithoutCreatedByInput
  createTags: TagCreateNestedManyWithoutCreatedByInput
  createTopics: TopicCreateNestedManyWithoutCreatedByInput
  createUserVotes: UserVoteCreateNestedManyWithoutCreatedByInput
  createdPostIdeas: PostIdeaCreateNestedManyWithoutUserInput
  createdUserGroups: UserGroupCreateNestedManyWithoutUserInput
  createdUserIndustries: UserIndustryCreateNestedManyWithoutUserInput
  createdUserVotes: UserVoteCreateNestedManyWithoutUserInput
  createdUsers: UserCreateNestedManyWithoutCreatedByInput
  dateOfBirth: DateTime
  department: DepartmentCreateNestedOneWithoutUsersInput
  editedFeedbacks: FeedbackCreateNestedManyWithoutEditingByInput
  editedIdeas: IdeaCreateNestedManyWithoutEditingByInput
  editedPosts: PostCreateNestedManyWithoutEditingByInput
  email: String!
  fullName: String
  gender: Gender
  isAdmin: Boolean!
  jobTitle: String
  originalId: String!
  password: String
  phoneNumber: String
  position: String
  resolvedFeedbacks: FeedbackCreateNestedManyWithoutResolvedByInput
  status: ActiveStatus
  updateAwards: AwardCreateNestedManyWithoutUpdatedByInput
  updateDepartments: DepartmentCreateNestedManyWithoutUpdatedByInput
  updateFeedbacks: FeedbackCreateNestedManyWithoutUpdatedByInput
  updateIdeas: IdeaCreateNestedManyWithoutUpdatedByInput
  updateIndustries: IndustryCreateNestedManyWithoutUpdatedByInput
  updatePostIdeas: PostIdeaCreateNestedManyWithoutUpdatedByInput
  updatePosts: PostCreateNestedManyWithoutUpdatedByInput
  updateRoles: RoleCreateNestedManyWithoutUpdatedByInput
  updateTags: TagCreateNestedManyWithoutUpdatedByInput
  updateTopics: TopicCreateNestedManyWithoutUpdatedByInput
  updateUserVotes: UserVoteCreateNestedManyWithoutUpdatedByInput
  updatedUsers: UserCreateNestedManyWithoutUpdatedByInput
}

input UserCreateWithoutCreatedUserIndustriesInput {
  approvedIdeas: IdeaCreateNestedManyWithoutApprovedByInput
  approvedPosts: PostCreateNestedManyWithoutApprovedByInput
  avartarUrl: String
  backgroundUrl: String
  code: String
  createAwards: AwardCreateNestedManyWithoutCreatedByInput
  createDepartments: DepartmentCreateNestedManyWithoutCreatedByInput
  createFeedbacks: FeedbackCreateNestedManyWithoutCreatedByInput
  createIdeas: IdeaCreateNestedManyWithoutCreatedByInput
  createIndustries: IndustryCreateNestedManyWithoutCreatedByInput
  createPostIdeas: PostIdeaCreateNestedManyWithoutCreatedByInput
  createPosts: PostCreateNestedManyWithoutCreatedByInput
  createRoles: RoleCreateNestedManyWithoutCreatedByInput
  createTags: TagCreateNestedManyWithoutCreatedByInput
  createTopics: TopicCreateNestedManyWithoutCreatedByInput
  createUserVotes: UserVoteCreateNestedManyWithoutCreatedByInput
  createdPostIdeas: PostIdeaCreateNestedManyWithoutUserInput
  createdUserAwards: UserAwardCreateNestedManyWithoutUserInput
  createdUserGroups: UserGroupCreateNestedManyWithoutUserInput
  createdUserVotes: UserVoteCreateNestedManyWithoutUserInput
  createdUsers: UserCreateNestedManyWithoutCreatedByInput
  dateOfBirth: DateTime
  department: DepartmentCreateNestedOneWithoutUsersInput
  editedFeedbacks: FeedbackCreateNestedManyWithoutEditingByInput
  editedIdeas: IdeaCreateNestedManyWithoutEditingByInput
  editedPosts: PostCreateNestedManyWithoutEditingByInput
  email: String!
  fullName: String
  gender: Gender
  isAdmin: Boolean!
  jobTitle: String
  originalId: String!
  password: String
  phoneNumber: String
  position: String
  resolvedFeedbacks: FeedbackCreateNestedManyWithoutResolvedByInput
  status: ActiveStatus
  updateAwards: AwardCreateNestedManyWithoutUpdatedByInput
  updateDepartments: DepartmentCreateNestedManyWithoutUpdatedByInput
  updateFeedbacks: FeedbackCreateNestedManyWithoutUpdatedByInput
  updateIdeas: IdeaCreateNestedManyWithoutUpdatedByInput
  updateIndustries: IndustryCreateNestedManyWithoutUpdatedByInput
  updatePostIdeas: PostIdeaCreateNestedManyWithoutUpdatedByInput
  updatePosts: PostCreateNestedManyWithoutUpdatedByInput
  updateRoles: RoleCreateNestedManyWithoutUpdatedByInput
  updateTags: TagCreateNestedManyWithoutUpdatedByInput
  updateTopics: TopicCreateNestedManyWithoutUpdatedByInput
  updateUserVotes: UserVoteCreateNestedManyWithoutUpdatedByInput
  updatedUsers: UserCreateNestedManyWithoutUpdatedByInput
}

input UserCreateWithoutCreatedUserVotesInput {
  approvedIdeas: IdeaCreateNestedManyWithoutApprovedByInput
  approvedPosts: PostCreateNestedManyWithoutApprovedByInput
  avartarUrl: String
  backgroundUrl: String
  code: String
  createAwards: AwardCreateNestedManyWithoutCreatedByInput
  createDepartments: DepartmentCreateNestedManyWithoutCreatedByInput
  createFeedbacks: FeedbackCreateNestedManyWithoutCreatedByInput
  createIdeas: IdeaCreateNestedManyWithoutCreatedByInput
  createIndustries: IndustryCreateNestedManyWithoutCreatedByInput
  createPostIdeas: PostIdeaCreateNestedManyWithoutCreatedByInput
  createPosts: PostCreateNestedManyWithoutCreatedByInput
  createRoles: RoleCreateNestedManyWithoutCreatedByInput
  createTags: TagCreateNestedManyWithoutCreatedByInput
  createTopics: TopicCreateNestedManyWithoutCreatedByInput
  createUserVotes: UserVoteCreateNestedManyWithoutCreatedByInput
  createdPostIdeas: PostIdeaCreateNestedManyWithoutUserInput
  createdUserAwards: UserAwardCreateNestedManyWithoutUserInput
  createdUserGroups: UserGroupCreateNestedManyWithoutUserInput
  createdUserIndustries: UserIndustryCreateNestedManyWithoutUserInput
  createdUsers: UserCreateNestedManyWithoutCreatedByInput
  dateOfBirth: DateTime
  department: DepartmentCreateNestedOneWithoutUsersInput
  editedFeedbacks: FeedbackCreateNestedManyWithoutEditingByInput
  editedIdeas: IdeaCreateNestedManyWithoutEditingByInput
  editedPosts: PostCreateNestedManyWithoutEditingByInput
  email: String!
  fullName: String
  gender: Gender
  isAdmin: Boolean!
  jobTitle: String
  originalId: String!
  password: String
  phoneNumber: String
  position: String
  resolvedFeedbacks: FeedbackCreateNestedManyWithoutResolvedByInput
  status: ActiveStatus
  updateAwards: AwardCreateNestedManyWithoutUpdatedByInput
  updateDepartments: DepartmentCreateNestedManyWithoutUpdatedByInput
  updateFeedbacks: FeedbackCreateNestedManyWithoutUpdatedByInput
  updateIdeas: IdeaCreateNestedManyWithoutUpdatedByInput
  updateIndustries: IndustryCreateNestedManyWithoutUpdatedByInput
  updatePostIdeas: PostIdeaCreateNestedManyWithoutUpdatedByInput
  updatePosts: PostCreateNestedManyWithoutUpdatedByInput
  updateRoles: RoleCreateNestedManyWithoutUpdatedByInput
  updateTags: TagCreateNestedManyWithoutUpdatedByInput
  updateTopics: TopicCreateNestedManyWithoutUpdatedByInput
  updateUserVotes: UserVoteCreateNestedManyWithoutUpdatedByInput
  updatedUsers: UserCreateNestedManyWithoutUpdatedByInput
}

input UserCreateWithoutDepartmentInput {
  approvedIdeas: IdeaCreateNestedManyWithoutApprovedByInput
  approvedPosts: PostCreateNestedManyWithoutApprovedByInput
  avartarUrl: String
  backgroundUrl: String
  code: String
  createAwards: AwardCreateNestedManyWithoutCreatedByInput
  createDepartments: DepartmentCreateNestedManyWithoutCreatedByInput
  createFeedbacks: FeedbackCreateNestedManyWithoutCreatedByInput
  createIdeas: IdeaCreateNestedManyWithoutCreatedByInput
  createIndustries: IndustryCreateNestedManyWithoutCreatedByInput
  createPostIdeas: PostIdeaCreateNestedManyWithoutCreatedByInput
  createPosts: PostCreateNestedManyWithoutCreatedByInput
  createRoles: RoleCreateNestedManyWithoutCreatedByInput
  createTags: TagCreateNestedManyWithoutCreatedByInput
  createTopics: TopicCreateNestedManyWithoutCreatedByInput
  createUserVotes: UserVoteCreateNestedManyWithoutCreatedByInput
  createdPostIdeas: PostIdeaCreateNestedManyWithoutUserInput
  createdUserAwards: UserAwardCreateNestedManyWithoutUserInput
  createdUserGroups: UserGroupCreateNestedManyWithoutUserInput
  createdUserIndustries: UserIndustryCreateNestedManyWithoutUserInput
  createdUserVotes: UserVoteCreateNestedManyWithoutUserInput
  createdUsers: UserCreateNestedManyWithoutCreatedByInput
  dateOfBirth: DateTime
  editedFeedbacks: FeedbackCreateNestedManyWithoutEditingByInput
  editedIdeas: IdeaCreateNestedManyWithoutEditingByInput
  editedPosts: PostCreateNestedManyWithoutEditingByInput
  email: String!
  fullName: String
  gender: Gender
  isAdmin: Boolean!
  jobTitle: String
  originalId: String!
  password: String
  phoneNumber: String
  position: String
  resolvedFeedbacks: FeedbackCreateNestedManyWithoutResolvedByInput
  status: ActiveStatus
  updateAwards: AwardCreateNestedManyWithoutUpdatedByInput
  updateDepartments: DepartmentCreateNestedManyWithoutUpdatedByInput
  updateFeedbacks: FeedbackCreateNestedManyWithoutUpdatedByInput
  updateIdeas: IdeaCreateNestedManyWithoutUpdatedByInput
  updateIndustries: IndustryCreateNestedManyWithoutUpdatedByInput
  updatePostIdeas: PostIdeaCreateNestedManyWithoutUpdatedByInput
  updatePosts: PostCreateNestedManyWithoutUpdatedByInput
  updateRoles: RoleCreateNestedManyWithoutUpdatedByInput
  updateTags: TagCreateNestedManyWithoutUpdatedByInput
  updateTopics: TopicCreateNestedManyWithoutUpdatedByInput
  updateUserVotes: UserVoteCreateNestedManyWithoutUpdatedByInput
  updatedUsers: UserCreateNestedManyWithoutUpdatedByInput
}

input UserCreateWithoutEditedFeedbacksInput {
  approvedIdeas: IdeaCreateNestedManyWithoutApprovedByInput
  approvedPosts: PostCreateNestedManyWithoutApprovedByInput
  avartarUrl: String
  backgroundUrl: String
  code: String
  createAwards: AwardCreateNestedManyWithoutCreatedByInput
  createDepartments: DepartmentCreateNestedManyWithoutCreatedByInput
  createFeedbacks: FeedbackCreateNestedManyWithoutCreatedByInput
  createIdeas: IdeaCreateNestedManyWithoutCreatedByInput
  createIndustries: IndustryCreateNestedManyWithoutCreatedByInput
  createPostIdeas: PostIdeaCreateNestedManyWithoutCreatedByInput
  createPosts: PostCreateNestedManyWithoutCreatedByInput
  createRoles: RoleCreateNestedManyWithoutCreatedByInput
  createTags: TagCreateNestedManyWithoutCreatedByInput
  createTopics: TopicCreateNestedManyWithoutCreatedByInput
  createUserVotes: UserVoteCreateNestedManyWithoutCreatedByInput
  createdPostIdeas: PostIdeaCreateNestedManyWithoutUserInput
  createdUserAwards: UserAwardCreateNestedManyWithoutUserInput
  createdUserGroups: UserGroupCreateNestedManyWithoutUserInput
  createdUserIndustries: UserIndustryCreateNestedManyWithoutUserInput
  createdUserVotes: UserVoteCreateNestedManyWithoutUserInput
  createdUsers: UserCreateNestedManyWithoutCreatedByInput
  dateOfBirth: DateTime
  department: DepartmentCreateNestedOneWithoutUsersInput
  editedIdeas: IdeaCreateNestedManyWithoutEditingByInput
  editedPosts: PostCreateNestedManyWithoutEditingByInput
  email: String!
  fullName: String
  gender: Gender
  isAdmin: Boolean!
  jobTitle: String
  originalId: String!
  password: String
  phoneNumber: String
  position: String
  resolvedFeedbacks: FeedbackCreateNestedManyWithoutResolvedByInput
  status: ActiveStatus
  updateAwards: AwardCreateNestedManyWithoutUpdatedByInput
  updateDepartments: DepartmentCreateNestedManyWithoutUpdatedByInput
  updateFeedbacks: FeedbackCreateNestedManyWithoutUpdatedByInput
  updateIdeas: IdeaCreateNestedManyWithoutUpdatedByInput
  updateIndustries: IndustryCreateNestedManyWithoutUpdatedByInput
  updatePostIdeas: PostIdeaCreateNestedManyWithoutUpdatedByInput
  updatePosts: PostCreateNestedManyWithoutUpdatedByInput
  updateRoles: RoleCreateNestedManyWithoutUpdatedByInput
  updateTags: TagCreateNestedManyWithoutUpdatedByInput
  updateTopics: TopicCreateNestedManyWithoutUpdatedByInput
  updateUserVotes: UserVoteCreateNestedManyWithoutUpdatedByInput
  updatedUsers: UserCreateNestedManyWithoutUpdatedByInput
}

input UserCreateWithoutEditedIdeasInput {
  approvedIdeas: IdeaCreateNestedManyWithoutApprovedByInput
  approvedPosts: PostCreateNestedManyWithoutApprovedByInput
  avartarUrl: String
  backgroundUrl: String
  code: String
  createAwards: AwardCreateNestedManyWithoutCreatedByInput
  createDepartments: DepartmentCreateNestedManyWithoutCreatedByInput
  createFeedbacks: FeedbackCreateNestedManyWithoutCreatedByInput
  createIdeas: IdeaCreateNestedManyWithoutCreatedByInput
  createIndustries: IndustryCreateNestedManyWithoutCreatedByInput
  createPostIdeas: PostIdeaCreateNestedManyWithoutCreatedByInput
  createPosts: PostCreateNestedManyWithoutCreatedByInput
  createRoles: RoleCreateNestedManyWithoutCreatedByInput
  createTags: TagCreateNestedManyWithoutCreatedByInput
  createTopics: TopicCreateNestedManyWithoutCreatedByInput
  createUserVotes: UserVoteCreateNestedManyWithoutCreatedByInput
  createdPostIdeas: PostIdeaCreateNestedManyWithoutUserInput
  createdUserAwards: UserAwardCreateNestedManyWithoutUserInput
  createdUserGroups: UserGroupCreateNestedManyWithoutUserInput
  createdUserIndustries: UserIndustryCreateNestedManyWithoutUserInput
  createdUserVotes: UserVoteCreateNestedManyWithoutUserInput
  createdUsers: UserCreateNestedManyWithoutCreatedByInput
  dateOfBirth: DateTime
  department: DepartmentCreateNestedOneWithoutUsersInput
  editedFeedbacks: FeedbackCreateNestedManyWithoutEditingByInput
  editedPosts: PostCreateNestedManyWithoutEditingByInput
  email: String!
  fullName: String
  gender: Gender
  isAdmin: Boolean!
  jobTitle: String
  originalId: String!
  password: String
  phoneNumber: String
  position: String
  resolvedFeedbacks: FeedbackCreateNestedManyWithoutResolvedByInput
  status: ActiveStatus
  updateAwards: AwardCreateNestedManyWithoutUpdatedByInput
  updateDepartments: DepartmentCreateNestedManyWithoutUpdatedByInput
  updateFeedbacks: FeedbackCreateNestedManyWithoutUpdatedByInput
  updateIdeas: IdeaCreateNestedManyWithoutUpdatedByInput
  updateIndustries: IndustryCreateNestedManyWithoutUpdatedByInput
  updatePostIdeas: PostIdeaCreateNestedManyWithoutUpdatedByInput
  updatePosts: PostCreateNestedManyWithoutUpdatedByInput
  updateRoles: RoleCreateNestedManyWithoutUpdatedByInput
  updateTags: TagCreateNestedManyWithoutUpdatedByInput
  updateTopics: TopicCreateNestedManyWithoutUpdatedByInput
  updateUserVotes: UserVoteCreateNestedManyWithoutUpdatedByInput
  updatedUsers: UserCreateNestedManyWithoutUpdatedByInput
}

input UserCreateWithoutEditedPostsInput {
  approvedIdeas: IdeaCreateNestedManyWithoutApprovedByInput
  approvedPosts: PostCreateNestedManyWithoutApprovedByInput
  avartarUrl: String
  backgroundUrl: String
  code: String
  createAwards: AwardCreateNestedManyWithoutCreatedByInput
  createDepartments: DepartmentCreateNestedManyWithoutCreatedByInput
  createFeedbacks: FeedbackCreateNestedManyWithoutCreatedByInput
  createIdeas: IdeaCreateNestedManyWithoutCreatedByInput
  createIndustries: IndustryCreateNestedManyWithoutCreatedByInput
  createPostIdeas: PostIdeaCreateNestedManyWithoutCreatedByInput
  createPosts: PostCreateNestedManyWithoutCreatedByInput
  createRoles: RoleCreateNestedManyWithoutCreatedByInput
  createTags: TagCreateNestedManyWithoutCreatedByInput
  createTopics: TopicCreateNestedManyWithoutCreatedByInput
  createUserVotes: UserVoteCreateNestedManyWithoutCreatedByInput
  createdPostIdeas: PostIdeaCreateNestedManyWithoutUserInput
  createdUserAwards: UserAwardCreateNestedManyWithoutUserInput
  createdUserGroups: UserGroupCreateNestedManyWithoutUserInput
  createdUserIndustries: UserIndustryCreateNestedManyWithoutUserInput
  createdUserVotes: UserVoteCreateNestedManyWithoutUserInput
  createdUsers: UserCreateNestedManyWithoutCreatedByInput
  dateOfBirth: DateTime
  department: DepartmentCreateNestedOneWithoutUsersInput
  editedFeedbacks: FeedbackCreateNestedManyWithoutEditingByInput
  editedIdeas: IdeaCreateNestedManyWithoutEditingByInput
  email: String!
  fullName: String
  gender: Gender
  isAdmin: Boolean!
  jobTitle: String
  originalId: String!
  password: String
  phoneNumber: String
  position: String
  resolvedFeedbacks: FeedbackCreateNestedManyWithoutResolvedByInput
  status: ActiveStatus
  updateAwards: AwardCreateNestedManyWithoutUpdatedByInput
  updateDepartments: DepartmentCreateNestedManyWithoutUpdatedByInput
  updateFeedbacks: FeedbackCreateNestedManyWithoutUpdatedByInput
  updateIdeas: IdeaCreateNestedManyWithoutUpdatedByInput
  updateIndustries: IndustryCreateNestedManyWithoutUpdatedByInput
  updatePostIdeas: PostIdeaCreateNestedManyWithoutUpdatedByInput
  updatePosts: PostCreateNestedManyWithoutUpdatedByInput
  updateRoles: RoleCreateNestedManyWithoutUpdatedByInput
  updateTags: TagCreateNestedManyWithoutUpdatedByInput
  updateTopics: TopicCreateNestedManyWithoutUpdatedByInput
  updateUserVotes: UserVoteCreateNestedManyWithoutUpdatedByInput
  updatedUsers: UserCreateNestedManyWithoutUpdatedByInput
}

input UserCreateWithoutResolvedFeedbacksInput {
  approvedIdeas: IdeaCreateNestedManyWithoutApprovedByInput
  approvedPosts: PostCreateNestedManyWithoutApprovedByInput
  avartarUrl: String
  backgroundUrl: String
  code: String
  createAwards: AwardCreateNestedManyWithoutCreatedByInput
  createDepartments: DepartmentCreateNestedManyWithoutCreatedByInput
  createFeedbacks: FeedbackCreateNestedManyWithoutCreatedByInput
  createIdeas: IdeaCreateNestedManyWithoutCreatedByInput
  createIndustries: IndustryCreateNestedManyWithoutCreatedByInput
  createPostIdeas: PostIdeaCreateNestedManyWithoutCreatedByInput
  createPosts: PostCreateNestedManyWithoutCreatedByInput
  createRoles: RoleCreateNestedManyWithoutCreatedByInput
  createTags: TagCreateNestedManyWithoutCreatedByInput
  createTopics: TopicCreateNestedManyWithoutCreatedByInput
  createUserVotes: UserVoteCreateNestedManyWithoutCreatedByInput
  createdPostIdeas: PostIdeaCreateNestedManyWithoutUserInput
  createdUserAwards: UserAwardCreateNestedManyWithoutUserInput
  createdUserGroups: UserGroupCreateNestedManyWithoutUserInput
  createdUserIndustries: UserIndustryCreateNestedManyWithoutUserInput
  createdUserVotes: UserVoteCreateNestedManyWithoutUserInput
  createdUsers: UserCreateNestedManyWithoutCreatedByInput
  dateOfBirth: DateTime
  department: DepartmentCreateNestedOneWithoutUsersInput
  editedFeedbacks: FeedbackCreateNestedManyWithoutEditingByInput
  editedIdeas: IdeaCreateNestedManyWithoutEditingByInput
  editedPosts: PostCreateNestedManyWithoutEditingByInput
  email: String!
  fullName: String
  gender: Gender
  isAdmin: Boolean!
  jobTitle: String
  originalId: String!
  password: String
  phoneNumber: String
  position: String
  status: ActiveStatus
  updateAwards: AwardCreateNestedManyWithoutUpdatedByInput
  updateDepartments: DepartmentCreateNestedManyWithoutUpdatedByInput
  updateFeedbacks: FeedbackCreateNestedManyWithoutUpdatedByInput
  updateIdeas: IdeaCreateNestedManyWithoutUpdatedByInput
  updateIndustries: IndustryCreateNestedManyWithoutUpdatedByInput
  updatePostIdeas: PostIdeaCreateNestedManyWithoutUpdatedByInput
  updatePosts: PostCreateNestedManyWithoutUpdatedByInput
  updateRoles: RoleCreateNestedManyWithoutUpdatedByInput
  updateTags: TagCreateNestedManyWithoutUpdatedByInput
  updateTopics: TopicCreateNestedManyWithoutUpdatedByInput
  updateUserVotes: UserVoteCreateNestedManyWithoutUpdatedByInput
  updatedUsers: UserCreateNestedManyWithoutUpdatedByInput
}

input UserCreateWithoutUpdatedByInput {
  approvedIdeas: IdeaCreateNestedManyWithoutApprovedByInput
  approvedPosts: PostCreateNestedManyWithoutApprovedByInput
  avartarUrl: String
  backgroundUrl: String
  code: String
  createAwards: AwardCreateNestedManyWithoutCreatedByInput
  createDepartments: DepartmentCreateNestedManyWithoutCreatedByInput
  createFeedbacks: FeedbackCreateNestedManyWithoutCreatedByInput
  createIdeas: IdeaCreateNestedManyWithoutCreatedByInput
  createIndustries: IndustryCreateNestedManyWithoutCreatedByInput
  createPostIdeas: PostIdeaCreateNestedManyWithoutCreatedByInput
  createPosts: PostCreateNestedManyWithoutCreatedByInput
  createRoles: RoleCreateNestedManyWithoutCreatedByInput
  createTags: TagCreateNestedManyWithoutCreatedByInput
  createTopics: TopicCreateNestedManyWithoutCreatedByInput
  createUserVotes: UserVoteCreateNestedManyWithoutCreatedByInput
  createdPostIdeas: PostIdeaCreateNestedManyWithoutUserInput
  createdUserAwards: UserAwardCreateNestedManyWithoutUserInput
  createdUserGroups: UserGroupCreateNestedManyWithoutUserInput
  createdUserIndustries: UserIndustryCreateNestedManyWithoutUserInput
  createdUserVotes: UserVoteCreateNestedManyWithoutUserInput
  createdUsers: UserCreateNestedManyWithoutCreatedByInput
  dateOfBirth: DateTime
  department: DepartmentCreateNestedOneWithoutUsersInput
  editedFeedbacks: FeedbackCreateNestedManyWithoutEditingByInput
  editedIdeas: IdeaCreateNestedManyWithoutEditingByInput
  editedPosts: PostCreateNestedManyWithoutEditingByInput
  email: String!
  fullName: String
  gender: Gender
  isAdmin: Boolean!
  jobTitle: String
  originalId: String!
  phoneNumber: String
  position: String
  resolvedFeedbacks: FeedbackCreateNestedManyWithoutResolvedByInput
  status: ActiveStatus
  updateAwards: AwardCreateNestedManyWithoutUpdatedByInput
  updateDepartments: DepartmentCreateNestedManyWithoutUpdatedByInput
  updateFeedbacks: FeedbackCreateNestedManyWithoutUpdatedByInput
  updateIdeas: IdeaCreateNestedManyWithoutUpdatedByInput
  updateIndustries: IndustryCreateNestedManyWithoutUpdatedByInput
  updatePostIdeas: PostIdeaCreateNestedManyWithoutUpdatedByInput
  updatePosts: PostCreateNestedManyWithoutUpdatedByInput
  updateRoles: RoleCreateNestedManyWithoutUpdatedByInput
  updateTags: TagCreateNestedManyWithoutUpdatedByInput
  updateTopics: TopicCreateNestedManyWithoutUpdatedByInput
  updateUserVotes: UserVoteCreateNestedManyWithoutUpdatedByInput
  updatedUsers: UserCreateNestedManyWithoutUpdatedByInput
}

type UserGroup {
  group: Group!
  groupId: String!
  id: ID!
  joinedAt: DateTime!
  status: ActiveStatus!
  user: User!
  userId: String!
}

input UserGroupCreateManyUserInput {
  groupId: String!
  joinedAt: DateTime!
  status: ActiveStatus
}

input UserGroupCreateManyUserInputEnvelope {
  data: [UserGroupCreateManyUserInput!]!
  skipDuplicates: Boolean
}

input UserGroupCreateNestedManyWithoutUserInput {
  connect: [UserGroupWhereUniqueInput!]
}

input UserGroupCreateOrConnectWithoutUserInput {
  create: UserGroupCreateWithoutUserInput!
  where: UserGroupWhereUniqueInput!
}

input UserGroupCreateWithoutUserInput {
  group: GroupCreateNestedOneWithoutCreatedUserGroupsInput!
  joinedAt: DateTime!
  status: ActiveStatus
}

input UserGroupListRelationFilter {
  every: UserGroupWhereInput
  none: UserGroupWhereInput
  some: UserGroupWhereInput
}

input UserGroupOrderByRelationAggregateInput {
  _count: SortOrder
}

input UserGroupScalarWhereInput {
  AND: [UserGroupScalarWhereInput!]
  NOT: [UserGroupScalarWhereInput!]
  OR: [UserGroupScalarWhereInput!]
  groupId: StringFilter
  id: StringFilter
  joinedAt: DateTimeFilter
  status: EnumActiveStatusFilter
  userId: StringFilter
}

input UserGroupUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  joinedAt: DateTimeFieldUpdateOperationsInput
  status: EnumActiveStatusFieldUpdateOperationsInput
}

input UserGroupUpdateManyWithWhereWithoutUserInput {
  data: UserGroupUpdateManyMutationInput!
  where: UserGroupScalarWhereInput!
}

input UserGroupUpdateManyWithoutUserNestedInput {
  connect: [UserGroupWhereUniqueInput!]
  connectOrCreate: [UserGroupCreateOrConnectWithoutUserInput!]
  create: [UserGroupCreateWithoutUserInput!]
  createMany: UserGroupCreateManyUserInputEnvelope
  delete: [UserGroupWhereUniqueInput!]
  deleteMany: [UserGroupScalarWhereInput!]
  disconnect: [UserGroupWhereUniqueInput!]
  set: [UserGroupWhereUniqueInput!]
  update: [UserGroupUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [UserGroupUpdateManyWithWhereWithoutUserInput!]
  upsert: [UserGroupUpsertWithWhereUniqueWithoutUserInput!]
}

input UserGroupUpdateWithWhereUniqueWithoutUserInput {
  data: UserGroupUpdateWithoutUserInput!
  where: UserGroupWhereUniqueInput!
}

input UserGroupUpdateWithoutUserInput {
  group: GroupUpdateOneRequiredWithoutCreatedUserGroupsNestedInput
  id: StringFieldUpdateOperationsInput
  joinedAt: DateTimeFieldUpdateOperationsInput
  status: EnumActiveStatusFieldUpdateOperationsInput
}

input UserGroupUpsertWithWhereUniqueWithoutUserInput {
  create: UserGroupCreateWithoutUserInput!
  update: UserGroupUpdateWithoutUserInput!
  where: UserGroupWhereUniqueInput!
}

input UserGroupWhereInput {
  AND: [UserGroupWhereInput!]
  NOT: [UserGroupWhereInput!]
  OR: [UserGroupWhereInput!]
  group: GroupWhereInput
  groupId: StringFilter
  id: StringFilter
  joinedAt: DateTimeFilter
  status: EnumActiveStatusFilter
  user: UserWhereInput
  userId: StringFilter
}

input UserGroupWhereUniqueInput {
  id: String
}

type UserIndustry {
  description: String
  id: ID!
  industry: Industry!
  industryId: String!
  user: User!
  userId: String!
}

input UserIndustryCreateManyIndustryInput {
  description: String
  userId: String!
}

input UserIndustryCreateManyIndustryInputEnvelope {
  data: [UserIndustryCreateManyIndustryInput!]!
  skipDuplicates: Boolean
}

input UserIndustryCreateManyUserInput {
  description: String
  industryId: String!
}

input UserIndustryCreateManyUserInputEnvelope {
  data: [UserIndustryCreateManyUserInput!]!
  skipDuplicates: Boolean
}

input UserIndustryCreateNestedManyWithoutIndustryInput {
  connect: [UserIndustryWhereUniqueInput!]
}

input UserIndustryCreateNestedManyWithoutUserInput {
  connect: [UserIndustryWhereUniqueInput!]
}

input UserIndustryCreateOrConnectWithoutIndustryInput {
  create: UserIndustryCreateWithoutIndustryInput!
  where: UserIndustryWhereUniqueInput!
}

input UserIndustryCreateOrConnectWithoutUserInput {
  create: UserIndustryCreateWithoutUserInput!
  where: UserIndustryWhereUniqueInput!
}

input UserIndustryCreateWithoutIndustryInput {
  description: String
  user: UserCreateNestedOneWithoutCreatedUserIndustriesInput!
}

input UserIndustryCreateWithoutUserInput {
  description: String
  industry: IndustryCreateNestedOneWithoutUserIndustriesInput!
}

input UserIndustryListRelationFilter {
  every: UserIndustryWhereInput
  none: UserIndustryWhereInput
  some: UserIndustryWhereInput
}

input UserIndustryOrderByRelationAggregateInput {
  _count: SortOrder
}

input UserIndustryScalarWhereInput {
  AND: [UserIndustryScalarWhereInput!]
  NOT: [UserIndustryScalarWhereInput!]
  OR: [UserIndustryScalarWhereInput!]
  description: StringNullableFilter
  id: StringFilter
  industryId: StringFilter
  userId: StringFilter
}

input UserIndustryUpdateManyMutationInput {
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
}

input UserIndustryUpdateManyWithWhereWithoutIndustryInput {
  data: UserIndustryUpdateManyMutationInput!
  where: UserIndustryScalarWhereInput!
}

input UserIndustryUpdateManyWithWhereWithoutUserInput {
  data: UserIndustryUpdateManyMutationInput!
  where: UserIndustryScalarWhereInput!
}

input UserIndustryUpdateManyWithoutIndustryNestedInput {
  connect: [UserIndustryWhereUniqueInput!]
  connectOrCreate: [UserIndustryCreateOrConnectWithoutIndustryInput!]
  create: [UserIndustryCreateWithoutIndustryInput!]
  createMany: UserIndustryCreateManyIndustryInputEnvelope
  delete: [UserIndustryWhereUniqueInput!]
  deleteMany: [UserIndustryScalarWhereInput!]
  disconnect: [UserIndustryWhereUniqueInput!]
  set: [UserIndustryWhereUniqueInput!]
  update: [UserIndustryUpdateWithWhereUniqueWithoutIndustryInput!]
  updateMany: [UserIndustryUpdateManyWithWhereWithoutIndustryInput!]
  upsert: [UserIndustryUpsertWithWhereUniqueWithoutIndustryInput!]
}

input UserIndustryUpdateManyWithoutUserNestedInput {
  connect: [UserIndustryWhereUniqueInput!]
  connectOrCreate: [UserIndustryCreateOrConnectWithoutUserInput!]
  create: [UserIndustryCreateWithoutUserInput!]
  createMany: UserIndustryCreateManyUserInputEnvelope
  delete: [UserIndustryWhereUniqueInput!]
  deleteMany: [UserIndustryScalarWhereInput!]
  disconnect: [UserIndustryWhereUniqueInput!]
  set: [UserIndustryWhereUniqueInput!]
  update: [UserIndustryUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [UserIndustryUpdateManyWithWhereWithoutUserInput!]
  upsert: [UserIndustryUpsertWithWhereUniqueWithoutUserInput!]
}

input UserIndustryUpdateWithWhereUniqueWithoutIndustryInput {
  data: UserIndustryUpdateWithoutIndustryInput!
  where: UserIndustryWhereUniqueInput!
}

input UserIndustryUpdateWithWhereUniqueWithoutUserInput {
  data: UserIndustryUpdateWithoutUserInput!
  where: UserIndustryWhereUniqueInput!
}

input UserIndustryUpdateWithoutIndustryInput {
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutCreatedUserIndustriesNestedInput
}

input UserIndustryUpdateWithoutUserInput {
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  industry: IndustryUpdateOneRequiredWithoutUserIndustriesNestedInput
}

input UserIndustryUpsertWithWhereUniqueWithoutIndustryInput {
  create: UserIndustryCreateWithoutIndustryInput!
  update: UserIndustryUpdateWithoutIndustryInput!
  where: UserIndustryWhereUniqueInput!
}

input UserIndustryUpsertWithWhereUniqueWithoutUserInput {
  create: UserIndustryCreateWithoutUserInput!
  update: UserIndustryUpdateWithoutUserInput!
  where: UserIndustryWhereUniqueInput!
}

input UserIndustryWhereInput {
  AND: [UserIndustryWhereInput!]
  NOT: [UserIndustryWhereInput!]
  OR: [UserIndustryWhereInput!]
  description: StringNullableFilter
  id: StringFilter
  industry: IndustryWhereInput
  industryId: StringFilter
  user: UserWhereInput
  userId: StringFilter
}

input UserIndustryWhereUniqueInput {
  id: String
}

input UserListRelationFilter {
  every: UserWhereInput
  none: UserWhereInput
  some: UserWhereInput
}

input UserOrderByRelationAggregateInput {
  _count: SortOrder
}

input UserOrderByWithRelationInput {
  approvedIdeas: IdeaOrderByRelationAggregateInput
  approvedPosts: PostOrderByRelationAggregateInput
  avartarUrl: SortOrder
  backgroundUrl: SortOrder
  code: SortOrder
  createAwards: AwardOrderByRelationAggregateInput
  createDepartments: DepartmentOrderByRelationAggregateInput
  createFeedbacks: FeedbackOrderByRelationAggregateInput
  createIdeas: IdeaOrderByRelationAggregateInput
  createIndustries: IndustryOrderByRelationAggregateInput
  createPostIdeas: PostIdeaOrderByRelationAggregateInput
  createPosts: PostOrderByRelationAggregateInput
  createRoles: RoleOrderByRelationAggregateInput
  createTags: TagOrderByRelationAggregateInput
  createTopics: TopicOrderByRelationAggregateInput
  createUserVotes: UserVoteOrderByRelationAggregateInput
  createdAt: SortOrder
  createdBy: UserOrderByWithRelationInput
  createdById: SortOrder
  createdPostIdeas: PostIdeaOrderByRelationAggregateInput
  createdUserAwards: UserAwardOrderByRelationAggregateInput
  createdUserGroups: UserGroupOrderByRelationAggregateInput
  createdUserIndustries: UserIndustryOrderByRelationAggregateInput
  createdUserVotes: UserVoteOrderByRelationAggregateInput
  createdUsers: UserOrderByRelationAggregateInput
  dateOfBirth: SortOrder
  deletedAt: SortOrder
  department: DepartmentOrderByWithRelationInput
  departmentId: SortOrder
  editedFeedbacks: FeedbackOrderByRelationAggregateInput
  editedIdeas: IdeaOrderByRelationAggregateInput
  editedPosts: PostOrderByRelationAggregateInput
  email: SortOrder
  fullName: SortOrder
  gender: SortOrder
  id: SortOrder
  isAdmin: SortOrder
  jobTitle: SortOrder
  originalId: SortOrder
  password: SortOrder
  phoneNumber: SortOrder
  position: SortOrder
  resolvedFeedbacks: FeedbackOrderByRelationAggregateInput
  status: SortOrder
  updateAwards: AwardOrderByRelationAggregateInput
  updateDepartments: DepartmentOrderByRelationAggregateInput
  updateFeedbacks: FeedbackOrderByRelationAggregateInput
  updateIdeas: IdeaOrderByRelationAggregateInput
  updateIndustries: IndustryOrderByRelationAggregateInput
  updatePostIdeas: PostIdeaOrderByRelationAggregateInput
  updatePosts: PostOrderByRelationAggregateInput
  updateRoles: RoleOrderByRelationAggregateInput
  updateTags: TagOrderByRelationAggregateInput
  updateTopics: TopicOrderByRelationAggregateInput
  updateUserVotes: UserVoteOrderByRelationAggregateInput
  updatedAt: SortOrder
  updatedBy: UserOrderByWithRelationInput
  updatedById: SortOrder
  updatedUsers: UserOrderByRelationAggregateInput
}

enum UserScalarFieldEnum {
  avartarUrl
  backgroundUrl
  code
  createdAt
  createdById
  dateOfBirth
  deletedAt
  departmentId
  email
  fullName
  gender
  id
  isAdmin
  jobTitle
  originalId
  password
  phoneNumber
  position
  status
  updatedAt
  updatedById
}

input UserScalarWhereInput {
  AND: [UserScalarWhereInput!]
  NOT: [UserScalarWhereInput!]
  OR: [UserScalarWhereInput!]
  avartarUrl: StringNullableFilter
  backgroundUrl: StringNullableFilter
  code: StringNullableFilter
  createdAt: DateTimeFilter
  createdById: StringNullableFilter
  dateOfBirth: DateTimeNullableFilter
  deletedAt: [DateTimeNullableFilter!] = null
  departmentId: StringNullableFilter
  email: StringFilter
  fullName: StringNullableFilter
  gender: EnumGenderNullableFilter
  id: StringFilter
  isAdmin: BoolFilter
  jobTitle: StringNullableFilter
  originalId: StringFilter
  password: StringNullableFilter
  phoneNumber: StringNullableFilter
  position: StringNullableFilter
  status: EnumActiveStatusFilter
  updatedAt: DateTimeFilter
  updatedById: StringNullableFilter
}

input UserUpdateManyMutationInput {
  avartarUrl: NullableStringFieldUpdateOperationsInput
  backgroundUrl: NullableStringFieldUpdateOperationsInput
  code: NullableStringFieldUpdateOperationsInput
  dateOfBirth: NullableDateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  fullName: NullableStringFieldUpdateOperationsInput
  gender: NullableEnumGenderFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isAdmin: BoolFieldUpdateOperationsInput
  jobTitle: NullableStringFieldUpdateOperationsInput
  originalId: StringFieldUpdateOperationsInput
  phoneNumber: NullableStringFieldUpdateOperationsInput
  position: NullableStringFieldUpdateOperationsInput
  status: EnumActiveStatusFieldUpdateOperationsInput
}

input UserUpdateManyWithWhereWithoutCreatedByInput {
  data: UserUpdateManyMutationInput!
  where: UserScalarWhereInput!
}

input UserUpdateManyWithWhereWithoutDepartmentInput {
  data: UserUpdateManyMutationInput!
  where: UserScalarWhereInput!
}

input UserUpdateManyWithWhereWithoutUpdatedByInput {
  data: UserUpdateManyMutationInput!
  where: UserScalarWhereInput!
}

input UserUpdateManyWithoutCreatedByNestedInput {
  connect: [UserWhereUniqueInput!]
  connectOrCreate: [UserCreateOrConnectWithoutCreatedByInput!]
  create: [UserCreateWithoutCreatedByInput!]
  createMany: UserCreateManyCreatedByInputEnvelope
  delete: [UserWhereUniqueInput!]
  deleteMany: [UserScalarWhereInput!]
  disconnect: [UserWhereUniqueInput!]
  set: [UserWhereUniqueInput!]
  update: [UserUpdateWithWhereUniqueWithoutCreatedByInput!]
  updateMany: [UserUpdateManyWithWhereWithoutCreatedByInput!]
  upsert: [UserUpsertWithWhereUniqueWithoutCreatedByInput!]
}

input UserUpdateManyWithoutDepartmentNestedInput {
  connect: [UserWhereUniqueInput!]
  connectOrCreate: [UserCreateOrConnectWithoutDepartmentInput!]
  create: [UserCreateWithoutDepartmentInput!]
  createMany: UserCreateManyDepartmentInputEnvelope
  delete: [UserWhereUniqueInput!]
  deleteMany: [UserScalarWhereInput!]
  disconnect: [UserWhereUniqueInput!]
  set: [UserWhereUniqueInput!]
  update: [UserUpdateWithWhereUniqueWithoutDepartmentInput!]
  updateMany: [UserUpdateManyWithWhereWithoutDepartmentInput!]
  upsert: [UserUpsertWithWhereUniqueWithoutDepartmentInput!]
}

input UserUpdateManyWithoutUpdatedByNestedInput {
  connect: [UserWhereUniqueInput!]
  connectOrCreate: [UserCreateOrConnectWithoutUpdatedByInput!]
  create: [UserCreateWithoutUpdatedByInput!]
  createMany: UserCreateManyUpdatedByInputEnvelope
  delete: [UserWhereUniqueInput!]
  deleteMany: [UserScalarWhereInput!]
  disconnect: [UserWhereUniqueInput!]
  set: [UserWhereUniqueInput!]
  update: [UserUpdateWithWhereUniqueWithoutUpdatedByInput!]
  updateMany: [UserUpdateManyWithWhereWithoutUpdatedByInput!]
  upsert: [UserUpsertWithWhereUniqueWithoutUpdatedByInput!]
}

input UserUpdateOneRequiredWithoutApprovedIdeasNestedInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutApprovedIdeasInput
  create: UserCreateWithoutApprovedIdeasInput
  update: UserUpdateWithoutApprovedIdeasInput
  upsert: UserUpsertWithoutApprovedIdeasInput
}

input UserUpdateOneRequiredWithoutCreatedPostIdeasNestedInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutCreatedPostIdeasInput
  create: UserCreateWithoutCreatedPostIdeasInput
  update: UserUpdateWithoutCreatedPostIdeasInput
  upsert: UserUpsertWithoutCreatedPostIdeasInput
}

input UserUpdateOneRequiredWithoutCreatedUserAwardsNestedInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutCreatedUserAwardsInput
  create: UserCreateWithoutCreatedUserAwardsInput
  update: UserUpdateWithoutCreatedUserAwardsInput
  upsert: UserUpsertWithoutCreatedUserAwardsInput
}

input UserUpdateOneRequiredWithoutCreatedUserIndustriesNestedInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutCreatedUserIndustriesInput
  create: UserCreateWithoutCreatedUserIndustriesInput
  update: UserUpdateWithoutCreatedUserIndustriesInput
  upsert: UserUpsertWithoutCreatedUserIndustriesInput
}

input UserUpdateOneRequiredWithoutCreatedUserVotesNestedInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutCreatedUserVotesInput
  create: UserCreateWithoutCreatedUserVotesInput
  update: UserUpdateWithoutCreatedUserVotesInput
  upsert: UserUpsertWithoutCreatedUserVotesInput
}

input UserUpdateOneRequiredWithoutEditedFeedbacksNestedInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutEditedFeedbacksInput
  create: UserCreateWithoutEditedFeedbacksInput
  update: UserUpdateWithoutEditedFeedbacksInput
  upsert: UserUpsertWithoutEditedFeedbacksInput
}

input UserUpdateOneRequiredWithoutEditedIdeasNestedInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutEditedIdeasInput
  create: UserCreateWithoutEditedIdeasInput
  update: UserUpdateWithoutEditedIdeasInput
  upsert: UserUpsertWithoutEditedIdeasInput
}

input UserUpdateOneRequiredWithoutResolvedFeedbacksNestedInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutResolvedFeedbacksInput
  create: UserCreateWithoutResolvedFeedbacksInput
  update: UserUpdateWithoutResolvedFeedbacksInput
  upsert: UserUpsertWithoutResolvedFeedbacksInput
}

input UserUpdateOneWithoutApprovedPostsNestedInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutApprovedPostsInput
  create: UserCreateWithoutApprovedPostsInput
  delete: Boolean
  disconnect: Boolean
  update: UserUpdateWithoutApprovedPostsInput
  upsert: UserUpsertWithoutApprovedPostsInput
}

input UserUpdateOneWithoutEditedPostsNestedInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutEditedPostsInput
  create: UserCreateWithoutEditedPostsInput
  delete: Boolean
  disconnect: Boolean
  update: UserUpdateWithoutEditedPostsInput
  upsert: UserUpsertWithoutEditedPostsInput
}

input UserUpdateWithWhereUniqueWithoutCreatedByInput {
  data: UserUpdateWithoutCreatedByInput!
  where: UserWhereUniqueInput!
}

input UserUpdateWithWhereUniqueWithoutDepartmentInput {
  data: UserUpdateWithoutDepartmentInput!
  where: UserWhereUniqueInput!
}

input UserUpdateWithWhereUniqueWithoutUpdatedByInput {
  data: UserUpdateWithoutUpdatedByInput!
  where: UserWhereUniqueInput!
}

input UserUpdateWithoutApprovedIdeasInput {
  approvedPosts: PostUpdateManyWithoutApprovedByNestedInput
  avartarUrl: NullableStringFieldUpdateOperationsInput
  backgroundUrl: NullableStringFieldUpdateOperationsInput
  code: NullableStringFieldUpdateOperationsInput
  createAwards: AwardUpdateManyWithoutCreatedByNestedInput
  createDepartments: DepartmentUpdateManyWithoutCreatedByNestedInput
  createFeedbacks: FeedbackUpdateManyWithoutCreatedByNestedInput
  createIdeas: IdeaUpdateManyWithoutCreatedByNestedInput
  createIndustries: IndustryUpdateManyWithoutCreatedByNestedInput
  createPostIdeas: PostIdeaUpdateManyWithoutCreatedByNestedInput
  createPosts: PostUpdateManyWithoutCreatedByNestedInput
  createRoles: RoleUpdateManyWithoutCreatedByNestedInput
  createTags: TagUpdateManyWithoutCreatedByNestedInput
  createTopics: TopicUpdateManyWithoutCreatedByNestedInput
  createUserVotes: UserVoteUpdateManyWithoutCreatedByNestedInput
  createdPostIdeas: PostIdeaUpdateManyWithoutUserNestedInput
  createdUserAwards: UserAwardUpdateManyWithoutUserNestedInput
  createdUserGroups: UserGroupUpdateManyWithoutUserNestedInput
  createdUserIndustries: UserIndustryUpdateManyWithoutUserNestedInput
  createdUserVotes: UserVoteUpdateManyWithoutUserNestedInput
  createdUsers: UserUpdateManyWithoutCreatedByNestedInput
  dateOfBirth: NullableDateTimeFieldUpdateOperationsInput
  department: DepartmentUpdateOneWithoutUsersNestedInput
  editedFeedbacks: FeedbackUpdateManyWithoutEditingByNestedInput
  editedIdeas: IdeaUpdateManyWithoutEditingByNestedInput
  editedPosts: PostUpdateManyWithoutEditingByNestedInput
  email: StringFieldUpdateOperationsInput
  fullName: NullableStringFieldUpdateOperationsInput
  gender: NullableEnumGenderFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isAdmin: BoolFieldUpdateOperationsInput
  jobTitle: NullableStringFieldUpdateOperationsInput
  originalId: StringFieldUpdateOperationsInput
  phoneNumber: NullableStringFieldUpdateOperationsInput
  position: NullableStringFieldUpdateOperationsInput
  resolvedFeedbacks: FeedbackUpdateManyWithoutResolvedByNestedInput
  status: EnumActiveStatusFieldUpdateOperationsInput
  updateAwards: AwardUpdateManyWithoutUpdatedByNestedInput
  updateDepartments: DepartmentUpdateManyWithoutUpdatedByNestedInput
  updateFeedbacks: FeedbackUpdateManyWithoutUpdatedByNestedInput
  updateIdeas: IdeaUpdateManyWithoutUpdatedByNestedInput
  updateIndustries: IndustryUpdateManyWithoutUpdatedByNestedInput
  updatePostIdeas: PostIdeaUpdateManyWithoutUpdatedByNestedInput
  updatePosts: PostUpdateManyWithoutUpdatedByNestedInput
  updateRoles: RoleUpdateManyWithoutUpdatedByNestedInput
  updateTags: TagUpdateManyWithoutUpdatedByNestedInput
  updateTopics: TopicUpdateManyWithoutUpdatedByNestedInput
  updateUserVotes: UserVoteUpdateManyWithoutUpdatedByNestedInput
  updatedUsers: UserUpdateManyWithoutUpdatedByNestedInput
}

input UserUpdateWithoutApprovedPostsInput {
  approvedIdeas: IdeaUpdateManyWithoutApprovedByNestedInput
  avartarUrl: NullableStringFieldUpdateOperationsInput
  backgroundUrl: NullableStringFieldUpdateOperationsInput
  code: NullableStringFieldUpdateOperationsInput
  createAwards: AwardUpdateManyWithoutCreatedByNestedInput
  createDepartments: DepartmentUpdateManyWithoutCreatedByNestedInput
  createFeedbacks: FeedbackUpdateManyWithoutCreatedByNestedInput
  createIdeas: IdeaUpdateManyWithoutCreatedByNestedInput
  createIndustries: IndustryUpdateManyWithoutCreatedByNestedInput
  createPostIdeas: PostIdeaUpdateManyWithoutCreatedByNestedInput
  createPosts: PostUpdateManyWithoutCreatedByNestedInput
  createRoles: RoleUpdateManyWithoutCreatedByNestedInput
  createTags: TagUpdateManyWithoutCreatedByNestedInput
  createTopics: TopicUpdateManyWithoutCreatedByNestedInput
  createUserVotes: UserVoteUpdateManyWithoutCreatedByNestedInput
  createdPostIdeas: PostIdeaUpdateManyWithoutUserNestedInput
  createdUserAwards: UserAwardUpdateManyWithoutUserNestedInput
  createdUserGroups: UserGroupUpdateManyWithoutUserNestedInput
  createdUserIndustries: UserIndustryUpdateManyWithoutUserNestedInput
  createdUserVotes: UserVoteUpdateManyWithoutUserNestedInput
  createdUsers: UserUpdateManyWithoutCreatedByNestedInput
  dateOfBirth: NullableDateTimeFieldUpdateOperationsInput
  department: DepartmentUpdateOneWithoutUsersNestedInput
  editedFeedbacks: FeedbackUpdateManyWithoutEditingByNestedInput
  editedIdeas: IdeaUpdateManyWithoutEditingByNestedInput
  editedPosts: PostUpdateManyWithoutEditingByNestedInput
  email: StringFieldUpdateOperationsInput
  fullName: NullableStringFieldUpdateOperationsInput
  gender: NullableEnumGenderFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isAdmin: BoolFieldUpdateOperationsInput
  jobTitle: NullableStringFieldUpdateOperationsInput
  originalId: StringFieldUpdateOperationsInput
  phoneNumber: NullableStringFieldUpdateOperationsInput
  position: NullableStringFieldUpdateOperationsInput
  resolvedFeedbacks: FeedbackUpdateManyWithoutResolvedByNestedInput
  status: EnumActiveStatusFieldUpdateOperationsInput
  updateAwards: AwardUpdateManyWithoutUpdatedByNestedInput
  updateDepartments: DepartmentUpdateManyWithoutUpdatedByNestedInput
  updateFeedbacks: FeedbackUpdateManyWithoutUpdatedByNestedInput
  updateIdeas: IdeaUpdateManyWithoutUpdatedByNestedInput
  updateIndustries: IndustryUpdateManyWithoutUpdatedByNestedInput
  updatePostIdeas: PostIdeaUpdateManyWithoutUpdatedByNestedInput
  updatePosts: PostUpdateManyWithoutUpdatedByNestedInput
  updateRoles: RoleUpdateManyWithoutUpdatedByNestedInput
  updateTags: TagUpdateManyWithoutUpdatedByNestedInput
  updateTopics: TopicUpdateManyWithoutUpdatedByNestedInput
  updateUserVotes: UserVoteUpdateManyWithoutUpdatedByNestedInput
  updatedUsers: UserUpdateManyWithoutUpdatedByNestedInput
}

input UserUpdateWithoutCreatedByInput {
  approvedIdeas: IdeaUpdateManyWithoutApprovedByNestedInput
  approvedPosts: PostUpdateManyWithoutApprovedByNestedInput
  avartarUrl: NullableStringFieldUpdateOperationsInput
  backgroundUrl: NullableStringFieldUpdateOperationsInput
  code: NullableStringFieldUpdateOperationsInput
  createAwards: AwardUpdateManyWithoutCreatedByNestedInput
  createDepartments: DepartmentUpdateManyWithoutCreatedByNestedInput
  createFeedbacks: FeedbackUpdateManyWithoutCreatedByNestedInput
  createIdeas: IdeaUpdateManyWithoutCreatedByNestedInput
  createIndustries: IndustryUpdateManyWithoutCreatedByNestedInput
  createPostIdeas: PostIdeaUpdateManyWithoutCreatedByNestedInput
  createPosts: PostUpdateManyWithoutCreatedByNestedInput
  createRoles: RoleUpdateManyWithoutCreatedByNestedInput
  createTags: TagUpdateManyWithoutCreatedByNestedInput
  createTopics: TopicUpdateManyWithoutCreatedByNestedInput
  createUserVotes: UserVoteUpdateManyWithoutCreatedByNestedInput
  createdPostIdeas: PostIdeaUpdateManyWithoutUserNestedInput
  createdUserAwards: UserAwardUpdateManyWithoutUserNestedInput
  createdUserGroups: UserGroupUpdateManyWithoutUserNestedInput
  createdUserIndustries: UserIndustryUpdateManyWithoutUserNestedInput
  createdUserVotes: UserVoteUpdateManyWithoutUserNestedInput
  createdUsers: UserUpdateManyWithoutCreatedByNestedInput
  dateOfBirth: NullableDateTimeFieldUpdateOperationsInput
  department: DepartmentUpdateOneWithoutUsersNestedInput
  editedFeedbacks: FeedbackUpdateManyWithoutEditingByNestedInput
  editedIdeas: IdeaUpdateManyWithoutEditingByNestedInput
  editedPosts: PostUpdateManyWithoutEditingByNestedInput
  email: StringFieldUpdateOperationsInput
  fullName: NullableStringFieldUpdateOperationsInput
  gender: NullableEnumGenderFieldUpdateOperationsInput
  isAdmin: BoolFieldUpdateOperationsInput
  jobTitle: NullableStringFieldUpdateOperationsInput
  originalId: StringFieldUpdateOperationsInput
  phoneNumber: NullableStringFieldUpdateOperationsInput
  position: NullableStringFieldUpdateOperationsInput
  resolvedFeedbacks: FeedbackUpdateManyWithoutResolvedByNestedInput
  status: EnumActiveStatusFieldUpdateOperationsInput
  updateAwards: AwardUpdateManyWithoutUpdatedByNestedInput
  updateDepartments: DepartmentUpdateManyWithoutUpdatedByNestedInput
  updateFeedbacks: FeedbackUpdateManyWithoutUpdatedByNestedInput
  updateIdeas: IdeaUpdateManyWithoutUpdatedByNestedInput
  updateIndustries: IndustryUpdateManyWithoutUpdatedByNestedInput
  updatePostIdeas: PostIdeaUpdateManyWithoutUpdatedByNestedInput
  updatePosts: PostUpdateManyWithoutUpdatedByNestedInput
  updateRoles: RoleUpdateManyWithoutUpdatedByNestedInput
  updateTags: TagUpdateManyWithoutUpdatedByNestedInput
  updateTopics: TopicUpdateManyWithoutUpdatedByNestedInput
  updateUserVotes: UserVoteUpdateManyWithoutUpdatedByNestedInput
  updatedUsers: UserUpdateManyWithoutUpdatedByNestedInput
}

input UserUpdateWithoutCreatedPostIdeasInput {
  approvedIdeas: IdeaUpdateManyWithoutApprovedByNestedInput
  approvedPosts: PostUpdateManyWithoutApprovedByNestedInput
  avartarUrl: NullableStringFieldUpdateOperationsInput
  backgroundUrl: NullableStringFieldUpdateOperationsInput
  code: NullableStringFieldUpdateOperationsInput
  createAwards: AwardUpdateManyWithoutCreatedByNestedInput
  createDepartments: DepartmentUpdateManyWithoutCreatedByNestedInput
  createFeedbacks: FeedbackUpdateManyWithoutCreatedByNestedInput
  createIdeas: IdeaUpdateManyWithoutCreatedByNestedInput
  createIndustries: IndustryUpdateManyWithoutCreatedByNestedInput
  createPostIdeas: PostIdeaUpdateManyWithoutCreatedByNestedInput
  createPosts: PostUpdateManyWithoutCreatedByNestedInput
  createRoles: RoleUpdateManyWithoutCreatedByNestedInput
  createTags: TagUpdateManyWithoutCreatedByNestedInput
  createTopics: TopicUpdateManyWithoutCreatedByNestedInput
  createUserVotes: UserVoteUpdateManyWithoutCreatedByNestedInput
  createdUserAwards: UserAwardUpdateManyWithoutUserNestedInput
  createdUserGroups: UserGroupUpdateManyWithoutUserNestedInput
  createdUserIndustries: UserIndustryUpdateManyWithoutUserNestedInput
  createdUserVotes: UserVoteUpdateManyWithoutUserNestedInput
  createdUsers: UserUpdateManyWithoutCreatedByNestedInput
  dateOfBirth: NullableDateTimeFieldUpdateOperationsInput
  department: DepartmentUpdateOneWithoutUsersNestedInput
  editedFeedbacks: FeedbackUpdateManyWithoutEditingByNestedInput
  editedIdeas: IdeaUpdateManyWithoutEditingByNestedInput
  editedPosts: PostUpdateManyWithoutEditingByNestedInput
  email: StringFieldUpdateOperationsInput
  fullName: NullableStringFieldUpdateOperationsInput
  gender: NullableEnumGenderFieldUpdateOperationsInput
  isAdmin: BoolFieldUpdateOperationsInput
  jobTitle: NullableStringFieldUpdateOperationsInput
  originalId: StringFieldUpdateOperationsInput
  phoneNumber: NullableStringFieldUpdateOperationsInput
  position: NullableStringFieldUpdateOperationsInput
  resolvedFeedbacks: FeedbackUpdateManyWithoutResolvedByNestedInput
  status: EnumActiveStatusFieldUpdateOperationsInput
  updateAwards: AwardUpdateManyWithoutUpdatedByNestedInput
  updateDepartments: DepartmentUpdateManyWithoutUpdatedByNestedInput
  updateFeedbacks: FeedbackUpdateManyWithoutUpdatedByNestedInput
  updateIdeas: IdeaUpdateManyWithoutUpdatedByNestedInput
  updateIndustries: IndustryUpdateManyWithoutUpdatedByNestedInput
  updatePostIdeas: PostIdeaUpdateManyWithoutUpdatedByNestedInput
  updatePosts: PostUpdateManyWithoutUpdatedByNestedInput
  updateRoles: RoleUpdateManyWithoutUpdatedByNestedInput
  updateTags: TagUpdateManyWithoutUpdatedByNestedInput
  updateTopics: TopicUpdateManyWithoutUpdatedByNestedInput
  updateUserVotes: UserVoteUpdateManyWithoutUpdatedByNestedInput
  updatedUsers: UserUpdateManyWithoutUpdatedByNestedInput
}

input UserUpdateWithoutCreatedUserAwardsInput {
  approvedIdeas: IdeaUpdateManyWithoutApprovedByNestedInput
  approvedPosts: PostUpdateManyWithoutApprovedByNestedInput
  avartarUrl: NullableStringFieldUpdateOperationsInput
  backgroundUrl: NullableStringFieldUpdateOperationsInput
  code: NullableStringFieldUpdateOperationsInput
  createAwards: AwardUpdateManyWithoutCreatedByNestedInput
  createDepartments: DepartmentUpdateManyWithoutCreatedByNestedInput
  createFeedbacks: FeedbackUpdateManyWithoutCreatedByNestedInput
  createIdeas: IdeaUpdateManyWithoutCreatedByNestedInput
  createIndustries: IndustryUpdateManyWithoutCreatedByNestedInput
  createPostIdeas: PostIdeaUpdateManyWithoutCreatedByNestedInput
  createPosts: PostUpdateManyWithoutCreatedByNestedInput
  createRoles: RoleUpdateManyWithoutCreatedByNestedInput
  createTags: TagUpdateManyWithoutCreatedByNestedInput
  createTopics: TopicUpdateManyWithoutCreatedByNestedInput
  createUserVotes: UserVoteUpdateManyWithoutCreatedByNestedInput
  createdPostIdeas: PostIdeaUpdateManyWithoutUserNestedInput
  createdUserGroups: UserGroupUpdateManyWithoutUserNestedInput
  createdUserIndustries: UserIndustryUpdateManyWithoutUserNestedInput
  createdUserVotes: UserVoteUpdateManyWithoutUserNestedInput
  createdUsers: UserUpdateManyWithoutCreatedByNestedInput
  dateOfBirth: NullableDateTimeFieldUpdateOperationsInput
  department: DepartmentUpdateOneWithoutUsersNestedInput
  editedFeedbacks: FeedbackUpdateManyWithoutEditingByNestedInput
  editedIdeas: IdeaUpdateManyWithoutEditingByNestedInput
  editedPosts: PostUpdateManyWithoutEditingByNestedInput
  email: StringFieldUpdateOperationsInput
  fullName: NullableStringFieldUpdateOperationsInput
  gender: NullableEnumGenderFieldUpdateOperationsInput
  isAdmin: BoolFieldUpdateOperationsInput
  jobTitle: NullableStringFieldUpdateOperationsInput
  originalId: StringFieldUpdateOperationsInput
  phoneNumber: NullableStringFieldUpdateOperationsInput
  position: NullableStringFieldUpdateOperationsInput
  resolvedFeedbacks: FeedbackUpdateManyWithoutResolvedByNestedInput
  status: EnumActiveStatusFieldUpdateOperationsInput
  updateAwards: AwardUpdateManyWithoutUpdatedByNestedInput
  updateDepartments: DepartmentUpdateManyWithoutUpdatedByNestedInput
  updateFeedbacks: FeedbackUpdateManyWithoutUpdatedByNestedInput
  updateIdeas: IdeaUpdateManyWithoutUpdatedByNestedInput
  updateIndustries: IndustryUpdateManyWithoutUpdatedByNestedInput
  updatePostIdeas: PostIdeaUpdateManyWithoutUpdatedByNestedInput
  updatePosts: PostUpdateManyWithoutUpdatedByNestedInput
  updateRoles: RoleUpdateManyWithoutUpdatedByNestedInput
  updateTags: TagUpdateManyWithoutUpdatedByNestedInput
  updateTopics: TopicUpdateManyWithoutUpdatedByNestedInput
  updateUserVotes: UserVoteUpdateManyWithoutUpdatedByNestedInput
  updatedUsers: UserUpdateManyWithoutUpdatedByNestedInput
}

input UserUpdateWithoutCreatedUserIndustriesInput {
  approvedIdeas: IdeaUpdateManyWithoutApprovedByNestedInput
  approvedPosts: PostUpdateManyWithoutApprovedByNestedInput
  avartarUrl: NullableStringFieldUpdateOperationsInput
  backgroundUrl: NullableStringFieldUpdateOperationsInput
  code: NullableStringFieldUpdateOperationsInput
  createAwards: AwardUpdateManyWithoutCreatedByNestedInput
  createDepartments: DepartmentUpdateManyWithoutCreatedByNestedInput
  createFeedbacks: FeedbackUpdateManyWithoutCreatedByNestedInput
  createIdeas: IdeaUpdateManyWithoutCreatedByNestedInput
  createIndustries: IndustryUpdateManyWithoutCreatedByNestedInput
  createPostIdeas: PostIdeaUpdateManyWithoutCreatedByNestedInput
  createPosts: PostUpdateManyWithoutCreatedByNestedInput
  createRoles: RoleUpdateManyWithoutCreatedByNestedInput
  createTags: TagUpdateManyWithoutCreatedByNestedInput
  createTopics: TopicUpdateManyWithoutCreatedByNestedInput
  createUserVotes: UserVoteUpdateManyWithoutCreatedByNestedInput
  createdPostIdeas: PostIdeaUpdateManyWithoutUserNestedInput
  createdUserAwards: UserAwardUpdateManyWithoutUserNestedInput
  createdUserGroups: UserGroupUpdateManyWithoutUserNestedInput
  createdUserVotes: UserVoteUpdateManyWithoutUserNestedInput
  createdUsers: UserUpdateManyWithoutCreatedByNestedInput
  dateOfBirth: NullableDateTimeFieldUpdateOperationsInput
  department: DepartmentUpdateOneWithoutUsersNestedInput
  editedFeedbacks: FeedbackUpdateManyWithoutEditingByNestedInput
  editedIdeas: IdeaUpdateManyWithoutEditingByNestedInput
  editedPosts: PostUpdateManyWithoutEditingByNestedInput
  email: StringFieldUpdateOperationsInput
  fullName: NullableStringFieldUpdateOperationsInput
  gender: NullableEnumGenderFieldUpdateOperationsInput
  isAdmin: BoolFieldUpdateOperationsInput
  jobTitle: NullableStringFieldUpdateOperationsInput
  originalId: StringFieldUpdateOperationsInput
  phoneNumber: NullableStringFieldUpdateOperationsInput
  position: NullableStringFieldUpdateOperationsInput
  resolvedFeedbacks: FeedbackUpdateManyWithoutResolvedByNestedInput
  status: EnumActiveStatusFieldUpdateOperationsInput
  updateAwards: AwardUpdateManyWithoutUpdatedByNestedInput
  updateDepartments: DepartmentUpdateManyWithoutUpdatedByNestedInput
  updateFeedbacks: FeedbackUpdateManyWithoutUpdatedByNestedInput
  updateIdeas: IdeaUpdateManyWithoutUpdatedByNestedInput
  updateIndustries: IndustryUpdateManyWithoutUpdatedByNestedInput
  updatePostIdeas: PostIdeaUpdateManyWithoutUpdatedByNestedInput
  updatePosts: PostUpdateManyWithoutUpdatedByNestedInput
  updateRoles: RoleUpdateManyWithoutUpdatedByNestedInput
  updateTags: TagUpdateManyWithoutUpdatedByNestedInput
  updateTopics: TopicUpdateManyWithoutUpdatedByNestedInput
  updateUserVotes: UserVoteUpdateManyWithoutUpdatedByNestedInput
  updatedUsers: UserUpdateManyWithoutUpdatedByNestedInput
}

input UserUpdateWithoutCreatedUserVotesInput {
  approvedIdeas: IdeaUpdateManyWithoutApprovedByNestedInput
  approvedPosts: PostUpdateManyWithoutApprovedByNestedInput
  avartarUrl: NullableStringFieldUpdateOperationsInput
  backgroundUrl: NullableStringFieldUpdateOperationsInput
  code: NullableStringFieldUpdateOperationsInput
  createAwards: AwardUpdateManyWithoutCreatedByNestedInput
  createDepartments: DepartmentUpdateManyWithoutCreatedByNestedInput
  createFeedbacks: FeedbackUpdateManyWithoutCreatedByNestedInput
  createIdeas: IdeaUpdateManyWithoutCreatedByNestedInput
  createIndustries: IndustryUpdateManyWithoutCreatedByNestedInput
  createPostIdeas: PostIdeaUpdateManyWithoutCreatedByNestedInput
  createPosts: PostUpdateManyWithoutCreatedByNestedInput
  createRoles: RoleUpdateManyWithoutCreatedByNestedInput
  createTags: TagUpdateManyWithoutCreatedByNestedInput
  createTopics: TopicUpdateManyWithoutCreatedByNestedInput
  createUserVotes: UserVoteUpdateManyWithoutCreatedByNestedInput
  createdPostIdeas: PostIdeaUpdateManyWithoutUserNestedInput
  createdUserAwards: UserAwardUpdateManyWithoutUserNestedInput
  createdUserGroups: UserGroupUpdateManyWithoutUserNestedInput
  createdUserIndustries: UserIndustryUpdateManyWithoutUserNestedInput
  createdUsers: UserUpdateManyWithoutCreatedByNestedInput
  dateOfBirth: NullableDateTimeFieldUpdateOperationsInput
  department: DepartmentUpdateOneWithoutUsersNestedInput
  editedFeedbacks: FeedbackUpdateManyWithoutEditingByNestedInput
  editedIdeas: IdeaUpdateManyWithoutEditingByNestedInput
  editedPosts: PostUpdateManyWithoutEditingByNestedInput
  email: StringFieldUpdateOperationsInput
  fullName: NullableStringFieldUpdateOperationsInput
  gender: NullableEnumGenderFieldUpdateOperationsInput
  isAdmin: BoolFieldUpdateOperationsInput
  jobTitle: NullableStringFieldUpdateOperationsInput
  originalId: StringFieldUpdateOperationsInput
  phoneNumber: NullableStringFieldUpdateOperationsInput
  position: NullableStringFieldUpdateOperationsInput
  resolvedFeedbacks: FeedbackUpdateManyWithoutResolvedByNestedInput
  status: EnumActiveStatusFieldUpdateOperationsInput
  updateAwards: AwardUpdateManyWithoutUpdatedByNestedInput
  updateDepartments: DepartmentUpdateManyWithoutUpdatedByNestedInput
  updateFeedbacks: FeedbackUpdateManyWithoutUpdatedByNestedInput
  updateIdeas: IdeaUpdateManyWithoutUpdatedByNestedInput
  updateIndustries: IndustryUpdateManyWithoutUpdatedByNestedInput
  updatePostIdeas: PostIdeaUpdateManyWithoutUpdatedByNestedInput
  updatePosts: PostUpdateManyWithoutUpdatedByNestedInput
  updateRoles: RoleUpdateManyWithoutUpdatedByNestedInput
  updateTags: TagUpdateManyWithoutUpdatedByNestedInput
  updateTopics: TopicUpdateManyWithoutUpdatedByNestedInput
  updateUserVotes: UserVoteUpdateManyWithoutUpdatedByNestedInput
  updatedUsers: UserUpdateManyWithoutUpdatedByNestedInput
}

input UserUpdateWithoutDepartmentInput {
  approvedIdeas: IdeaUpdateManyWithoutApprovedByNestedInput
  approvedPosts: PostUpdateManyWithoutApprovedByNestedInput
  avartarUrl: NullableStringFieldUpdateOperationsInput
  backgroundUrl: NullableStringFieldUpdateOperationsInput
  code: NullableStringFieldUpdateOperationsInput
  createAwards: AwardUpdateManyWithoutCreatedByNestedInput
  createDepartments: DepartmentUpdateManyWithoutCreatedByNestedInput
  createFeedbacks: FeedbackUpdateManyWithoutCreatedByNestedInput
  createIdeas: IdeaUpdateManyWithoutCreatedByNestedInput
  createIndustries: IndustryUpdateManyWithoutCreatedByNestedInput
  createPostIdeas: PostIdeaUpdateManyWithoutCreatedByNestedInput
  createPosts: PostUpdateManyWithoutCreatedByNestedInput
  createRoles: RoleUpdateManyWithoutCreatedByNestedInput
  createTags: TagUpdateManyWithoutCreatedByNestedInput
  createTopics: TopicUpdateManyWithoutCreatedByNestedInput
  createUserVotes: UserVoteUpdateManyWithoutCreatedByNestedInput
  createdPostIdeas: PostIdeaUpdateManyWithoutUserNestedInput
  createdUserAwards: UserAwardUpdateManyWithoutUserNestedInput
  createdUserGroups: UserGroupUpdateManyWithoutUserNestedInput
  createdUserIndustries: UserIndustryUpdateManyWithoutUserNestedInput
  createdUserVotes: UserVoteUpdateManyWithoutUserNestedInput
  createdUsers: UserUpdateManyWithoutCreatedByNestedInput
  dateOfBirth: NullableDateTimeFieldUpdateOperationsInput
  editedFeedbacks: FeedbackUpdateManyWithoutEditingByNestedInput
  editedIdeas: IdeaUpdateManyWithoutEditingByNestedInput
  editedPosts: PostUpdateManyWithoutEditingByNestedInput
  email: StringFieldUpdateOperationsInput
  fullName: NullableStringFieldUpdateOperationsInput
  gender: NullableEnumGenderFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isAdmin: BoolFieldUpdateOperationsInput
  jobTitle: NullableStringFieldUpdateOperationsInput
  originalId: StringFieldUpdateOperationsInput
  phoneNumber: NullableStringFieldUpdateOperationsInput
  position: NullableStringFieldUpdateOperationsInput
  resolvedFeedbacks: FeedbackUpdateManyWithoutResolvedByNestedInput
  status: EnumActiveStatusFieldUpdateOperationsInput
  updateAwards: AwardUpdateManyWithoutUpdatedByNestedInput
  updateDepartments: DepartmentUpdateManyWithoutUpdatedByNestedInput
  updateFeedbacks: FeedbackUpdateManyWithoutUpdatedByNestedInput
  updateIdeas: IdeaUpdateManyWithoutUpdatedByNestedInput
  updateIndustries: IndustryUpdateManyWithoutUpdatedByNestedInput
  updatePostIdeas: PostIdeaUpdateManyWithoutUpdatedByNestedInput
  updatePosts: PostUpdateManyWithoutUpdatedByNestedInput
  updateRoles: RoleUpdateManyWithoutUpdatedByNestedInput
  updateTags: TagUpdateManyWithoutUpdatedByNestedInput
  updateTopics: TopicUpdateManyWithoutUpdatedByNestedInput
  updateUserVotes: UserVoteUpdateManyWithoutUpdatedByNestedInput
  updatedUsers: UserUpdateManyWithoutUpdatedByNestedInput
}

input UserUpdateWithoutEditedFeedbacksInput {
  approvedIdeas: IdeaUpdateManyWithoutApprovedByNestedInput
  approvedPosts: PostUpdateManyWithoutApprovedByNestedInput
  avartarUrl: NullableStringFieldUpdateOperationsInput
  backgroundUrl: NullableStringFieldUpdateOperationsInput
  code: NullableStringFieldUpdateOperationsInput
  createAwards: AwardUpdateManyWithoutCreatedByNestedInput
  createDepartments: DepartmentUpdateManyWithoutCreatedByNestedInput
  createFeedbacks: FeedbackUpdateManyWithoutCreatedByNestedInput
  createIdeas: IdeaUpdateManyWithoutCreatedByNestedInput
  createIndustries: IndustryUpdateManyWithoutCreatedByNestedInput
  createPostIdeas: PostIdeaUpdateManyWithoutCreatedByNestedInput
  createPosts: PostUpdateManyWithoutCreatedByNestedInput
  createRoles: RoleUpdateManyWithoutCreatedByNestedInput
  createTags: TagUpdateManyWithoutCreatedByNestedInput
  createTopics: TopicUpdateManyWithoutCreatedByNestedInput
  createUserVotes: UserVoteUpdateManyWithoutCreatedByNestedInput
  createdPostIdeas: PostIdeaUpdateManyWithoutUserNestedInput
  createdUserAwards: UserAwardUpdateManyWithoutUserNestedInput
  createdUserGroups: UserGroupUpdateManyWithoutUserNestedInput
  createdUserIndustries: UserIndustryUpdateManyWithoutUserNestedInput
  createdUserVotes: UserVoteUpdateManyWithoutUserNestedInput
  createdUsers: UserUpdateManyWithoutCreatedByNestedInput
  dateOfBirth: NullableDateTimeFieldUpdateOperationsInput
  department: DepartmentUpdateOneWithoutUsersNestedInput
  editedIdeas: IdeaUpdateManyWithoutEditingByNestedInput
  editedPosts: PostUpdateManyWithoutEditingByNestedInput
  email: StringFieldUpdateOperationsInput
  fullName: NullableStringFieldUpdateOperationsInput
  gender: NullableEnumGenderFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isAdmin: BoolFieldUpdateOperationsInput
  jobTitle: NullableStringFieldUpdateOperationsInput
  originalId: StringFieldUpdateOperationsInput
  phoneNumber: NullableStringFieldUpdateOperationsInput
  position: NullableStringFieldUpdateOperationsInput
  resolvedFeedbacks: FeedbackUpdateManyWithoutResolvedByNestedInput
  status: EnumActiveStatusFieldUpdateOperationsInput
  updateAwards: AwardUpdateManyWithoutUpdatedByNestedInput
  updateDepartments: DepartmentUpdateManyWithoutUpdatedByNestedInput
  updateFeedbacks: FeedbackUpdateManyWithoutUpdatedByNestedInput
  updateIdeas: IdeaUpdateManyWithoutUpdatedByNestedInput
  updateIndustries: IndustryUpdateManyWithoutUpdatedByNestedInput
  updatePostIdeas: PostIdeaUpdateManyWithoutUpdatedByNestedInput
  updatePosts: PostUpdateManyWithoutUpdatedByNestedInput
  updateRoles: RoleUpdateManyWithoutUpdatedByNestedInput
  updateTags: TagUpdateManyWithoutUpdatedByNestedInput
  updateTopics: TopicUpdateManyWithoutUpdatedByNestedInput
  updateUserVotes: UserVoteUpdateManyWithoutUpdatedByNestedInput
  updatedUsers: UserUpdateManyWithoutUpdatedByNestedInput
}

input UserUpdateWithoutEditedIdeasInput {
  approvedIdeas: IdeaUpdateManyWithoutApprovedByNestedInput
  approvedPosts: PostUpdateManyWithoutApprovedByNestedInput
  avartarUrl: NullableStringFieldUpdateOperationsInput
  backgroundUrl: NullableStringFieldUpdateOperationsInput
  code: NullableStringFieldUpdateOperationsInput
  createAwards: AwardUpdateManyWithoutCreatedByNestedInput
  createDepartments: DepartmentUpdateManyWithoutCreatedByNestedInput
  createFeedbacks: FeedbackUpdateManyWithoutCreatedByNestedInput
  createIdeas: IdeaUpdateManyWithoutCreatedByNestedInput
  createIndustries: IndustryUpdateManyWithoutCreatedByNestedInput
  createPostIdeas: PostIdeaUpdateManyWithoutCreatedByNestedInput
  createPosts: PostUpdateManyWithoutCreatedByNestedInput
  createRoles: RoleUpdateManyWithoutCreatedByNestedInput
  createTags: TagUpdateManyWithoutCreatedByNestedInput
  createTopics: TopicUpdateManyWithoutCreatedByNestedInput
  createUserVotes: UserVoteUpdateManyWithoutCreatedByNestedInput
  createdPostIdeas: PostIdeaUpdateManyWithoutUserNestedInput
  createdUserAwards: UserAwardUpdateManyWithoutUserNestedInput
  createdUserGroups: UserGroupUpdateManyWithoutUserNestedInput
  createdUserIndustries: UserIndustryUpdateManyWithoutUserNestedInput
  createdUserVotes: UserVoteUpdateManyWithoutUserNestedInput
  createdUsers: UserUpdateManyWithoutCreatedByNestedInput
  dateOfBirth: NullableDateTimeFieldUpdateOperationsInput
  department: DepartmentUpdateOneWithoutUsersNestedInput
  editedFeedbacks: FeedbackUpdateManyWithoutEditingByNestedInput
  editedPosts: PostUpdateManyWithoutEditingByNestedInput
  email: StringFieldUpdateOperationsInput
  fullName: NullableStringFieldUpdateOperationsInput
  gender: NullableEnumGenderFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isAdmin: BoolFieldUpdateOperationsInput
  jobTitle: NullableStringFieldUpdateOperationsInput
  originalId: StringFieldUpdateOperationsInput
  phoneNumber: NullableStringFieldUpdateOperationsInput
  position: NullableStringFieldUpdateOperationsInput
  resolvedFeedbacks: FeedbackUpdateManyWithoutResolvedByNestedInput
  status: EnumActiveStatusFieldUpdateOperationsInput
  updateAwards: AwardUpdateManyWithoutUpdatedByNestedInput
  updateDepartments: DepartmentUpdateManyWithoutUpdatedByNestedInput
  updateFeedbacks: FeedbackUpdateManyWithoutUpdatedByNestedInput
  updateIdeas: IdeaUpdateManyWithoutUpdatedByNestedInput
  updateIndustries: IndustryUpdateManyWithoutUpdatedByNestedInput
  updatePostIdeas: PostIdeaUpdateManyWithoutUpdatedByNestedInput
  updatePosts: PostUpdateManyWithoutUpdatedByNestedInput
  updateRoles: RoleUpdateManyWithoutUpdatedByNestedInput
  updateTags: TagUpdateManyWithoutUpdatedByNestedInput
  updateTopics: TopicUpdateManyWithoutUpdatedByNestedInput
  updateUserVotes: UserVoteUpdateManyWithoutUpdatedByNestedInput
  updatedUsers: UserUpdateManyWithoutUpdatedByNestedInput
}

input UserUpdateWithoutEditedPostsInput {
  approvedIdeas: IdeaUpdateManyWithoutApprovedByNestedInput
  approvedPosts: PostUpdateManyWithoutApprovedByNestedInput
  avartarUrl: NullableStringFieldUpdateOperationsInput
  backgroundUrl: NullableStringFieldUpdateOperationsInput
  code: NullableStringFieldUpdateOperationsInput
  createAwards: AwardUpdateManyWithoutCreatedByNestedInput
  createDepartments: DepartmentUpdateManyWithoutCreatedByNestedInput
  createFeedbacks: FeedbackUpdateManyWithoutCreatedByNestedInput
  createIdeas: IdeaUpdateManyWithoutCreatedByNestedInput
  createIndustries: IndustryUpdateManyWithoutCreatedByNestedInput
  createPostIdeas: PostIdeaUpdateManyWithoutCreatedByNestedInput
  createPosts: PostUpdateManyWithoutCreatedByNestedInput
  createRoles: RoleUpdateManyWithoutCreatedByNestedInput
  createTags: TagUpdateManyWithoutCreatedByNestedInput
  createTopics: TopicUpdateManyWithoutCreatedByNestedInput
  createUserVotes: UserVoteUpdateManyWithoutCreatedByNestedInput
  createdPostIdeas: PostIdeaUpdateManyWithoutUserNestedInput
  createdUserAwards: UserAwardUpdateManyWithoutUserNestedInput
  createdUserGroups: UserGroupUpdateManyWithoutUserNestedInput
  createdUserIndustries: UserIndustryUpdateManyWithoutUserNestedInput
  createdUserVotes: UserVoteUpdateManyWithoutUserNestedInput
  createdUsers: UserUpdateManyWithoutCreatedByNestedInput
  dateOfBirth: NullableDateTimeFieldUpdateOperationsInput
  department: DepartmentUpdateOneWithoutUsersNestedInput
  editedFeedbacks: FeedbackUpdateManyWithoutEditingByNestedInput
  editedIdeas: IdeaUpdateManyWithoutEditingByNestedInput
  email: StringFieldUpdateOperationsInput
  fullName: NullableStringFieldUpdateOperationsInput
  gender: NullableEnumGenderFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isAdmin: BoolFieldUpdateOperationsInput
  jobTitle: NullableStringFieldUpdateOperationsInput
  originalId: StringFieldUpdateOperationsInput
  phoneNumber: NullableStringFieldUpdateOperationsInput
  position: NullableStringFieldUpdateOperationsInput
  resolvedFeedbacks: FeedbackUpdateManyWithoutResolvedByNestedInput
  status: EnumActiveStatusFieldUpdateOperationsInput
  updateAwards: AwardUpdateManyWithoutUpdatedByNestedInput
  updateDepartments: DepartmentUpdateManyWithoutUpdatedByNestedInput
  updateFeedbacks: FeedbackUpdateManyWithoutUpdatedByNestedInput
  updateIdeas: IdeaUpdateManyWithoutUpdatedByNestedInput
  updateIndustries: IndustryUpdateManyWithoutUpdatedByNestedInput
  updatePostIdeas: PostIdeaUpdateManyWithoutUpdatedByNestedInput
  updatePosts: PostUpdateManyWithoutUpdatedByNestedInput
  updateRoles: RoleUpdateManyWithoutUpdatedByNestedInput
  updateTags: TagUpdateManyWithoutUpdatedByNestedInput
  updateTopics: TopicUpdateManyWithoutUpdatedByNestedInput
  updateUserVotes: UserVoteUpdateManyWithoutUpdatedByNestedInput
  updatedUsers: UserUpdateManyWithoutUpdatedByNestedInput
}

input UserUpdateWithoutResolvedFeedbacksInput {
  approvedIdeas: IdeaUpdateManyWithoutApprovedByNestedInput
  approvedPosts: PostUpdateManyWithoutApprovedByNestedInput
  avartarUrl: NullableStringFieldUpdateOperationsInput
  backgroundUrl: NullableStringFieldUpdateOperationsInput
  code: NullableStringFieldUpdateOperationsInput
  createAwards: AwardUpdateManyWithoutCreatedByNestedInput
  createDepartments: DepartmentUpdateManyWithoutCreatedByNestedInput
  createFeedbacks: FeedbackUpdateManyWithoutCreatedByNestedInput
  createIdeas: IdeaUpdateManyWithoutCreatedByNestedInput
  createIndustries: IndustryUpdateManyWithoutCreatedByNestedInput
  createPostIdeas: PostIdeaUpdateManyWithoutCreatedByNestedInput
  createPosts: PostUpdateManyWithoutCreatedByNestedInput
  createRoles: RoleUpdateManyWithoutCreatedByNestedInput
  createTags: TagUpdateManyWithoutCreatedByNestedInput
  createTopics: TopicUpdateManyWithoutCreatedByNestedInput
  createUserVotes: UserVoteUpdateManyWithoutCreatedByNestedInput
  createdPostIdeas: PostIdeaUpdateManyWithoutUserNestedInput
  createdUserAwards: UserAwardUpdateManyWithoutUserNestedInput
  createdUserGroups: UserGroupUpdateManyWithoutUserNestedInput
  createdUserIndustries: UserIndustryUpdateManyWithoutUserNestedInput
  createdUserVotes: UserVoteUpdateManyWithoutUserNestedInput
  createdUsers: UserUpdateManyWithoutCreatedByNestedInput
  dateOfBirth: NullableDateTimeFieldUpdateOperationsInput
  department: DepartmentUpdateOneWithoutUsersNestedInput
  editedFeedbacks: FeedbackUpdateManyWithoutEditingByNestedInput
  editedIdeas: IdeaUpdateManyWithoutEditingByNestedInput
  editedPosts: PostUpdateManyWithoutEditingByNestedInput
  email: StringFieldUpdateOperationsInput
  fullName: NullableStringFieldUpdateOperationsInput
  gender: NullableEnumGenderFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isAdmin: BoolFieldUpdateOperationsInput
  jobTitle: NullableStringFieldUpdateOperationsInput
  originalId: StringFieldUpdateOperationsInput
  phoneNumber: NullableStringFieldUpdateOperationsInput
  position: NullableStringFieldUpdateOperationsInput
  status: EnumActiveStatusFieldUpdateOperationsInput
  updateAwards: AwardUpdateManyWithoutUpdatedByNestedInput
  updateDepartments: DepartmentUpdateManyWithoutUpdatedByNestedInput
  updateFeedbacks: FeedbackUpdateManyWithoutUpdatedByNestedInput
  updateIdeas: IdeaUpdateManyWithoutUpdatedByNestedInput
  updateIndustries: IndustryUpdateManyWithoutUpdatedByNestedInput
  updatePostIdeas: PostIdeaUpdateManyWithoutUpdatedByNestedInput
  updatePosts: PostUpdateManyWithoutUpdatedByNestedInput
  updateRoles: RoleUpdateManyWithoutUpdatedByNestedInput
  updateTags: TagUpdateManyWithoutUpdatedByNestedInput
  updateTopics: TopicUpdateManyWithoutUpdatedByNestedInput
  updateUserVotes: UserVoteUpdateManyWithoutUpdatedByNestedInput
  updatedUsers: UserUpdateManyWithoutUpdatedByNestedInput
}

input UserUpdateWithoutUpdatedByInput {
  approvedIdeas: IdeaUpdateManyWithoutApprovedByNestedInput
  approvedPosts: PostUpdateManyWithoutApprovedByNestedInput
  avartarUrl: NullableStringFieldUpdateOperationsInput
  backgroundUrl: NullableStringFieldUpdateOperationsInput
  code: NullableStringFieldUpdateOperationsInput
  createAwards: AwardUpdateManyWithoutCreatedByNestedInput
  createDepartments: DepartmentUpdateManyWithoutCreatedByNestedInput
  createFeedbacks: FeedbackUpdateManyWithoutCreatedByNestedInput
  createIdeas: IdeaUpdateManyWithoutCreatedByNestedInput
  createIndustries: IndustryUpdateManyWithoutCreatedByNestedInput
  createPostIdeas: PostIdeaUpdateManyWithoutCreatedByNestedInput
  createPosts: PostUpdateManyWithoutCreatedByNestedInput
  createRoles: RoleUpdateManyWithoutCreatedByNestedInput
  createTags: TagUpdateManyWithoutCreatedByNestedInput
  createTopics: TopicUpdateManyWithoutCreatedByNestedInput
  createUserVotes: UserVoteUpdateManyWithoutCreatedByNestedInput
  createdPostIdeas: PostIdeaUpdateManyWithoutUserNestedInput
  createdUserAwards: UserAwardUpdateManyWithoutUserNestedInput
  createdUserGroups: UserGroupUpdateManyWithoutUserNestedInput
  createdUserIndustries: UserIndustryUpdateManyWithoutUserNestedInput
  createdUserVotes: UserVoteUpdateManyWithoutUserNestedInput
  createdUsers: UserUpdateManyWithoutCreatedByNestedInput
  dateOfBirth: NullableDateTimeFieldUpdateOperationsInput
  department: DepartmentUpdateOneWithoutUsersNestedInput
  editedFeedbacks: FeedbackUpdateManyWithoutEditingByNestedInput
  editedIdeas: IdeaUpdateManyWithoutEditingByNestedInput
  editedPosts: PostUpdateManyWithoutEditingByNestedInput
  email: StringFieldUpdateOperationsInput
  fullName: NullableStringFieldUpdateOperationsInput
  gender: NullableEnumGenderFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isAdmin: BoolFieldUpdateOperationsInput
  jobTitle: NullableStringFieldUpdateOperationsInput
  originalId: StringFieldUpdateOperationsInput
  phoneNumber: NullableStringFieldUpdateOperationsInput
  position: NullableStringFieldUpdateOperationsInput
  resolvedFeedbacks: FeedbackUpdateManyWithoutResolvedByNestedInput
  status: EnumActiveStatusFieldUpdateOperationsInput
  updateAwards: AwardUpdateManyWithoutUpdatedByNestedInput
  updateDepartments: DepartmentUpdateManyWithoutUpdatedByNestedInput
  updateFeedbacks: FeedbackUpdateManyWithoutUpdatedByNestedInput
  updateIdeas: IdeaUpdateManyWithoutUpdatedByNestedInput
  updateIndustries: IndustryUpdateManyWithoutUpdatedByNestedInput
  updatePostIdeas: PostIdeaUpdateManyWithoutUpdatedByNestedInput
  updatePosts: PostUpdateManyWithoutUpdatedByNestedInput
  updateRoles: RoleUpdateManyWithoutUpdatedByNestedInput
  updateTags: TagUpdateManyWithoutUpdatedByNestedInput
  updateTopics: TopicUpdateManyWithoutUpdatedByNestedInput
  updateUserVotes: UserVoteUpdateManyWithoutUpdatedByNestedInput
  updatedUsers: UserUpdateManyWithoutUpdatedByNestedInput
}

input UserUpsertWithWhereUniqueWithoutCreatedByInput {
  create: UserCreateWithoutCreatedByInput!
  update: UserUpdateWithoutCreatedByInput!
  where: UserWhereUniqueInput!
}

input UserUpsertWithWhereUniqueWithoutDepartmentInput {
  create: UserCreateWithoutDepartmentInput!
  update: UserUpdateWithoutDepartmentInput!
  where: UserWhereUniqueInput!
}

input UserUpsertWithWhereUniqueWithoutUpdatedByInput {
  create: UserCreateWithoutUpdatedByInput!
  update: UserUpdateWithoutUpdatedByInput!
  where: UserWhereUniqueInput!
}

input UserUpsertWithoutApprovedIdeasInput {
  create: UserCreateWithoutApprovedIdeasInput!
  update: UserUpdateWithoutApprovedIdeasInput!
}

input UserUpsertWithoutApprovedPostsInput {
  create: UserCreateWithoutApprovedPostsInput!
  update: UserUpdateWithoutApprovedPostsInput!
}

input UserUpsertWithoutCreatedPostIdeasInput {
  create: UserCreateWithoutCreatedPostIdeasInput!
  update: UserUpdateWithoutCreatedPostIdeasInput!
}

input UserUpsertWithoutCreatedUserAwardsInput {
  create: UserCreateWithoutCreatedUserAwardsInput!
  update: UserUpdateWithoutCreatedUserAwardsInput!
}

input UserUpsertWithoutCreatedUserIndustriesInput {
  create: UserCreateWithoutCreatedUserIndustriesInput!
  update: UserUpdateWithoutCreatedUserIndustriesInput!
}

input UserUpsertWithoutCreatedUserVotesInput {
  create: UserCreateWithoutCreatedUserVotesInput!
  update: UserUpdateWithoutCreatedUserVotesInput!
}

input UserUpsertWithoutEditedFeedbacksInput {
  create: UserCreateWithoutEditedFeedbacksInput!
  update: UserUpdateWithoutEditedFeedbacksInput!
}

input UserUpsertWithoutEditedIdeasInput {
  create: UserCreateWithoutEditedIdeasInput!
  update: UserUpdateWithoutEditedIdeasInput!
}

input UserUpsertWithoutEditedPostsInput {
  create: UserCreateWithoutEditedPostsInput!
  update: UserUpdateWithoutEditedPostsInput!
}

input UserUpsertWithoutResolvedFeedbacksInput {
  create: UserCreateWithoutResolvedFeedbacksInput!
  update: UserUpdateWithoutResolvedFeedbacksInput!
}

type UserVote {
  createdAt: DateTime!
  createdBy: User
  createdById: String
  deletedAt: DateTime
  description: String
  id: ID!
  idea: Idea!
  ideaId: String!
  post: Post!
  postId: String!
  updatedAt: DateTime!
  updatedBy: User
  updatedById: String
  user: User!
  userId: String!
}

input UserVoteCreateManyCreatedByInput {
  description: String
  ideaId: String!
  postId: String!
  userId: String!
}

input UserVoteCreateManyCreatedByInputEnvelope {
  data: [UserVoteCreateManyCreatedByInput!]!
  skipDuplicates: Boolean
}

input UserVoteCreateManyIdeaInput {
  description: String
  postId: String!
  userId: String!
}

input UserVoteCreateManyIdeaInputEnvelope {
  data: [UserVoteCreateManyIdeaInput!]!
  skipDuplicates: Boolean
}

input UserVoteCreateManyPostInput {
  description: String
  ideaId: String!
  userId: String!
}

input UserVoteCreateManyPostInputEnvelope {
  data: [UserVoteCreateManyPostInput!]!
  skipDuplicates: Boolean
}

input UserVoteCreateManyUpdatedByInput {
  description: String
  ideaId: String!
  postId: String!
  userId: String!
}

input UserVoteCreateManyUpdatedByInputEnvelope {
  data: [UserVoteCreateManyUpdatedByInput!]!
  skipDuplicates: Boolean
}

input UserVoteCreateManyUserInput {
  description: String
  ideaId: String!
  postId: String!
}

input UserVoteCreateManyUserInputEnvelope {
  data: [UserVoteCreateManyUserInput!]!
  skipDuplicates: Boolean
}

input UserVoteCreateNestedManyWithoutCreatedByInput {
  connect: [UserVoteWhereUniqueInput!]
}

input UserVoteCreateNestedManyWithoutIdeaInput {
  connect: [UserVoteWhereUniqueInput!]
}

input UserVoteCreateNestedManyWithoutPostInput {
  connect: [UserVoteWhereUniqueInput!]
}

input UserVoteCreateNestedManyWithoutUpdatedByInput {
  connect: [UserVoteWhereUniqueInput!]
}

input UserVoteCreateNestedManyWithoutUserInput {
  connect: [UserVoteWhereUniqueInput!]
}

input UserVoteCreateOrConnectWithoutCreatedByInput {
  create: UserVoteCreateWithoutCreatedByInput!
  where: UserVoteWhereUniqueInput!
}

input UserVoteCreateOrConnectWithoutIdeaInput {
  create: UserVoteCreateWithoutIdeaInput!
  where: UserVoteWhereUniqueInput!
}

input UserVoteCreateOrConnectWithoutPostInput {
  create: UserVoteCreateWithoutPostInput!
  where: UserVoteWhereUniqueInput!
}

input UserVoteCreateOrConnectWithoutUpdatedByInput {
  create: UserVoteCreateWithoutUpdatedByInput!
  where: UserVoteWhereUniqueInput!
}

input UserVoteCreateOrConnectWithoutUserInput {
  create: UserVoteCreateWithoutUserInput!
  where: UserVoteWhereUniqueInput!
}

input UserVoteCreateWithoutCreatedByInput {
  description: String
  idea: IdeaCreateNestedOneWithoutCreatedUserVotesInput!
  post: PostCreateNestedOneWithoutCreatedUserVotesInput!
  user: UserCreateNestedOneWithoutCreatedUserVotesInput!
}

input UserVoteCreateWithoutIdeaInput {
  description: String
  post: PostCreateNestedOneWithoutCreatedUserVotesInput!
  user: UserCreateNestedOneWithoutCreatedUserVotesInput!
}

input UserVoteCreateWithoutPostInput {
  description: String
  idea: IdeaCreateNestedOneWithoutCreatedUserVotesInput!
  user: UserCreateNestedOneWithoutCreatedUserVotesInput!
}

input UserVoteCreateWithoutUpdatedByInput {
  description: String
  idea: IdeaCreateNestedOneWithoutCreatedUserVotesInput!
  post: PostCreateNestedOneWithoutCreatedUserVotesInput!
  user: UserCreateNestedOneWithoutCreatedUserVotesInput!
}

input UserVoteCreateWithoutUserInput {
  description: String
  idea: IdeaCreateNestedOneWithoutCreatedUserVotesInput!
  post: PostCreateNestedOneWithoutCreatedUserVotesInput!
}

input UserVoteListRelationFilter {
  every: UserVoteWhereInput
  none: UserVoteWhereInput
  some: UserVoteWhereInput
}

input UserVoteOrderByRelationAggregateInput {
  _count: SortOrder
}

input UserVoteScalarWhereInput {
  AND: [UserVoteScalarWhereInput!]
  NOT: [UserVoteScalarWhereInput!]
  OR: [UserVoteScalarWhereInput!]
  createdAt: DateTimeFilter
  createdById: StringNullableFilter
  deletedAt: [DateTimeNullableFilter!] = null
  description: StringNullableFilter
  id: StringFilter
  ideaId: StringFilter
  postId: StringFilter
  updatedAt: DateTimeFilter
  updatedById: StringNullableFilter
  userId: StringFilter
}

input UserVoteUpdateManyMutationInput {
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
}

input UserVoteUpdateManyWithWhereWithoutCreatedByInput {
  data: UserVoteUpdateManyMutationInput!
  where: UserVoteScalarWhereInput!
}

input UserVoteUpdateManyWithWhereWithoutIdeaInput {
  data: UserVoteUpdateManyMutationInput!
  where: UserVoteScalarWhereInput!
}

input UserVoteUpdateManyWithWhereWithoutPostInput {
  data: UserVoteUpdateManyMutationInput!
  where: UserVoteScalarWhereInput!
}

input UserVoteUpdateManyWithWhereWithoutUpdatedByInput {
  data: UserVoteUpdateManyMutationInput!
  where: UserVoteScalarWhereInput!
}

input UserVoteUpdateManyWithWhereWithoutUserInput {
  data: UserVoteUpdateManyMutationInput!
  where: UserVoteScalarWhereInput!
}

input UserVoteUpdateManyWithoutCreatedByNestedInput {
  connect: [UserVoteWhereUniqueInput!]
  connectOrCreate: [UserVoteCreateOrConnectWithoutCreatedByInput!]
  create: [UserVoteCreateWithoutCreatedByInput!]
  createMany: UserVoteCreateManyCreatedByInputEnvelope
  delete: [UserVoteWhereUniqueInput!]
  deleteMany: [UserVoteScalarWhereInput!]
  disconnect: [UserVoteWhereUniqueInput!]
  set: [UserVoteWhereUniqueInput!]
  update: [UserVoteUpdateWithWhereUniqueWithoutCreatedByInput!]
  updateMany: [UserVoteUpdateManyWithWhereWithoutCreatedByInput!]
  upsert: [UserVoteUpsertWithWhereUniqueWithoutCreatedByInput!]
}

input UserVoteUpdateManyWithoutIdeaNestedInput {
  connect: [UserVoteWhereUniqueInput!]
  connectOrCreate: [UserVoteCreateOrConnectWithoutIdeaInput!]
  create: [UserVoteCreateWithoutIdeaInput!]
  createMany: UserVoteCreateManyIdeaInputEnvelope
  delete: [UserVoteWhereUniqueInput!]
  deleteMany: [UserVoteScalarWhereInput!]
  disconnect: [UserVoteWhereUniqueInput!]
  set: [UserVoteWhereUniqueInput!]
  update: [UserVoteUpdateWithWhereUniqueWithoutIdeaInput!]
  updateMany: [UserVoteUpdateManyWithWhereWithoutIdeaInput!]
  upsert: [UserVoteUpsertWithWhereUniqueWithoutIdeaInput!]
}

input UserVoteUpdateManyWithoutPostNestedInput {
  connect: [UserVoteWhereUniqueInput!]
  connectOrCreate: [UserVoteCreateOrConnectWithoutPostInput!]
  create: [UserVoteCreateWithoutPostInput!]
  createMany: UserVoteCreateManyPostInputEnvelope
  delete: [UserVoteWhereUniqueInput!]
  deleteMany: [UserVoteScalarWhereInput!]
  disconnect: [UserVoteWhereUniqueInput!]
  set: [UserVoteWhereUniqueInput!]
  update: [UserVoteUpdateWithWhereUniqueWithoutPostInput!]
  updateMany: [UserVoteUpdateManyWithWhereWithoutPostInput!]
  upsert: [UserVoteUpsertWithWhereUniqueWithoutPostInput!]
}

input UserVoteUpdateManyWithoutUpdatedByNestedInput {
  connect: [UserVoteWhereUniqueInput!]
  connectOrCreate: [UserVoteCreateOrConnectWithoutUpdatedByInput!]
  create: [UserVoteCreateWithoutUpdatedByInput!]
  createMany: UserVoteCreateManyUpdatedByInputEnvelope
  delete: [UserVoteWhereUniqueInput!]
  deleteMany: [UserVoteScalarWhereInput!]
  disconnect: [UserVoteWhereUniqueInput!]
  set: [UserVoteWhereUniqueInput!]
  update: [UserVoteUpdateWithWhereUniqueWithoutUpdatedByInput!]
  updateMany: [UserVoteUpdateManyWithWhereWithoutUpdatedByInput!]
  upsert: [UserVoteUpsertWithWhereUniqueWithoutUpdatedByInput!]
}

input UserVoteUpdateManyWithoutUserNestedInput {
  connect: [UserVoteWhereUniqueInput!]
  connectOrCreate: [UserVoteCreateOrConnectWithoutUserInput!]
  create: [UserVoteCreateWithoutUserInput!]
  createMany: UserVoteCreateManyUserInputEnvelope
  delete: [UserVoteWhereUniqueInput!]
  deleteMany: [UserVoteScalarWhereInput!]
  disconnect: [UserVoteWhereUniqueInput!]
  set: [UserVoteWhereUniqueInput!]
  update: [UserVoteUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [UserVoteUpdateManyWithWhereWithoutUserInput!]
  upsert: [UserVoteUpsertWithWhereUniqueWithoutUserInput!]
}

input UserVoteUpdateWithWhereUniqueWithoutCreatedByInput {
  data: UserVoteUpdateWithoutCreatedByInput!
  where: UserVoteWhereUniqueInput!
}

input UserVoteUpdateWithWhereUniqueWithoutIdeaInput {
  data: UserVoteUpdateWithoutIdeaInput!
  where: UserVoteWhereUniqueInput!
}

input UserVoteUpdateWithWhereUniqueWithoutPostInput {
  data: UserVoteUpdateWithoutPostInput!
  where: UserVoteWhereUniqueInput!
}

input UserVoteUpdateWithWhereUniqueWithoutUpdatedByInput {
  data: UserVoteUpdateWithoutUpdatedByInput!
  where: UserVoteWhereUniqueInput!
}

input UserVoteUpdateWithWhereUniqueWithoutUserInput {
  data: UserVoteUpdateWithoutUserInput!
  where: UserVoteWhereUniqueInput!
}

input UserVoteUpdateWithoutCreatedByInput {
  description: NullableStringFieldUpdateOperationsInput
  idea: IdeaUpdateOneRequiredWithoutCreatedUserVotesNestedInput
  post: PostUpdateOneRequiredWithoutCreatedUserVotesNestedInput
  user: UserUpdateOneRequiredWithoutCreatedUserVotesNestedInput
}

input UserVoteUpdateWithoutIdeaInput {
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  post: PostUpdateOneRequiredWithoutCreatedUserVotesNestedInput
  user: UserUpdateOneRequiredWithoutCreatedUserVotesNestedInput
}

input UserVoteUpdateWithoutPostInput {
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  idea: IdeaUpdateOneRequiredWithoutCreatedUserVotesNestedInput
  user: UserUpdateOneRequiredWithoutCreatedUserVotesNestedInput
}

input UserVoteUpdateWithoutUpdatedByInput {
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  idea: IdeaUpdateOneRequiredWithoutCreatedUserVotesNestedInput
  post: PostUpdateOneRequiredWithoutCreatedUserVotesNestedInput
  user: UserUpdateOneRequiredWithoutCreatedUserVotesNestedInput
}

input UserVoteUpdateWithoutUserInput {
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  idea: IdeaUpdateOneRequiredWithoutCreatedUserVotesNestedInput
  post: PostUpdateOneRequiredWithoutCreatedUserVotesNestedInput
}

input UserVoteUpsertWithWhereUniqueWithoutCreatedByInput {
  create: UserVoteCreateWithoutCreatedByInput!
  update: UserVoteUpdateWithoutCreatedByInput!
  where: UserVoteWhereUniqueInput!
}

input UserVoteUpsertWithWhereUniqueWithoutIdeaInput {
  create: UserVoteCreateWithoutIdeaInput!
  update: UserVoteUpdateWithoutIdeaInput!
  where: UserVoteWhereUniqueInput!
}

input UserVoteUpsertWithWhereUniqueWithoutPostInput {
  create: UserVoteCreateWithoutPostInput!
  update: UserVoteUpdateWithoutPostInput!
  where: UserVoteWhereUniqueInput!
}

input UserVoteUpsertWithWhereUniqueWithoutUpdatedByInput {
  create: UserVoteCreateWithoutUpdatedByInput!
  update: UserVoteUpdateWithoutUpdatedByInput!
  where: UserVoteWhereUniqueInput!
}

input UserVoteUpsertWithWhereUniqueWithoutUserInput {
  create: UserVoteCreateWithoutUserInput!
  update: UserVoteUpdateWithoutUserInput!
  where: UserVoteWhereUniqueInput!
}

input UserVoteWhereInput {
  AND: [UserVoteWhereInput!]
  NOT: [UserVoteWhereInput!]
  OR: [UserVoteWhereInput!]
  createdAt: DateTimeFilter
  createdBy: UserWhereInput
  createdById: StringNullableFilter
  deletedAt: [DateTimeNullableFilter!] = null
  description: StringNullableFilter
  id: StringFilter
  idea: IdeaWhereInput
  ideaId: StringFilter
  post: PostWhereInput
  postId: StringFilter
  updatedAt: DateTimeFilter
  updatedBy: UserWhereInput
  updatedById: StringNullableFilter
  user: UserWhereInput
  userId: StringFilter
}

input UserVoteWhereUniqueInput {
  id: String
}

input UserWhereInput {
  AND: [UserWhereInput!]
  NOT: [UserWhereInput!]
  OR: [UserWhereInput!]
  approvedIdeas: IdeaListRelationFilter
  approvedPosts: PostListRelationFilter
  avartarUrl: StringNullableFilter
  backgroundUrl: StringNullableFilter
  code: StringNullableFilter
  createAwards: AwardListRelationFilter
  createDepartments: DepartmentListRelationFilter
  createFeedbacks: FeedbackListRelationFilter
  createIdeas: IdeaListRelationFilter
  createIndustries: IndustryListRelationFilter
  createPostIdeas: PostIdeaListRelationFilter
  createPosts: PostListRelationFilter
  createRoles: RoleListRelationFilter
  createTags: TagListRelationFilter
  createTopics: TopicListRelationFilter
  createUserVotes: UserVoteListRelationFilter
  createdAt: DateTimeFilter
  createdBy: UserWhereInput
  createdById: StringNullableFilter
  createdPostIdeas: PostIdeaListRelationFilter
  createdUserAwards: UserAwardListRelationFilter
  createdUserGroups: UserGroupListRelationFilter
  createdUserIndustries: UserIndustryListRelationFilter
  createdUserVotes: UserVoteListRelationFilter
  createdUsers: UserListRelationFilter
  dateOfBirth: DateTimeNullableFilter
  deletedAt: [DateTimeNullableFilter!] = null
  department: DepartmentWhereInput
  departmentId: StringNullableFilter
  editedFeedbacks: FeedbackListRelationFilter
  editedIdeas: IdeaListRelationFilter
  editedPosts: PostListRelationFilter
  email: StringFilter
  fullName: StringNullableFilter
  gender: EnumGenderNullableFilter
  id: StringFilter
  isAdmin: BoolFilter
  jobTitle: StringNullableFilter
  originalId: StringFilter
  password: StringNullableFilter
  phoneNumber: StringNullableFilter
  position: StringNullableFilter
  resolvedFeedbacks: FeedbackListRelationFilter
  status: EnumActiveStatusFilter
  updateAwards: AwardListRelationFilter
  updateDepartments: DepartmentListRelationFilter
  updateFeedbacks: FeedbackListRelationFilter
  updateIdeas: IdeaListRelationFilter
  updateIndustries: IndustryListRelationFilter
  updatePostIdeas: PostIdeaListRelationFilter
  updatePosts: PostListRelationFilter
  updateRoles: RoleListRelationFilter
  updateTags: TagListRelationFilter
  updateTopics: TopicListRelationFilter
  updateUserVotes: UserVoteListRelationFilter
  updatedAt: DateTimeFilter
  updatedBy: UserWhereInput
  updatedById: StringNullableFilter
  updatedUsers: UserListRelationFilter
}

input UserWhereUniqueInput {
  code: String
  email: String
  id: String
  originalId: String
}
